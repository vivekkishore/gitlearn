[{"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Farecard", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance \u2013 Payment during Peak hours after reaching Off Peak Daily Cap outside of Transfer Window on SA Tool", "Test_Scnario": "Fare Payment during Peak hours after reaching Off Peak Daily Cap", "Test_Sce_Description": "Verify that the system correctly calculates and deducts the fare from the ePurse balance when a fare payment is made during peak hours after the off peak daily cap has been reached and the farecard is outside of the transfer window."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Farecard", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance \u2013 Payment during Peak hours after reaching Off Peak Daily Cap outside of Transfer Window on SA Tool", "Test_Scnario": "Fare Payment with Premium Service Class and Special Event Transfer Product", "Test_Sce_Description": "Verify that the system correctly calculates and deducts the fare from the ePurse balance when a fare payment is made on a premium service route/location after previously riding on a Special Event service route and the tap is within the transfer window."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Farecard", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance \u2013 Payment during Peak hours after reaching Off Peak Daily Cap outside of Transfer Window on SA Tool", "Test_Scnario": "Fare Payment with Non-Adult Concession", "Test_Sce_Description": "Verify that the system correctly calculates and deducts the fare from the ePurse balance when a fare payment is made and the customer's farecard has a valid Non-Adult concession."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Farecard", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance \u2013 Payment during Peak hours after reaching Off Peak Daily Cap outside of Transfer Window on SA Tool", "Test_Scnario": "Fare Payment with Child Concession", "Test_Sce_Description": "Verify that the system correctly calculates and deducts the fare from the ePurse balance when a fare payment is made and the customer's farecard has a valid Child concession."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Farecard", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance \u2013 Payment during Peak hours after reaching Off Peak Daily Cap outside of Transfer Window on SA Tool", "Test_Scnario": "Fare Payment Resulting from Failed Inspection", "Test_Sce_Description": "Verify that the system correctly calculates and deducts the fare from the ePurse balance when a fare payment is made as a result of a failed inspection."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Farecard", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance \u2013 Payment during Peak hours after reaching Off Peak Daily Cap outside of Transfer Window on SA Tool", "Test_Scnario": "Performance of Fare Payment Process", "Test_Sce_Description": "Verify that the fare payment process is completed within the acceptable time frame and does not cause any delays or disruptions in the service."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Farecard", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance \u2013 Payment during Peak hours after reaching Off Peak Daily Cap outside of Transfer Window on SA Tool", "Test_Scnario": "Security of Fare Payment Process", "Test_Sce_Description": "Verify that the fare payment process is secure and does not expose any sensitive customer information or allow for any unauthorized transactions."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Farecard", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance \u2013 Premium Service Route with Transfer where the Premium fare is higher than the Special Event fare on SA Tool", "Test_Scnario": "Premium Fare Higher Than Special Event Fare", "Test_Sce_Description": "Verify that the system correctly calculates and deducts the fare from the ePurse when a customer taps on a premium service route after previously riding on a Special Event service route within the transfer window. The fare deducted should be the difference between the premium fare and the special event fare."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Farecard", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance \u2013 Premium Service Route with Transfer where the Premium fare is higher than the Special Event fare on SA Tool", "Test_Scnario": "Fare Deduction Communication", "Test_Sce_Description": "Verify that the fare deduction is correctly communicated back to the SA Tool after the ATS computes and deducts the fare from the Virtual Card E-Purse."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Farecard", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance \u2013 Premium Service Route with Transfer where the Premium fare is higher than the Special Event fare on SA Tool", "Test_Scnario": "Transfer Print Status Display", "Test_Sce_Description": "Verify that the SA Tool accurately displays the transfer print status if the farecard is queried. The SA Tool should set the POP Print Flag to 0."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Farecard", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance \u2013 Premium Service Route with Transfer where the Premium fare is higher than the Special Event fare on SA Tool", "Test_Scnario": "Valid Special Event Transfer Product", "Test_Sce_Description": "Verify that the system correctly identifies and accepts a farecard with a valid Special Event Transfer Product."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Farecard", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance \u2013 Premium Service Route with Transfer where the Premium fare is higher than the Special Event fare on SA Tool", "Test_Scnario": "Transfer Window Validation", "Test_Sce_Description": "Verify that the system correctly identifies if the tap is within the Transfer Window."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Farecard", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance \u2013 Premium Service Route with Transfer where the Premium fare is higher than the Special Event fare on SA Tool", "Test_Scnario": "Service Class Identification", "Test_Sce_Description": "Verify that the system correctly identifies the Service Class as Premium."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Farecard", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance \u2013 Premium Service Route with Transfer where the Premium fare is higher than the Special Event fare on SA Tool", "Test_Scnario": "Performance Test", "Test_Sce_Description": "Verify that the system performs efficiently under load, by simulating multiple fare payments being processed simultaneously."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Farecard", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance \u2013 Premium Service Route with Transfer where the Premium fare is higher than the Special Event fare on SA Tool", "Test_Scnario": "Security Test", "Test_Sce_Description": "Verify that the system securely processes the fare payment, ensuring that customer data is protected and that the transaction is secure."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Farecard", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance \u2013 Premium Service Route with Transfer where the Premium fare is lower than the Special Event fare on SA Tool", "Test_Scnario": "Verify fare computation and deduction for Premium Service Route with lower fare than Special Event", "Test_Sce_Description": "This scenario is to test if the ATS correctly computes the fare and deducts the amount from the Virtual Card E-Purse when a customer taps on a premium service route/location after previously riding on a Special Event service route within the transfer window. The fare for the premium service route is lower than the Special Event fare. The system should allow a free transfer."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Farecard", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance \u2013 Premium Service Route with Transfer where the Premium fare is lower than the Special Event fare on SA Tool", "Test_Scnario": "Verify communication back to SA Tool after fare deduction", "Test_Sce_Description": "This scenario is to test if the ATS communicates back to the SA Tool after the fare is computed and deducted from the Virtual Card E-Purse. The SA Tool should display the updated balance."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Farecard", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance \u2013 Premium Service Route with Transfer where the Premium fare is lower than the Special Event fare on SA Tool", "Test_Scnario": "Verify POP Print Flag setting", "Test_Sce_Description": "This scenario is to test if the SA Tool sets the POP Print Flag to 0 to ensure that the device accurately displays the transfer print status if the farecard is queried. The system should not print a proof of payment."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Farecard", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance \u2013 Premium Service Route with Transfer where the Premium fare is lower than the Special Event fare on SA Tool", "Test_Scnario": "Verify fare computation and deduction during Peak hours after reaching Off Peak Daily Cap", "Test_Sce_Description": "This scenario is to test if the ATS correctly computes the fare and deducts the amount from the Virtual Card E-Purse when a customer taps during peak hours after previously reaching off peak daily cap outside the transfer window. The system should allow a fare payment."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Farecard", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance \u2013 Premium Service Route with Transfer where the Premium fare is lower than the Special Event fare on SA Tool", "Test_Scnario": "Verify fare computation and deduction for Premium Service Route with higher fare than Special Event", "Test_Sce_Description": "This scenario is to test if the ATS correctly computes the fare and deducts the amount from the Virtual Card E-Purse when a customer taps on a premium service route/location after previously riding on a Special Event service route within the transfer window. The fare for the premium service route is higher than the Special Event fare. The system should allow a fare upgrade."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Farecard", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance \u2013 Premium Service Route with Transfer where the Premium fare is lower than the Special Event fare on SA Tool", "Test_Scnario": "Verify system performance under high load", "Test_Sce_Description": "This scenario is to test the system performance when multiple fare payments are being processed simultaneously. The system should be able to handle high load without any degradation in performance."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Farecard", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance \u2013 Premium Service Route with Transfer where the Premium fare is lower than the Special Event fare on SA Tool", "Test_Scnario": "Verify system security during fare payment", "Test_Sce_Description": "This scenario is to test if the system securely processes the fare payment and protects the customer's financial information. The system should not expose any sensitive information during the transaction."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Farecard", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance - Customer has a Valid Non-Adult Concession on their Farecard", "Test_Scnario": "Validating Non-Adult, Non-Child, Non-discreet concession", "Test_Sce_Description": "This scenario is to validate that the SA Tool correctly identifies and processes a valid Non-Adult, Non-Child, Non-discreet concession. The tool should correctly deduct the concession from the customer's Farecard."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Farecard", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance - Customer has a Valid Non-Adult Concession on their Farecard", "Test_Scnario": "Farecard with insufficient ePurse balance", "Test_Sce_Description": "This scenario is to validate that the SA Tool correctly handles a situation where the customer's ePurse balance is less than the fare amount. The tool should put the Farecard into overdraft (negative balance)."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Farecard", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance - Customer has a Valid Non-Adult Concession on their Farecard", "Test_Scnario": "Processing valid transfer product", "Test_Sce_Description": "This scenario is to validate that the SA Tool correctly identifies and processes a valid transfer product on the customer's Farecard. The tool should compute the free transfer."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Farecard", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance - Customer has a Valid Non-Adult Concession on their Farecard", "Test_Scnario": "Inter-agency transfer product processing", "Test_Sce_Description": "This scenario is to validate that the SA Tool correctly identifies and processes a valid transfer product from another transit agency. The tool should compute the fare based on the transfer product and the transfer agreement between the transit agencies."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Farecard", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance - Customer has a Valid Non-Adult Concession on their Farecard", "Test_Scnario": "Autoload threshold processing", "Test_Sce_Description": "This scenario is to validate that the SA Tool correctly identifies when the ePurse balance (after deducting the travel fare) is under the Autoload threshold. The tool should add the Autoload amount to the ePurse balance."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Farecard", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance - Customer has a Valid Non-Adult Concession on their Farecard", "Test_Scnario": "Processing Farecard on the Action or Load Value List", "Test_Sce_Description": "This scenario is to validate that the SA Tool correctly identifies and processes a Farecard that is on the Action or Load Value List. The tool should update the Farecard accordingly."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Farecard", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance - Customer has a Valid Non-Adult Concession on their Farecard", "Test_Scnario": "Handling unreadable Virtual Card", "Test_Sce_Description": "This scenario is to validate that the SA Tool correctly handles a situation where the Virtual Card is unreadable. The tool should indicate to the operator that the Virtual Card is unreadable."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Farecard", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance - Customer has a Valid Non-Adult Concession on their Farecard", "Test_Scnario": "Processing Non-Adult concession on Virtual Card", "Test_Sce_Description": "This scenario is to validate that the SA Tool correctly identifies and processes a valid Non-Adult concession on the customer's Virtual Card. The tool should show the successful fare payment screen for non-adult concession."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Farecard", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance - Customer has a Valid Non-Adult Concession on their Farecard", "Test_Scnario": "Handling Virtual Card with insufficient ePurse balance", "Test_Sce_Description": "This scenario is to validate that the SA Tool correctly handles a situation where the customer's Virtual Card ePurse balance is less than the fare amount. The tool should put the Virtual Card into overdraft."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Farecard", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance - Customer has a Valid Non-Adult Concession on their Farecard", "Test_Scnario": "Processing valid transfer product on Virtual Card", "Test_Sce_Description": "This scenario is to validate that the SA Tool correctly identifies and processes a valid transfer product on the customer's Virtual Card. The tool should deduct $0 from the Virtual Card E-Purse."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Farecard", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance - Customer has a Valid Non-Adult Concession on their Farecard", "Test_Scnario": "Inter-agency transfer product processing on Virtual Card", "Test_Sce_Description": "This scenario is to validate that the SA Tool correctly identifies and processes a valid inter-agency transfer product on the customer's Virtual Card. The tool should deduct $0 from the Virtual Card E-Purse."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Farecard", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance \u2013 Customer requests Audio Messages", "Test_Scnario": "Verify Farecard is on the Action or Load Value List", "Test_Sce_Description": "Check if the SA Tool correctly verifies that the Farecard is on the Action or Load Value List and updates the Farecard accordingly."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Farecard", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance \u2013 Customer requests Audio Messages", "Test_Scnario": "Verify Audio Messages Request", "Test_Sce_Description": "Check if the SA Tool correctly handles a customer's request for audio messages during fare payment. The operator should be able to enable audio mode and adjust the volume level as per the customer's discretion."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Farecard", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance \u2013 Customer requests Audio Messages", "Test_Scnario": "Verify Daily Cap Reached outside of Transfer window", "Test_Sce_Description": "Check if the SA Tool correctly handles a situation where the Farecard has reached the Daily Cap Limit and is out of the transfer window. The SA Tool should not deduct any fare in this case."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Farecard", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance \u2013 Customer requests Audio Messages", "Test_Scnario": "Verify Premium Service or Special Route/Location Fare Deduction", "Test_Sce_Description": "Check if the SA Tool correctly computes and deducts the Premium or Special Event fare when a tap on a premium service or special route/location is made."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Farecard", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance \u2013 Customer requests Audio Messages", "Test_Scnario": "Verify Fare Upgrade for Premium Service or Special Route/Location", "Test_Sce_Description": "Check if the SA Tool correctly computes and deducts the Upgrade fare when a tap on a premium service or special event route/location is made after previously riding on a regular service route (within the transfer window)."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Farecard", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance \u2013 Customer requests Audio Messages", "Test_Scnario": "Verify Fare Payment during Peak hours after reaching Off Peak Daily Cap", "Test_Sce_Description": "Check if the SA Tool correctly handles a situation where a tap on peak hours is made after previously reaching off peak daily cap (outside the transfer window). The SA Tool should make a fare payment in this case."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Farecard", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance \u2013 Customer requests Audio Messages", "Test_Scnario": "Verify Fare Payment with Virtual Card and Audio Messages Request", "Test_Sce_Description": "Check if the SA Tool correctly handles a customer's request for audio messages during fare payment with their Virtual Card. The operator should be able to enable audio mode and adjust the volume level as per the customer's discretion."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Farecard", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance \u2013 Customer requests Audio Messages", "Test_Scnario": "Verify Fare Payment with Period Pass for Higher Fare Value Service Class", "Test_Sce_Description": "Check if the SA Tool correctly computes and deducts the Upgrade fare when the Farecard has a valid Period Pass where the Service class fare value is lower than the current route/location Service Class fare value."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Farecard", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance \u2013 Customer requests Audio Messages", "Test_Scnario": "Verify Fare Payment with Period Pass for Lower Fare Value Service Class", "Test_Sce_Description": "Check if the SA Tool correctly identifies that the customer\u2019s Period Pass is valid and accepts the period pass fare payment when the Farecard has a valid Period Pass where the Service class fare value is greater than the current route/location Service Class fare value."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Farecard", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance \u2013 Customer requests Audio Messages", "Test_Scnario": "Verify Fare Payment with Limited Period Pass", "Test_Sce_Description": "Check if the SA Tool correctly accepts the fare payment when the Farecard has a valid Limited Period Pass and the current time is within the limits of the product."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Farecard", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance \u2013 Customer requests Audio Messages", "Test_Scnario": "Verify Fare Payment with Limited Period Pass outside of valid time with sufficient e-Purse balance", "Test_Sce_Description": "Check if the SA Tool correctly handles a situation where the Farecard has a valid Limited Period Pass and the current time is outside the time limits of the product, but the farecard has sufficient e-Purse balance to cover the transaction."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Farecard", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance \u2013 Daily Cap Reached outside of Transfer window on SA Tool", "Test_Scnario": "Verify Fare Payment during Peak hours after reaching Off Peak Daily Cap outside of Transfer Window", "Test_Sce_Description": "This scenario is to verify that the fare payment is correctly deducted from the ePurse balance when a tap is made during peak hours after previously reaching the off peak daily cap and outside the transfer window. The system should correctly identify the farecard status and deduct the appropriate fare."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Farecard", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance \u2013 Daily Cap Reached outside of Transfer window on SA Tool", "Test_Scnario": "Verify Fare Payment with Premium Service or Special Route/Location", "Test_Sce_Description": "This scenario is to verify that the fare payment is correctly deducted from the ePurse balance when a tap is made on a premium service or special route/location. The system should correctly identify the service class and deduct the appropriate premium or special event fare."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Farecard", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance \u2013 Daily Cap Reached outside of Transfer window on SA Tool", "Test_Scnario": "Verify Fare Payment with Premium Service or Special Route/Location with Fare Upgrade", "Test_Sce_Description": "This scenario is to verify that the fare payment is correctly deducted from the ePurse balance when a tap is made on a premium service or special event route/location after previously riding on a regular service route and within the transfer window. The system should correctly identify the service class and deduct the appropriate upgrade fare."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Farecard", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance \u2013 Daily Cap Reached outside of Transfer window on SA Tool", "Test_Scnario": "Verify Fare Payment with Daily Cap Reached outside of Transfer window", "Test_Sce_Description": "This scenario is to verify that no fare is deducted from the ePurse balance when a tap is made and the farecard has reached the Daily Cap Limit and is out of transfer window. The system should correctly identify the farecard status and not deduct any fare."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Farecard", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance \u2013 Daily Cap Reached outside of Transfer window on SA Tool", "Test_Scnario": "Verify Fare Payment with Valid Non-Adult Concession", "Test_Sce_Description": "This scenario is to verify that the fare payment is correctly deducted from the ePurse balance when a customer with a valid non-adult concession taps their farecard. The system should correctly identify the concession status and deduct the appropriate fare."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Farecard", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance \u2013 Daily Cap Reached outside of Transfer window on SA Tool", "Test_Scnario": "Verify Fare Payment with Farecard on Action or Load Value List", "Test_Sce_Description": "This scenario is to verify that the fare payment is correctly deducted from the ePurse balance when a customer with a farecard on the Action or Load Value List taps their farecard. The system should correctly identify the farecard status and update the farecard accordingly."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Farecard", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance \u2013 Daily Cap Reached outside of Transfer window on SA Tool", "Test_Scnario": "Verify Audio Messages Functionality", "Test_Sce_Description": "This scenario is to verify that the audio messages functionality works correctly when a customer requests audio messages for the fare payment. The system should correctly play the audio message in the default language of the farecard."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Farecard", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance \u2013 Daily Cap Reached outside of Transfer window on SA Tool", "Test_Scnario": "Verify Performance of the SA Tool", "Test_Sce_Description": "This scenario is to verify that the SA Tool performs efficiently and effectively under varying loads and conditions. The system should maintain its performance standards even under heavy load."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Farecard", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance \u2013 Daily Cap Reached outside of Transfer window on SA Tool", "Test_Scnario": "Verify Security of the SA Tool", "Test_Sce_Description": "This scenario is to verify that the SA Tool maintains the security and privacy of the customer's farecard information. The system should ensure that all transactions are secure and that customer data is not compromised."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Farecard", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance \u2013 Premium Service or Special Route/Location on SA Tool", "Test_Scnario": "Fare Payment with Valid Regular Service Transfer Product", "Test_Sce_Description": "Verify that the fare payment is successfully made on the SA Tool when the service class is Premium or Special Event, the farecard has a valid Regular Service Transfer Product and the tap is within the Transfer Window."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Farecard", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance \u2013 Premium Service or Special Route/Location on SA Tool", "Test_Scnario": "Fare Deduction from Virtual Card E-Purse", "Test_Sce_Description": "Verify that the ATS computes the fare correctly and deducts the correct amount from the Virtual Card E-Purse. This should be communicated back to the SA Tool."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Farecard", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance \u2013 Premium Service or Special Route/Location on SA Tool", "Test_Scnario": "Fare Payment after reaching Off Peak Daily Cap", "Test_Sce_Description": "Verify that the fare payment is successfully made on the SA Tool when the farecard has reached off peak Daily Cap Limit, has not reached Peak Daily Cap limit and is out of transfer window."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Farecard", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance \u2013 Premium Service or Special Route/Location on SA Tool", "Test_Scnario": "Fare Payment with Special Event Transfer Product", "Test_Sce_Description": "Verify that the fare payment is successfully made on the SA Tool when the service class is Premium, the farecard has a valid Special Event Transfer Product and the tap is within the Transfer Window."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Farecard", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance \u2013 Premium Service or Special Route/Location on SA Tool", "Test_Scnario": "Fare Payment with Lower Premium Fare", "Test_Sce_Description": "Verify that the fare payment results in a free transfer on the SA Tool when the service class is Premium, the farecard has a valid Special Event Transfer Product, the tap is within the Transfer Window and the Premium fare is lower than the Special Event fare."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Farecard", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance \u2013 Premium Service or Special Route/Location on SA Tool", "Test_Scnario": "Fare Payment with Non-Adult Concession", "Test_Sce_Description": "Verify that the fare payment is successfully made on the SA Tool when the customer\u2019s Farecard has a Valid Non-Adult concession."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Farecard", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance \u2013 Premium Service or Special Route/Location on SA Tool", "Test_Scnario": "Payment by e-Purse", "Test_Sce_Description": "Verify that the customer is able to pay for a transaction via e-Purse when the Android device has the latest SA Tool application, is charged above the minimum battery threshold, is in \u201cIn-Service\u201d state, the operator is signed-in to the SA Tool application in the revenue mode, the customer is purchasing a product by which e-purse is an eligible form of payment, operator has added saleable products to cart and customer is ready for payment."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Farecard", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance \u2013 Premium Service or Special Route/Location on SA Tool", "Test_Scnario": "Payment by Cheque", "Test_Sce_Description": "Verify that the customer is able to pay for a transaction via cheque when the Android device has the latest SA Tool application, is charged above the minimum battery threshold, is in \u201cIn-Service\u201d state, the operator is signed-in to the SA Tool application in the revenue mode, operator has added saleable products to cart and customer is ready for payment."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Farecard", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance \u2013 Premium Service or Special Route/Location with Fare Upgrade on SA Tool", "Test_Scnario": "Verify Fare Deduction for Premium Service", "Test_Sce_Description": "Ensure that the SA Tool correctly computes and deducts the fare for a premium service or special event route/location. The fare should be deducted from the Virtual Card E-Purse and communicated back to the SA Tool."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Farecard", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance \u2013 Premium Service or Special Route/Location with Fare Upgrade on SA Tool", "Test_Scnario": "Verify Fare Upgrade for Premium Service", "Test_Sce_Description": "Ensure that the SA Tool correctly computes and deducts the fare upgrade when a customer taps on a premium service or special event route/location after previously riding on a regular service route within the transfer window. The fare upgrade should be deducted from the Virtual Card E-Purse and communicated back to the SA Tool."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Farecard", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance \u2013 Premium Service or Special Route/Location with Fare Upgrade on SA Tool", "Test_Scnario": "Verify Transfer Print Status Display", "Test_Sce_Description": "Ensure that the SA Tool sets the POP Print Flag to 0 to accurately display the transfer print status if the farecard is queried. This is to ensure that the device accurately displays the transfer print status."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Farecard", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance \u2013 Premium Service or Special Route/Location with Fare Upgrade on SA Tool", "Test_Scnario": "Verify Fare Payment during Peak Hours", "Test_Sce_Description": "Ensure that the SA Tool correctly computes and deducts the fare when a customer taps on peak hours after previously reaching off peak daily cap outside the transfer window. The fare should be deducted from the Virtual Card E-Purse and communicated back to the SA Tool."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Farecard", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance \u2013 Premium Service or Special Route/Location with Fare Upgrade on SA Tool", "Test_Scnario": "Verify Daily Cap Limit Functionality", "Test_Sce_Description": "Ensure that the SA Tool correctly identifies when a Farecard has reached the off peak Daily Cap Limit and does not allow further fare deductions. The tool should also correctly identify when the Farecard has not reached the Peak Daily Cap limit and allows fare deductions."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Farecard", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance \u2013 Premium Service or Special Route/Location with Fare Upgrade on SA Tool", "Test_Scnario": "Verify Transfer Window Functionality", "Test_Sce_Description": "Ensure that the SA Tool correctly identifies when a Farecard is within or outside the transfer window. The tool should allow fare deductions when the Farecard is within the transfer window and disallow fare deductions when the Farecard is outside the transfer window."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Farecard", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance \u2013 Premium Service or Special Route/Location with Fare Upgrade on SA Tool", "Test_Scnario": "Verify Non-Adult Concession Functionality", "Test_Sce_Description": "Ensure that the SA Tool correctly identifies when a customer's Farecard has a Valid Non-Adult concession. The tool should allow fare deductions accordingly."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Farecard", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance \u2013 Premium Service or Special Route/Location with Fare Upgrade on SA Tool", "Test_Scnario": "Verify Action or Load Value List Functionality", "Test_Sce_Description": "Ensure that the SA Tool correctly identifies when a customer's Farecard is on the Action or Load Value list and updates the Farecard accordingly."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Farecard", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance \u2013 Premium Service or Special Route/Location with Fare Upgrade on SA Tool", "Test_Scnario": "Verify Audio Messages Functionality", "Test_Sce_Description": "Ensure that the SA Tool correctly plays audio messages for the fare payment when requested by the customer. The audio message should be played in the default language of the customer's Farecard."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Farecard", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance \u2013 Premium Service or Special Route/Location with Fare Upgrade on SA Tool", "Test_Scnario": "Verify Performance of SA Tool", "Test_Sce_Description": "Ensure that the SA Tool performs efficiently under varying loads. The tool should be able to handle multiple fare deductions simultaneously without any performance degradation."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Farecard", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance \u2013 Premium Service or Special Route/Location with Fare Upgrade on SA Tool", "Test_Scnario": "Verify Security of SA Tool", "Test_Sce_Description": "Ensure that the SA Tool securely handles all transactions. The tool should encrypt all sensitive data and prevent unauthorized access."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Tickets", "Use_Case_Name": "Accepting Fare Payment from a TICKET using Ride Balance - Customer has a Valid Child Concession on their CLIENT Ticket", "Test_Scnario": "Validating Fare Payment with Valid Child Concession", "Test_Sce_Description": "This scenario is to validate that the SA Tool correctly processes fare payment when a customer's ticket has a valid child concession. The tool should detect the valid child concession, display the successful child fare payment screen, and play the successful fare payment audio tone for child concession."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Tickets", "Use_Case_Name": "Accepting Fare Payment from a TICKET using Ride Balance - Customer has a Valid Child Concession on their CLIENT Ticket", "Test_Scnario": "Validating Fare Payment with Empty Ride Balance", "Test_Sce_Description": "This scenario is to validate that the SA Tool correctly handles a situation where a customer's ride balance is empty. The tool should detect the empty ride balance, display a declined message to the customer, play the declined audio tone, and not conduct the transaction."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Tickets", "Use_Case_Name": "Accepting Fare Payment from a TICKET using Ride Balance - Customer has a Valid Child Concession on their CLIENT Ticket", "Test_Scnario": "Validating Fare Payment with Low Battery Threshold", "Test_Sce_Description": "This scenario is to validate that the SA Tool correctly handles a situation where the device battery goes below the low battery threshold during a successful ticket tap. The tool should switch to 'Out of Service' mode if the low battery threshold is reached before Step 5, else process the fare payment and then switch to 'Out of Service' mode."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Tickets", "Use_Case_Name": "Accepting Fare Payment from a TICKET using Ride Balance - Customer has a Valid Child Concession on their CLIENT Ticket", "Test_Scnario": "Validating Fare Payment with Non-CLIENT Media Card", "Test_Sce_Description": "This scenario is to validate that the SA Tool correctly handles a situation where a customer taps a card that is not CLIENT media. The tool should not respond, but display the device error message 'Card Read Error' for a short period of time."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Tickets", "Use_Case_Name": "Accepting Fare Payment from a TICKET using Ride Balance - Customer has a Valid Child Concession on their CLIENT Ticket", "Test_Scnario": "Validating Fare Payment within Anti-Passback Window", "Test_Sce_Description": "This scenario is to validate that the SA Tool correctly handles a situation where a customer's ticket is within the Anti-Passback Window. The tool should detect that the ticket fails the Anti-Passback checks, display a declined message to the customer, play the declined audio tone, and not conduct the transaction."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Tickets", "Use_Case_Name": "Accepting Fare Payment from a TICKET using Ride Balance - Customer has a Valid Child Concession on their CLIENT Ticket", "Test_Scnario": "Validating Fare Payment with Non-Activated Ticket", "Test_Sce_Description": "This scenario is to validate that the SA Tool correctly handles a situation where a customer taps a non-activated ticket. The tool should not respond, but display the device error message 'Card Read Error' for a short period of time."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Tickets", "Use_Case_Name": "Accepting Fare Payment from a TICKET using Ride Balance - Customer has a Valid Child Concession on their CLIENT Ticket", "Test_Scnario": "Validating Fare Payment with Valid Non-Adult, Non-Child Concession", "Test_Sce_Description": "This scenario is to validate that the SA Tool correctly processes fare payment when a customer's ticket has a valid non-adult, non-child concession. The tool should detect the valid concession, display the successful fare payment screen, and play the successful fare payment audio tone for a concession other than adult or child."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Tickets", "Use_Case_Name": "Accepting Fare Payment from a TICKET using Ride Balance - Customer has a Valid Child Concession on their CLIENT Ticket", "Test_Scnario": "Validating Fare Payment within Intra-agency Transfer Window", "Test_Sce_Description": "This scenario is to validate that the SA Tool correctly processes fare payment when a customer's ticket has a valid transfer product and the tap is within the transfer window. The tool should detect the valid transfer product, compute the free transfer, and process the fare payment."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Tickets", "Use_Case_Name": "Accepting Fare Payment from a TICKET using Ride Balance - Customer has a Valid Child Concession on their CLIENT Ticket", "Test_Scnario": "Validating Fare Payment with Audio Messages Request", "Test_Sce_Description": "This scenario is to validate that the SA Tool correctly handles a situation where a customer requests audio messages for the fare payment. The operator should enable audio mode, adjust the volume level as per the customer's discretion, and the tool should play the corresponding audio message in the default language of the customer's farecard."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Tickets", "Use_Case_Name": "Accepting Fare Payment from a TICKET using Ride Balance - Customer has a Valid Child Concession on their CLIENT Ticket", "Test_Scnario": "Validating Fare Payment on Premium Service or Special Route/Location", "Test_Sce_Description": "This scenario is to validate that the SA Tool correctly processes fare payment when the fare payment is being made on the FLATFARE BASED SA Tool and the service class is premium or special event. The tool should not differentiate between service class for CLIENT Ticket and process the fare payment."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Tickets", "Use_Case_Name": "Accepting Fare Payment from a TICKET using Ride Balance \u2013 Fare Payment Resulting from Failed Inspection", "Test_Scnario": "Validating Fare Payment with Valid Child Concession", "Test_Sce_Description": "This scenario is to validate the fare payment process when a customer's ticket has a valid child concession. The SA Tool should be able to detect the valid child concession, display the successful child fare payment screen, and play the successful fare payment audio tone for child concession."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Tickets", "Use_Case_Name": "Accepting Fare Payment from a TICKET using Ride Balance \u2013 Fare Payment Resulting from Failed Inspection", "Test_Scnario": "Fare Payment Resulting from Failed Inspection", "Test_Sce_Description": "This scenario is to validate the fare payment process when the operator inspects a customer's ticket and determines that they have not paid a fare. The operator should be able to select the payment function on the SA Tool inspection results screen, and the SA Tool should record both the fare payment and inspection transactions."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Tickets", "Use_Case_Name": "Accepting Fare Payment from a TICKET using Ride Balance \u2013 Fare Payment Resulting from Failed Inspection", "Test_Scnario": "Fare Payment with Empty Ride Balance", "Test_Sce_Description": "This scenario is to validate the fare payment process when a customer's ride balance is empty. The SA Tool should detect that the ride balance is empty, display a declined message to the customer, and play the declined audio tone."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Tickets", "Use_Case_Name": "Accepting Fare Payment from a TICKET using Ride Balance \u2013 Fare Payment Resulting from Failed Inspection", "Test_Scnario": "Fare Payment with Low Battery Threshold", "Test_Sce_Description": "This scenario is to validate the fare payment process when the SA Tool device battery goes below the low battery threshold during a successful ticket tap. The application should switch to 'Out of Service' mode if the low battery threshold is reached before the fare payment process is completed."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Tickets", "Use_Case_Name": "Accepting Fare Payment from a TICKET using Ride Balance \u2013 Fare Payment Resulting from Failed Inspection", "Test_Scnario": "Fare Payment with Non-CLIENT Media Card", "Test_Sce_Description": "This scenario is to validate the fare payment process when a customer taps a card that is not CLIENT media. The SA Tool application should not respond, but the device error message 'Card Read Error' should be displayed for a short period of time."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Tickets", "Use_Case_Name": "Accepting Fare Payment from a TICKET using Ride Balance \u2013 Fare Payment Resulting from Failed Inspection", "Test_Scnario": "Fare Payment within the Anti-Passback Window", "Test_Sce_Description": "This scenario is to validate the fare payment process when a customer's ticket is within the Anti-Passback Window. The device should detect that the ticket fails the Anti-Passback checks, display a declined message to the customer, and play the declined audio tone."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Tickets", "Use_Case_Name": "Accepting Fare Payment from a TICKET using Ride Balance \u2013 Fare Payment Resulting from Failed Inspection", "Test_Scnario": "Fare Payment with Non-Activated Ticket", "Test_Sce_Description": "This scenario is to validate the fare payment process when a customer taps a non-activated ticket. The device should detect that the ticket is not activated, display a declined message to the customer, and play the declined audio tone."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Tickets", "Use_Case_Name": "Accepting Fare Payment from a TICKET using Ride Balance \u2013 Fare Payment Resulting from Failed Inspection", "Test_Scnario": "Fare Payment with Expired Ticket", "Test_Sce_Description": "This scenario is to validate the fare payment process when a customer taps an expired ticket. The device should detect that the ticket is expired, display a declined message to the customer, and play the declined audio tone."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Tickets", "Use_Case_Name": "Accepting Fare Payment from a TICKET using Ride Balance - Customer has a TICKET with no Ride Balance remaining", "Test_Scnario": "Fare Payment with Empty Ride Balance", "Test_Sce_Description": "Verify that the system correctly identifies when a customer's ride balance is empty and prevents the fare payment transaction from being conducted. The system should display a declined message to the customer and play a declined audio tone."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Tickets", "Use_Case_Name": "Accepting Fare Payment from a TICKET using Ride Balance - Customer has a TICKET with no Ride Balance remaining", "Test_Scnario": "Fare Payment with Low Battery", "Test_Sce_Description": "Verify that the system correctly switches to 'Out of Service' mode when the low battery threshold is reached during a fare payment transaction. If the threshold is reached before the fare payment is processed, the transaction should not be conducted."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Tickets", "Use_Case_Name": "Accepting Fare Payment from a TICKET using Ride Balance - Customer has a TICKET with no Ride Balance remaining", "Test_Scnario": "Fare Payment with Non-CLIENT Media", "Test_Sce_Description": "Verify that the system correctly identifies when a customer's card is not CLIENT media and does not respond to the tap. The device should display a 'Card Read Error' message."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Tickets", "Use_Case_Name": "Accepting Fare Payment from a TICKET using Ride Balance - Customer has a TICKET with no Ride Balance remaining", "Test_Scnario": "Fare Payment within Anti-Passback Window", "Test_Sce_Description": "Verify that the system correctly identifies when a customer's ticket is within the Anti-Passback Window and prevents the fare payment transaction from being conducted. The system should display a declined message to the customer and play a declined audio tone."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Tickets", "Use_Case_Name": "Accepting Fare Payment from a TICKET using Ride Balance - Customer has a TICKET with no Ride Balance remaining", "Test_Scnario": "Fare Payment with Non-Activated Ticket", "Test_Sce_Description": "Verify that the system correctly identifies when a customer's ticket is not activated and prevents the fare payment transaction from being conducted. The system should display a declined message to the customer and play a declined audio tone."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Tickets", "Use_Case_Name": "Accepting Fare Payment from a TICKET using Ride Balance - Customer has a TICKET with no Ride Balance remaining", "Test_Scnario": "Fare Payment with Locked Farecard", "Test_Sce_Description": "Verify that the system correctly identifies when a farecard is locked and prevents the fare payment transaction from being conducted. The system should display a declined message to the operator and not proceed with the inspection."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Tickets", "Use_Case_Name": "Accepting Fare Payment from a TICKET using Ride Balance - Customer has a TICKET with no Ride Balance remaining", "Test_Scnario": "Fare Payment with Unreadable TICKET", "Test_Sce_Description": "Verify that the system correctly identifies when a TICKET is unreadable and indicates this to the operator. The customer should be prompted to tap the NFC reader again. If the tap is unsuccessful, the system should again indicate to the operator that the TICKET is unreadable."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Tickets", "Use_Case_Name": "Accepting Fare Payment from a TICKET using Ride Balance - Customer has a TICKET with no Ride Balance remaining", "Test_Scnario": "Fare Payment with Non-Adult, Non-Child Concession", "Test_Sce_Description": "Verify that the system correctly identifies when a customer's TICKET has a valid Non-Adult, Non-Child concession and processes the fare payment transaction accordingly."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Tickets", "Use_Case_Name": "Accepting Fare Payment from a TICKET using Ride Balance - Battery goes below the low battery threshold during payment", "Test_Scnario": "Low Battery Threshold Test", "Test_Sce_Description": "This scenario tests the functionality of the SA Tool when the battery goes below the low battery threshold during a successful TICKET tap. The application should switch to 'Out of Service' mode if the low battery threshold is reached before Step 5. If not, the customer's fare payment should be processed as per Step 5 and then the application should switch to 'Out of Service' mode."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Tickets", "Use_Case_Name": "Accepting Fare Payment from a TICKET using Ride Balance - Battery goes below the low battery threshold during payment", "Test_Scnario": "Fare Payment Processing Test", "Test_Sce_Description": "This scenario tests the fare payment processing functionality of the SA Tool. The application should successfully process the customer's fare payment as per Step 5 if the low battery threshold is not reached before this step."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Tickets", "Use_Case_Name": "Accepting Fare Payment from a TICKET using Ride Balance - Battery goes below the low battery threshold during payment", "Test_Scnario": "Out of Service Mode Test", "Test_Sce_Description": "This scenario tests the 'Out of Service' mode functionality of the SA Tool. The application should switch to this mode if the low battery threshold is reached before Step 5 or after the fare payment is processed."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Tickets", "Use_Case_Name": "Accepting Fare Payment from a TICKET using Ride Balance - Battery goes below the low battery threshold during payment", "Test_Scnario": "Card Read Error Test", "Test_Sce_Description": "This scenario tests the error handling functionality of the SA Tool when a card that is not CLIENT media is tapped. The application should not respond, but the device error message 'Card Read Error' should be displayed for a short period of time."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Tickets", "Use_Case_Name": "Accepting Fare Payment from a TICKET using Ride Balance - Battery goes below the low battery threshold during payment", "Test_Scnario": "Anti-Passback Window Test", "Test_Sce_Description": "This scenario tests the Anti-Passback checks of the SA Tool. The device should detect that the TICKET fails the Anti-Passback checks and the application should display a declined message to the customer, not conducting the transaction."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Tickets", "Use_Case_Name": "Accepting Fare Payment from a TICKET using Ride Balance - Battery goes below the low battery threshold during payment", "Test_Scnario": "Non-Activated Ticket Test", "Test_Sce_Description": "This scenario tests the functionality of the SA Tool when a non-activated TICKET is tapped. The application should detect that the TICKET is not activated and display a declined message to the customer, not conducting the transaction."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Tickets", "Use_Case_Name": "Accepting Fare Payment from a TICKET using Ride Balance - Battery goes below the low battery threshold during payment", "Test_Scnario": "Ride Balance Empty Test", "Test_Sce_Description": "This scenario tests the functionality of the SA Tool when the customer's ride balance is empty. The application should detect that the Ride Balance is empty and display a declined message to the customer, not conducting the transaction."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Tickets", "Use_Case_Name": "Accepting Fare Payment from a TICKET using Ride Balance - Battery goes below the low battery threshold during payment", "Test_Scnario": "Failed Inspection Test", "Test_Sce_Description": "This scenario tests the functionality of the SA Tool when a fare payment results from a failed inspection. The application should record both the fare payment and inspection transactions and return to the Tap Card screen, displaying a toast notification of the corresponding inspection action."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Tickets", "Use_Case_Name": "Accepting Fare Payment from a TICKET using Ride Balance - Battery goes below the low battery threshold during payment", "Test_Scnario": "Child Concession Test", "Test_Sce_Description": "This scenario tests the functionality of the SA Tool when a customer's TICKET has a Valid Child concession. The application should detect the Valid Child Concession, display the successful Child fare payment screen, and play the successful fare payment audio tone for Child concession."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Tickets", "Use_Case_Name": "Accepting Fare Payment from a TICKET using Ride Balance - Battery goes below the low battery threshold during payment", "Test_Scnario": "Performance Test", "Test_Sce_Description": "This scenario tests the performance of the SA Tool application. The application should be able to handle multiple fare payments and inspections simultaneously without any lag or delay."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Tickets", "Use_Case_Name": "Accepting Fare Payment from a TICKET using Ride Balance - Battery goes below the low battery threshold during payment", "Test_Scnario": "Security Test", "Test_Sce_Description": "This scenario tests the security features of the SA Tool application. The application should securely process fare payments and inspections, ensuring that customer's data is protected and not accessible to unauthorized users."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Tickets", "Use_Case_Name": "Accepting Fare Payment from a TICKET using Ride Balance \u2013 Customer taps a card that is not CLIENT media", "Test_Scnario": "Fare Payment with Non-CLIENT Media", "Test_Sce_Description": "Validate the system's response when a customer attempts to pay the fare using a card that is not CLIENT media. The system should not respond and display a 'Card Read Error' message."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Tickets", "Use_Case_Name": "Accepting Fare Payment from a TICKET using Ride Balance \u2013 Customer taps a card that is not CLIENT media", "Test_Scnario": "Fare Payment with Empty Ride Balance", "Test_Sce_Description": "Validate the system's response when a customer attempts to pay the fare with a TICKET that has an empty ride balance. The system should detect the empty balance, display a declined message, and not conduct the transaction."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Tickets", "Use_Case_Name": "Accepting Fare Payment from a TICKET using Ride Balance \u2013 Customer taps a card that is not CLIENT media", "Test_Scnario": "Fare Payment with Low Battery", "Test_Sce_Description": "Validate the system's response when the device battery goes below the low battery threshold during a fare payment. The system should switch to 'Out of Service' mode after processing the fare payment if the low battery threshold is reached."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Tickets", "Use_Case_Name": "Accepting Fare Payment from a TICKET using Ride Balance \u2013 Customer taps a card that is not CLIENT media", "Test_Scnario": "Fare Payment with TICKET in Anti-Passback Window", "Test_Sce_Description": "Validate the system's response when a customer attempts to pay the fare with a TICKET that is within the Anti-Passback Window. The system should detect the Anti-Passback check failure, display a declined message, and not conduct the transaction."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Tickets", "Use_Case_Name": "Accepting Fare Payment from a TICKET using Ride Balance \u2013 Customer taps a card that is not CLIENT media", "Test_Scnario": "Fare Payment with Non-Activated TICKET", "Test_Sce_Description": "Validate the system's response when a customer attempts to pay the fare with a non-activated TICKET. The system should detect the invalidity of the TICKET, display a declined message, and not conduct the transaction."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Tickets", "Use_Case_Name": "Accepting Fare Payment from a TICKET using Ride Balance \u2013 Customer taps a card that is not CLIENT media", "Test_Scnario": "Fare Payment with Locked Farecard", "Test_Sce_Description": "Validate the system's response when a customer attempts to pay the fare with a locked farecard. The system should detect the locked status of the farecard, display a declined message, and not proceed with the inspection."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Tickets", "Use_Case_Name": "Accepting Fare Payment from a TICKET using Ride Balance \u2013 Customer taps a card that is not CLIENT media", "Test_Scnario": "Fare Payment with Unreadable TICKET", "Test_Sce_Description": "Validate the system's response when a customer attempts to pay the fare with an unreadable TICKET. The system should detect the unreadability of the TICKET, display an error message, and ask the customer to tap again."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Tickets", "Use_Case_Name": "Accepting Fare Payment from a TICKET using Ride Balance \u2013 Customer taps a card that is not CLIENT media", "Test_Scnario": "Fare Payment with Non-Adult, Non-Child Concession", "Test_Sce_Description": "Validate the system's response when a customer with a valid non-adult, non-child concession attempts to pay the fare. The system should process the fare payment according to the concession rules."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Tickets", "Use_Case_Name": "Accepting Fare Payment from a TICKET using Ride Balance \u2013 Customer\u2019s TICKET is within the Anti-Passback Window", "Test_Scnario": "Validating Anti-Passback Window", "Test_Sce_Description": "This scenario tests if the system correctly identifies a ticket that is within the Anti-Passback Window. The system should decline the transaction and display a declined message to the customer."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Tickets", "Use_Case_Name": "Accepting Fare Payment from a TICKET using Ride Balance \u2013 Customer\u2019s TICKET is within the Anti-Passback Window", "Test_Scnario": "Audio Tone for Declined Transaction", "Test_Sce_Description": "This scenario tests if the system plays the declined audio tone when a transaction is declined due to the ticket being within the Anti-Passback Window."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Tickets", "Use_Case_Name": "Accepting Fare Payment from a TICKET using Ride Balance \u2013 Customer\u2019s TICKET is within the Anti-Passback Window", "Test_Scnario": "Timeout Functionality", "Test_Sce_Description": "This scenario tests if the system returns to the SA Tool application Tap Card screen after a configurable timeout when a transaction is declined."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Tickets", "Use_Case_Name": "Accepting Fare Payment from a TICKET using Ride Balance \u2013 Customer\u2019s TICKET is within the Anti-Passback Window", "Test_Scnario": "Validating Non-Activated Ticket", "Test_Sce_Description": "This scenario tests if the system correctly identifies a non-activated ticket. The system should decline the transaction and display a declined message to the customer."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Tickets", "Use_Case_Name": "Accepting Fare Payment from a TICKET using Ride Balance \u2013 Customer\u2019s TICKET is within the Anti-Passback Window", "Test_Scnario": "Performance of the System", "Test_Sce_Description": "This scenario tests the performance of the system when handling multiple transactions simultaneously. The system should be able to handle multiple transactions without any delay or errors."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Tickets", "Use_Case_Name": "Accepting Fare Payment from a TICKET using Ride Balance \u2013 Customer\u2019s TICKET is within the Anti-Passback Window", "Test_Scnario": "Security of the System", "Test_Sce_Description": "This scenario tests the security of the system. The system should not allow any unauthorized access or manipulation of data."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Tickets", "Use_Case_Name": "Accepting Fare Payment from a TICKET using Ride Balance \u2013 Customer\u2019s TICKET is within the Anti-Passback Window", "Test_Scnario": "Exception Handling", "Test_Sce_Description": "This scenario tests the system's ability to handle exceptions. The system should be able to handle exceptions gracefully without crashing or displaying any error messages to the user."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Tickets", "Use_Case_Name": "Accepting Fare Payment from a TICKET using Ride Balance \u2013 Customer\u2019s TICKET is within the Anti-Passback Window", "Test_Scnario": "Alternate Flow Functionality", "Test_Sce_Description": "This scenario tests the system's ability to handle alternate flows. The system should be able to switch between the main flow and alternate flows seamlessly."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Tickets", "Use_Case_Name": "Accepting Fare Payment from a TICKET using Ride Balance \u2013 Customer taps a non-activated Ticket", "Test_Scnario": "Validating Fare Payment with Non-Activated Ticket", "Test_Sce_Description": "This scenario will test the functionality of the SA Tool when a customer tries to make a fare payment using a non-activated ticket. The tool should detect that the ticket is not activated and display a declined message to the customer. The transaction should not be conducted and the tool should play a declined audio tone."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Tickets", "Use_Case_Name": "Accepting Fare Payment from a TICKET using Ride Balance \u2013 Customer taps a non-activated Ticket", "Test_Scnario": "Validating Fare Payment with Empty Ride Balance", "Test_Sce_Description": "This scenario will test the functionality of the SA Tool when a customer tries to make a fare payment using a ticket with an empty ride balance. The tool should detect that the ride balance is empty and display a declined message to the customer. The transaction should not be conducted and the tool should play a declined audio tone."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Tickets", "Use_Case_Name": "Accepting Fare Payment from a TICKET using Ride Balance \u2013 Customer taps a non-activated Ticket", "Test_Scnario": "Validating Fare Payment with Low Battery Threshold", "Test_Sce_Description": "This scenario will test the functionality of the SA Tool when the device's battery goes below the low battery threshold during a fare payment. The tool should switch to 'Out of Service' mode if the low battery threshold is reached before the fare payment is processed."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Tickets", "Use_Case_Name": "Accepting Fare Payment from a TICKET using Ride Balance \u2013 Customer taps a non-activated Ticket", "Test_Scnario": "Validating Fare Payment with Non-CLIENT Media Card", "Test_Sce_Description": "This scenario will test the functionality of the SA Tool when a customer tries to make a fare payment using a non-CLIENT media card. The tool should not respond and display a 'Card Read Error' message."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Tickets", "Use_Case_Name": "Accepting Fare Payment from a TICKET using Ride Balance \u2013 Customer taps a non-activated Ticket", "Test_Scnario": "Validating Fare Payment within Anti-Passback Window", "Test_Sce_Description": "This scenario will test the functionality of the SA Tool when a customer tries to make a fare payment within the Anti-Passback Window. The tool should detect that the ticket fails the Anti-Passback checks and display a declined message to the customer. The transaction should not be conducted and the tool should play a declined audio tone."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Tickets", "Use_Case_Name": "Accepting Fare Payment from a TICKET using Ride Balance \u2013 Customer taps a non-activated Ticket", "Test_Scnario": "Validating Fare Payment with Locked Farecard", "Test_Sce_Description": "This scenario will test the functionality of the SA Tool when a customer tries to make a fare payment using a locked farecard. The tool should read the farecard, determine that it is locked, display a declined screen to the operator and not proceed with the inspection."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Tickets", "Use_Case_Name": "Accepting Fare Payment from a TICKET using Ride Balance \u2013 Customer taps a non-activated Ticket", "Test_Scnario": "Validating Fare Payment with Unreadable Ticket", "Test_Sce_Description": "This scenario will test the functionality of the SA Tool when a customer tries to make a fare payment using an unreadable ticket. The tool should detect the ticket but fail to read it, indicating to the operator that the ticket is unreadable."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Tickets", "Use_Case_Name": "Accepting Fare Payment from a TICKET using Ride Balance \u2013 Customer taps a non-activated Ticket", "Test_Scnario": "Validating Fare Payment with Non-Adult, Non-Child Concession", "Test_Sce_Description": "This scenario will test the functionality of the SA Tool when a customer with a non-adult, non-child concession tries to make a fare payment. The tool should detect the concession type and process the fare payment accordingly."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Virtual Card", "Use_Case_Name": "Accepting Fare Payment from a Virtual Card using ePurse Balance - Customer\u2019s Virtual Card is Unreadable", "Test_Scnario": "Unreadable Virtual Card", "Test_Sce_Description": "Verify that the SA Tool application correctly detects and indicates when a Virtual Card is unreadable. The customer will tap on the NFC reader again and if the tap is unsuccessful, the SA Tool application should indicate to the operator that the Virtual Card is unreadable."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Virtual Card", "Use_Case_Name": "Accepting Fare Payment from a Virtual Card using ePurse Balance - Customer\u2019s Virtual Card is Unreadable", "Test_Scnario": "Successful Tap with Unreadable Virtual Card", "Test_Sce_Description": "Verify that if the customer taps the NFC reader again and the tap is successful, steps 4 \u2013 7 are conducted as stated in the Main Use Case."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Virtual Card", "Use_Case_Name": "Accepting Fare Payment from a Virtual Card using ePurse Balance - Customer\u2019s Virtual Card is Unreadable", "Test_Scnario": "Non-Adult, Non-Child, non-discreet concessions", "Test_Sce_Description": "Verify that the SA Tool correctly identifies and processes a Virtual Card with a Valid Non-Adult, Non-Child, non-discreet concessions. The SA Tool should show the successful fare payment screen for non-adult concession and play the successful fare payment audio tone for a concession other than Adult, Child, or Discreet Concessions."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Virtual Card", "Use_Case_Name": "Accepting Fare Payment from a Virtual Card using ePurse Balance - Customer\u2019s Virtual Card is Unreadable", "Test_Scnario": "ePurse Balance Less Than Fare Amount", "Test_Sce_Description": "Verify that the system correctly handles a situation where the customer\u2019s ePurse balance is less than the fare amount. The device should send the tap to ATS for processing, ATS should check the online hotlist and complete the fare processing, remove the fare from the Virtual Card e-Purse and put the card into overdraft."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Virtual Card", "Use_Case_Name": "Accepting Fare Payment from a Virtual Card using ePurse Balance - Customer\u2019s Virtual Card is Unreadable", "Test_Scnario": "Transaction within Intra-SP Transfer window", "Test_Sce_Description": "Verify that the system correctly processes a transaction within the Intra-SP Transfer window. ATS should read that the Virtual Card contains a valid intra-agency transfer product and deduct $0 from the Virtual Card E-Purse."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Virtual Card", "Use_Case_Name": "Accepting Fare Payment from a Virtual Card using ePurse Balance - Customer\u2019s Virtual Card is Unreadable", "Test_Scnario": "Transaction within Inter-SP Transfer window", "Test_Sce_Description": "Verify that the system correctly processes a transaction within the Inter-SP Transfer window. ATS should read that the Virtual Card contains a valid inter-agency transfer product and deduct $0 from the Virtual Card E-Purse."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Virtual Card", "Use_Case_Name": "Accepting Fare Payment from a Virtual Card using ePurse Balance - Customer\u2019s Virtual Card is Unreadable", "Test_Scnario": "Expired Period Pass with Sufficient ePurse Balance", "Test_Sce_Description": "Verify that the system correctly processes a transaction where the customer\u2019s Virtual Card has an expired period pass and the ePurse balance is more than the fare amount. ATS should detect that the Period Pass has expired, compute the value to be deducted from the e-Purse, and deduct the fare accordingly."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Virtual Card", "Use_Case_Name": "Accepting Fare Payment from a Virtual Card using ePurse Balance - Customer\u2019s Virtual Card is Unreadable", "Test_Scnario": "Expired Period Pass with ePurse Balance Less Than Fare Amount", "Test_Sce_Description": "Verify that the system correctly processes a transaction where the customer\u2019s ePurse balance is less than the fare amount and the Virtual Card has an expired period pass. ATS should detect that the Period Pass has expired, compute the value to be deducted from the e-Purse, and deduct the fare accordingly. The Virtual Card should be put into overdraft."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Virtual Card", "Use_Case_Name": "Accepting Fare Payment from a Virtual Card using ePurse Balance - Customer\u2019s Virtual Card is Unreadable", "Test_Scnario": "Audio Messages Request", "Test_Sce_Description": "Verify that the system correctly handles a customer request for audio messages for fare payment. The operator should enable audio mode and the SA Tool should display the fare payment screen to the operator and customer for the duration of the audio message. The corresponding audio message should be played to the customer in the default language of their Farecard."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Virtual Card", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance - Customer has a Concession other than Adult, Child, or Discreet Concessions on their Virtual Card", "Test_Scnario": "Virtual Card Unreadable", "Test_Sce_Description": "Test the scenario where the SA Tool application detects the Virtual Card but fails to read it correctly. The application should indicate to the operator that the Virtual Card is unreadable. The customer will tap on the NFC reader again. If the tap is successful, steps 4 \u2013 7 will be conducted. If the tap is unsuccessful, the SA Tool application will indicate to the operator that the CLIENT (Virtual) Card is unreadable."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Virtual Card", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance - Customer has a Concession other than Adult, Child, or Discreet Concessions on their Virtual Card", "Test_Scnario": "Non-Adult, Non-Child, non-discreet concessions", "Test_Sce_Description": "Test the scenario where the customer\u2019s Virtual Card has a Valid Non-Adult, Non-Child, non-discreet concessions. The SA Tool should show the successful fare payment screen for non-adult concession, plays the successful fare payment audio tone for a concession other than Adult, Child, or Discreet Concessions."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Virtual Card", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance - Customer has a Concession other than Adult, Child, or Discreet Concessions on their Virtual Card", "Test_Scnario": "ePurse Balance Less Than the Fare Amount", "Test_Sce_Description": "Test the scenario where the customer\u2019s ePurse balance is less than the fare amount. The device should send the tap to ATS for processing. ATS checks the online hotlist and completes the fare processing. ATS removes the fare from the Virtual Card e-Purse and puts the card into overdraft."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Virtual Card", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance - Customer has a Concession other than Adult, Child, or Discreet Concessions on their Virtual Card", "Test_Scnario": "Transaction within Intra-SP Transfer window", "Test_Sce_Description": "Test the scenario where the customer\u2019s Virtual Card has a valid transfer product. ATS should read that the Virtual Card contains a valid intra-agency transfer product and deduct $0 from the Virtual Card E-Purse."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Virtual Card", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance - Customer has a Concession other than Adult, Child, or Discreet Concessions on their Virtual Card", "Test_Scnario": "Transaction within Inter-SP Transfer window", "Test_Sce_Description": "Test the scenario where the customer\u2019s Virtual Card has a valid transfer product from other service provider. ATS should read that the Virtual Card contains a valid inter-agency transfer product and deduct $0 from the Virtual Card E-Purse."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Virtual Card", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance - Customer has a Concession other than Adult, Child, or Discreet Concessions on their Virtual Card", "Test_Scnario": "Customer requests Audio Messages", "Test_Sce_Description": "Test the scenario where the customer requests audio messages. The SA Tool should play the successful fare payment audio tone for a concession other than Adult, Child, or Discreet Concessions."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Virtual Card", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance - Customer has a Concession other than Adult, Child, or Discreet Concessions on their Virtual Card", "Test_Scnario": "Autoload Threshold is met", "Test_Sce_Description": "Test the scenario where the customer\u2019s Farecard has Autoload enabled and meets or drops below Autoload Threshold. The SA Tool should check that the ePurse balance (after deducting the travel fare) is under the Autoload threshold and adds the Autoload amount to the ePurse balance."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Virtual Card", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance - Customer has a Concession other than Adult, Child, or Discreet Concessions on their Virtual Card", "Test_Scnario": "Customer\u2019s Farecard is on the Action or Load Value List", "Test_Sce_Description": "Test the scenario where the customer\u2019s Farecard is on the Action or Load Value list. The SA Tool should verify that the Farecard is on the Action or Load Value List and updates the Farecard accordingly."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Virtual Card", "Use_Case_Name": "Accepting Fare Payment from a Virtual Card using ePurse Balance - Customer Has a Registered Virtual Card with Positive ePurse Balance Less Than the Fare Amount", "Test_Scnario": "Virtual Card Readability", "Test_Sce_Description": "Verify that the SA Tool application can detect and read the Virtual Card correctly. If the Virtual Card is unreadable, the application should indicate to the operator that the Virtual Card is unreadable."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Virtual Card", "Use_Case_Name": "Accepting Fare Payment from a Virtual Card using ePurse Balance - Customer Has a Registered Virtual Card with Positive ePurse Balance Less Than the Fare Amount", "Test_Scnario": "Fare Payment with Non-Adult, Non-Child, non-discreet concessions", "Test_Sce_Description": "Verify that the SA Tool can accept fare payment from a Virtual Card that has a valid non-adult, non-child, non-discreet concession. The application should show the successful fare payment screen for non-adult concession and play the successful fare payment audio tone."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Virtual Card", "Use_Case_Name": "Accepting Fare Payment from a Virtual Card using ePurse Balance - Customer Has a Registered Virtual Card with Positive ePurse Balance Less Than the Fare Amount", "Test_Scnario": "Fare Payment with ePurse Balance Less Than the Fare Amount", "Test_Sce_Description": "Verify that the SA Tool can accept fare payment from a Virtual Card with positive ePurse balance less than the fare amount. The ATS should check the online hotlist, complete the fare processing, remove the fare from the Virtual Card e-Purse and put the card into overdraft."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Virtual Card", "Use_Case_Name": "Accepting Fare Payment from a Virtual Card using ePurse Balance - Customer Has a Registered Virtual Card with Positive ePurse Balance Less Than the Fare Amount", "Test_Scnario": "Fare Payment within Intra-SP Transfer window", "Test_Sce_Description": "Verify that the SA Tool can accept fare payment from a Virtual Card within the Intra-SP Transfer window. The ATS should read that the Virtual Card contains a valid intra-agency transfer product and deduct $0 from the Virtual Card E-Purse."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Virtual Card", "Use_Case_Name": "Accepting Fare Payment from a Virtual Card using ePurse Balance - Customer Has a Registered Virtual Card with Positive ePurse Balance Less Than the Fare Amount", "Test_Scnario": "Fare Payment within Inter-SP Transfer window", "Test_Sce_Description": "Verify that the SA Tool can accept fare payment from a Virtual Card within the Inter-SP Transfer window. The ATS should read that the Virtual Card contains a valid inter-agency transfer product and deduct $0 from the Virtual Card E-Purse."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Virtual Card", "Use_Case_Name": "Accepting Fare Payment from a Virtual Card using ePurse Balance - Customer Has a Registered Virtual Card with Positive ePurse Balance Less Than the Fare Amount", "Test_Scnario": "Fare Payment during Peak hours after reaching Off Peak Daily Cap", "Test_Sce_Description": "Verify that the SA Tool can accept fare payment from a Virtual Card during peak hours after previously reaching off peak daily cap. The ATS should compute the fare and deduct the amount from the Virtual Card E-Purse."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Virtual Card", "Use_Case_Name": "Accepting Fare Payment from a Virtual Card using ePurse Balance - Customer Has a Registered Virtual Card with Positive ePurse Balance Less Than the Fare Amount", "Test_Scnario": "Fare Payment on Premium Service Route with Transfer where the Premium fare is higher than the Special Event fare", "Test_Sce_Description": "Verify that the SA Tool can accept fare payment from a Virtual Card on a premium service route/location after previously riding on a Special Event service route. The ATS should compute the fare and deduct the amount from the Virtual Card E-Purse."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Virtual Card", "Use_Case_Name": "Accepting Fare Payment from a Virtual Card using ePurse Balance - Customer Has a Registered Virtual Card with Positive ePurse Balance Less Than the Fare Amount", "Test_Scnario": "Fare Payment on Premium Service Route with Transfer where the Premium fare is lower than the Special Event fare", "Test_Sce_Description": "Verify that the SA Tool can accept fare payment from a Virtual Card on a premium service route/location after previously riding on a Special Event service route. The ATS should compute the fare and deduct the amount from the Virtual Card E-Purse."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Virtual Card", "Use_Case_Name": "Accepting Fare Payment from a Virtual Card using ePurse Balance - Customer Has a Registered Virtual Card with Positive ePurse Balance Less Than the Fare Amount", "Test_Scnario": "Fare Payment with a Valid Non-Adult Concession", "Test_Sce_Description": "Verify that the SA Tool can accept fare payment from a Virtual Card that has a valid non-adult concession. The application should show the successful fare payment screen for non-adult concession and play the successful fare payment audio tone."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Virtual Card", "Use_Case_Name": "Accepting Fare Payment from a Virtual Card using ePurse Balance - Transaction is within Intra-SP Transfer window", "Test_Scnario": "Virtual Card Unreadable", "Test_Sce_Description": "Test the scenario where the SA Tool NFC reader detects the Virtual Card but is unable to read it. The application should indicate to the operator that the Virtual Card is unreadable. The customer will tap on the NFC reader again. If the tap is successful, steps 4 \u2013 7 will be conducted. If the tap is unsuccessful, the SA Tool application will indicate to the operator that the CLIENT (Virtual) Card is unreadable."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Virtual Card", "Use_Case_Name": "Accepting Fare Payment from a Virtual Card using ePurse Balance - Transaction is within Intra-SP Transfer window", "Test_Scnario": "Non-Adult, Non-Child, non-discreet concessions", "Test_Sce_Description": "Test the scenario where the customer\u2019s Virtual Card has a Valid Non-Adult, Non-Child, non-discreet concessions. The SA Tool should show the successful fare payment screen for non-adult concession, plays the successful fare payment audio tone for a concession other than Adult, Child, or Discreet Concessions."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Virtual Card", "Use_Case_Name": "Accepting Fare Payment from a Virtual Card using ePurse Balance - Transaction is within Intra-SP Transfer window", "Test_Scnario": "ePurse balance is less than the fare amount", "Test_Sce_Description": "Test the scenario where the customer\u2019s ePurse balance is less than the fare amount. The device sends the tap to ATS for processing. ATS checks the online hotlist and completes the fare processing. ATS removes the fare from the Virtual Card e-Purse and puts the card into overdraft."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Virtual Card", "Use_Case_Name": "Accepting Fare Payment from a Virtual Card using ePurse Balance - Transaction is within Intra-SP Transfer window", "Test_Scnario": "Transaction is within Intra-SP Transfer window", "Test_Sce_Description": "Test the scenario where the customer\u2019s Virtual Card has a valid transfer product. ATS will read that the Virtual Card contains a valid intra-agency transfer product and deduct $0 from the Virtual Card E-Purse. This will be communicated back to the device."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Virtual Card", "Use_Case_Name": "Accepting Fare Payment from a Virtual Card using ePurse Balance - Transaction is within Intra-SP Transfer window", "Test_Scnario": "Transaction is within Inter-SP Transfer window", "Test_Sce_Description": "Test the scenario where the customer\u2019s Virtual Card has a valid transfer product from other service provider. ATS will read that the Virtual Card contains a valid inter-agency transfer product and deduct $0 from the Virtual Card E-Purse. This will be communicated back to the device."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Virtual Card", "Use_Case_Name": "Accepting Fare Payment from a Virtual Card using ePurse Balance - Transaction is within Intra-SP Transfer window", "Test_Scnario": "Customer requests Audio Messages", "Test_Sce_Description": "Test the scenario where the customer asks to pay for the trip with their Virtual Card and requests audio messages for fare payment. Operator enables audio mode. The operator can change the volume level using the physical device buttons at the customer\u2019s discretion or proceed with the use case."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Virtual Card", "Use_Case_Name": "Accepting Fare Payment from a Virtual Card using ePurse Balance - Transaction is within Intra-SP Transfer window", "Test_Scnario": "Daily Cap Reached outside of Transfer window on SA Tool", "Test_Sce_Description": "Test the scenario where the fare payment is being made on the SA Tool and the Farecard has reached Daily Cap Limit and is out of transfer window. ATS deducts no fare since the Daily Cap is reached."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Virtual Card", "Use_Case_Name": "Accepting Fare Payment from a Virtual Card using ePurse Balance - Transaction is within Intra-SP Transfer window", "Test_Scnario": "Premium Service or Special Route/Location on SA Tool", "Test_Sce_Description": "Test the scenario where the fare payment is being made on the SA Tool and the Service Class is Premium or Special Event. ATS will compute the fare and deduct the amount from the Virtual Card E-Purse. This will be communicated back to the SA Tool."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Virtual Card", "Use_Case_Name": "Accepting Fare Payment from a Virtual Card using ePurse Balance - Transaction is within Intra-SP Transfer window", "Test_Scnario": "Premium Service or Special Route/Location with Fare Upgrade on SA Tool", "Test_Sce_Description": "Test the scenario where the fare payment is being made on the SA Tool, the Service Class is Premium or Special Event, the Farecard has a valid Regular Service Transfer Product and the Tap is within Transfer Window. ATS will compute the fare and deduct the amount from the Virtual Card E-Purse. This will be communicated back to the SA Tool."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Virtual Card", "Use_Case_Name": "Accepting Fare Payment from a Virtual Card using ePurse Balance - Transaction is within Inter-SP Transfer window", "Test_Scnario": "Virtual Card Unreadable", "Test_Sce_Description": "Verify that the SA Tool application correctly detects and indicates when a Virtual Card is unreadable. This includes testing the NFC reader's ability to detect the Virtual Card and the application's response when the card is unreadable. Also, verify the application's response when the customer attempts to tap the NFC reader again."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Virtual Card", "Use_Case_Name": "Accepting Fare Payment from a Virtual Card using ePurse Balance - Transaction is within Inter-SP Transfer window", "Test_Scnario": "Non-Adult, Non-Child, Non-Discreet Concessions", "Test_Sce_Description": "Verify that the SA Tool correctly processes fare payments from a Virtual Card with a valid non-adult, non-child, non-discreet concession. This includes checking the successful fare payment screen and audio tone for such concessions."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Virtual Card", "Use_Case_Name": "Accepting Fare Payment from a Virtual Card using ePurse Balance - Transaction is within Inter-SP Transfer window", "Test_Scnario": "ePurse Balance Less Than Fare Amount", "Test_Sce_Description": "Verify that the SA Tool correctly processes fare payments when the customer's ePurse balance is less than the fare amount. This includes checking the ATS's ability to remove the fare from the Virtual Card e-Purse and put the card into overdraft, and the device's feedback to the Cardholder of a successful transaction."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Virtual Card", "Use_Case_Name": "Accepting Fare Payment from a Virtual Card using ePurse Balance - Transaction is within Inter-SP Transfer window", "Test_Scnario": "Intra-SP Transfer Window", "Test_Sce_Description": "Verify that the SA Tool correctly processes fare payments when the transaction is within the Intra-SP Transfer window. This includes checking the ATS's ability to read that the Virtual Card contains a valid intra-agency transfer product and deduct $0 from the Virtual Card E-Purse, and the device's feedback to the Cardholder of a successful transaction with a transfer."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Virtual Card", "Use_Case_Name": "Accepting Fare Payment from a Virtual Card using ePurse Balance - Transaction is within Inter-SP Transfer window", "Test_Scnario": "Inter-SP Transfer Window", "Test_Sce_Description": "Verify that the SA Tool correctly processes fare payments when the transaction is within the Inter-SP Transfer window. This includes checking the ATS's ability to read that the Virtual Card contains a valid inter-agency transfer product and deduct $0 from the Virtual Card E-Purse, and the device's feedback to the Cardholder of a successful transaction with a transfer."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Virtual Card", "Use_Case_Name": "Accepting Fare Payment from a Virtual Card using ePurse Balance - Transaction is within Inter-SP Transfer window", "Test_Scnario": "Audio Messages Request", "Test_Sce_Description": "Verify that the SA Tool correctly processes fare payments when the customer requests audio messages for fare payment. This includes checking the operator's ability to enable audio mode and change the volume level, and the SA Tool's ability to display the fare payment screen and play the corresponding audio message in the default language of the Farecard."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Virtual Card", "Use_Case_Name": "Accepting Fare Payment from a Virtual Card using ePurse Balance - Transaction is within Inter-SP Transfer window", "Test_Scnario": "Daily Cap Reached Outside of Transfer Window", "Test_Sce_Description": "Verify that the SA Tool correctly processes fare payments when the Farecard has reached the Daily Cap Limit and is out of the transfer window. This includes checking the ATS's ability to deduct no fare since the Daily Cap is reached."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Virtual Card", "Use_Case_Name": "Accepting Fare Payment from a Virtual Card using ePurse Balance - Transaction is within Inter-SP Transfer window", "Test_Scnario": "Premium Service or Special Route/Location", "Test_Sce_Description": "Verify that the SA Tool correctly processes fare payments when the service class is Premium or Special Event. This includes checking the ATS's ability to compute the fare and deduct the amount from the Virtual Card E-Purse."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Virtual Card", "Use_Case_Name": "Accepting Fare Payment from a Virtual Card using ePurse Balance - Transaction is within Inter-SP Transfer window", "Test_Scnario": "Premium Service or Special Route/Location with Fare Upgrade", "Test_Sce_Description": "Verify that the SA Tool correctly processes fare payments when the service class is Premium or Special Event and the Farecard has a valid Regular Service Transfer Product within the Transfer Window. This includes checking the ATS's ability to compute the fare upgrade and deduct the amount from the Virtual Card E-Purse."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Virtual Card", "Use_Case_Name": "Accepting Fare Payment on an Online SA Tool from a Virtual Card using Period Pass \u2013 Service Class Route/Location which is higher fare value than the Period Pass Service Class fare on SA Tool", "Test_Scnario": "Validating Limited Period Pass within valid time", "Test_Sce_Description": "This scenario is to validate the functionality of the SA Tool when a farecard with a valid Limited Period Pass is used within the valid time limit. The tool should successfully accept the fare payment."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Virtual Card", "Use_Case_Name": "Accepting Fare Payment on an Online SA Tool from a Virtual Card using Period Pass \u2013 Service Class Route/Location which is higher fare value than the Period Pass Service Class fare on SA Tool", "Test_Scnario": "Validating Limited Period Pass outside valid time with sufficient e-Purse balance", "Test_Sce_Description": "This scenario is to validate the functionality of the SA Tool when a farecard with a valid Limited Period Pass is used outside the valid time limit but has sufficient e-Purse balance. The tool should deduct the fare from the e-Purse and accept the fare payment."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Virtual Card", "Use_Case_Name": "Accepting Fare Payment on an Online SA Tool from a Virtual Card using Period Pass \u2013 Service Class Route/Location which is higher fare value than the Period Pass Service Class fare on SA Tool", "Test_Scnario": "Handling Anonymous Farecard with Expired Period Pass and Insufficient ePurse Balance", "Test_Sce_Description": "This scenario is to validate the functionality of the SA Tool when an anonymous farecard with an expired period pass and insufficient ePurse balance is used. The tool should decline the transaction and display a declined message to the customer."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Virtual Card", "Use_Case_Name": "Accepting Fare Payment on an Online SA Tool from a Virtual Card using Period Pass \u2013 Service Class Route/Location which is higher fare value than the Period Pass Service Class fare on SA Tool", "Test_Scnario": "Handling Blocked Farecard", "Test_Sce_Description": "This scenario is to validate the functionality of the SA Tool when a blocked farecard is used. The tool should decline the transaction and display a declined message to the customer."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Virtual Card", "Use_Case_Name": "Accepting Fare Payment on an Online SA Tool from a Virtual Card using Period Pass \u2013 Service Class Route/Location which is higher fare value than the Period Pass Service Class fare on SA Tool", "Test_Scnario": "Handling Farecard on Deny List", "Test_Sce_Description": "This scenario is to validate the functionality of the SA Tool when a farecard on the Deny List is used. The tool should remove the card from the Deny List, set it to blocked, decline the transaction and display a declined message to the customer."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Virtual Card", "Use_Case_Name": "Accepting Fare Payment on an Online SA Tool from a Virtual Card using Period Pass \u2013 Service Class Route/Location which is higher fare value than the Period Pass Service Class fare on SA Tool", "Test_Scnario": "Handling Low Battery Threshold during Payment", "Test_Sce_Description": "This scenario is to validate the functionality of the SA Tool when the battery goes below the low battery threshold during payment. The tool should still be able to process the remote lists and complete the transaction."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Virtual Card", "Use_Case_Name": "Accepting Fare Payment on an Online SA Tool from a Virtual Card using Period Pass \u2013 Service Class Route/Location which is higher fare value than the Period Pass Service Class fare on SA Tool", "Test_Scnario": "Handling Unreadable Virtual Card", "Test_Sce_Description": "This scenario is to validate the functionality of the SA Tool when it detects a Virtual Card but fails to read it correctly. The tool should indicate to the operator that the Virtual Card is unreadable."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Virtual Card", "Use_Case_Name": "Accepting Fare Payment on an Online SA Tool from a Virtual Card using Period Pass \u2013 Service Class Route/Location which is higher fare value than the Period Pass Service Class fare on SA Tool", "Test_Scnario": "Handling Virtual Card with Sufficient ePurse Balance and Expired Period Pass", "Test_Sce_Description": "This scenario is to validate the functionality of the SA Tool when a Virtual Card with an expired period pass and sufficient ePurse balance is used. The tool should deduct the fare from the e-Purse and accept the fare payment."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Virtual Card", "Use_Case_Name": "Accepting Fare Payment on an Online SA Tool from a Virtual Card using Period Pass \u2013 Service Class Route/Location which is higher fare value than the Period Pass Service Class fare on SA Tool", "Test_Scnario": "Handling Registered Farecard with Insufficient ePurse Balance and Expired Period Pass", "Test_Sce_Description": "This scenario is to validate the functionality of the SA Tool when a registered farecard with an expired period pass and insufficient ePurse balance is used. The tool should put the card into overdraft and accept the fare payment."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Virtual Card", "Use_Case_Name": "Accepting Fare Payment on an Online SA Tool from a Virtual Card using Period Pass \u2013 Service Class Route/Location which is higher fare value than the Period Pass Service Class fare on SA Tool", "Test_Scnario": "Handling Inter-SP Transfer", "Test_Sce_Description": "This scenario is to validate the functionality of the SA Tool when a farecard with a valid transfer product from another service provider is used. The tool should read the valid inter-agency transfer product and accept the fare payment."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Virtual Card", "Use_Case_Name": "Accepting Fare Payment on an Online SA Tool from a Virtual Card using Period Pass \u2013 Service Class Route/Location which is higher fare value than the Period Pass Service Class fare on SA Tool", "Test_Scnario": "Handling Audio Messages Request", "Test_Sce_Description": "This scenario is to validate the functionality of the SA Tool when a customer requests audio messages for fare payment. The tool should enable audio mode and play the corresponding audio message to the customer in the default language of their Farecard."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Virtual Card", "Use_Case_Name": "Accepting Fare Payment on an Online SA Tool from a Virtual Card using Period Pass \u2013 Service Class Route/Location which is lower fare value than the Period Pass Service Class fare on SA Tool", "Test_Scnario": "Validating Limited Period Pass within valid time", "Test_Sce_Description": "This scenario is to validate the functionality of the SA Tool when a farecard with a valid Limited Period Pass is used within the valid time limit. The system should successfully accept the fare payment."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Virtual Card", "Use_Case_Name": "Accepting Fare Payment on an Online SA Tool from a Virtual Card using Period Pass \u2013 Service Class Route/Location which is lower fare value than the Period Pass Service Class fare on SA Tool", "Test_Scnario": "Validating Limited Period Pass outside valid time with sufficient e-Purse balance", "Test_Sce_Description": "This scenario is to validate the functionality of the SA Tool when a farecard with a valid Limited Period Pass is used outside the valid time limit but has sufficient e-Purse balance. The system should successfully deduct the fare from the e-Purse balance and accept the fare payment."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Virtual Card", "Use_Case_Name": "Accepting Fare Payment on an Online SA Tool from a Virtual Card using Period Pass \u2013 Service Class Route/Location which is lower fare value than the Period Pass Service Class fare on SA Tool", "Test_Scnario": "Handling Anonymous Farecard with Expired Period Pass and Insufficient ePurse Balance", "Test_Sce_Description": "This scenario is to validate the functionality of the SA Tool when an anonymous farecard with an expired period pass and insufficient ePurse balance is used. The system should decline the transaction and display a declined message to the customer."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Virtual Card", "Use_Case_Name": "Accepting Fare Payment on an Online SA Tool from a Virtual Card using Period Pass \u2013 Service Class Route/Location which is lower fare value than the Period Pass Service Class fare on SA Tool", "Test_Scnario": "Handling Blocked Farecard", "Test_Sce_Description": "This scenario is to validate the functionality of the SA Tool when a blocked farecard is used. The system should decline the transaction and display a declined message to the customer."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Virtual Card", "Use_Case_Name": "Accepting Fare Payment on an Online SA Tool from a Virtual Card using Period Pass \u2013 Service Class Route/Location which is lower fare value than the Period Pass Service Class fare on SA Tool", "Test_Scnario": "Handling Farecard on Deny List", "Test_Sce_Description": "This scenario is to validate the functionality of the SA Tool when a farecard on the Deny List is used. The system should remove the card from the Deny List, set it to blocked, decline the transaction, and display a declined message to the customer."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Virtual Card", "Use_Case_Name": "Accepting Fare Payment on an Online SA Tool from a Virtual Card using Period Pass \u2013 Service Class Route/Location which is lower fare value than the Period Pass Service Class fare on SA Tool", "Test_Scnario": "Handling Low Battery Threshold During Payment", "Test_Sce_Description": "This scenario is to validate the functionality of the SA Tool when the battery goes below the low battery threshold during a payment. The system should still be able to process the remote lists and complete the transaction."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Virtual Card", "Use_Case_Name": "Accepting Fare Payment on an Online SA Tool from a Virtual Card using Period Pass \u2013 Service Class Route/Location which is lower fare value than the Period Pass Service Class fare on SA Tool", "Test_Scnario": "Handling Unreadable Virtual Card", "Test_Sce_Description": "This scenario is to validate the functionality of the SA Tool when it detects a Virtual Card but fails to read it correctly. The system should indicate to the operator that the Virtual Card is unreadable."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Virtual Card", "Use_Case_Name": "Accepting Fare Payment on an Online SA Tool from a Virtual Card using Period Pass \u2013 Service Class Route/Location which is lower fare value than the Period Pass Service Class fare on SA Tool", "Test_Scnario": "Handling Virtual Card with Sufficient ePurse Balance and Expired Period Pass", "Test_Sce_Description": "This scenario is to validate the functionality of the SA Tool when a Virtual Card with an expired period pass and sufficient ePurse balance is used. The system should deduct the fare from the ePurse balance and accept the fare payment."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Virtual Card", "Use_Case_Name": "Accepting Fare Payment on an Online SA Tool from a Virtual Card using Period Pass \u2013 Service Class Route/Location which is lower fare value than the Period Pass Service Class fare on SA Tool", "Test_Scnario": "Handling Registered Farecard with Insufficient ePurse Balance and Expired Period Pass", "Test_Sce_Description": "This scenario is to validate the functionality of the SA Tool when a registered farecard with an expired period pass and insufficient ePurse balance is used. The system should put the Virtual Card into overdraft and accept the fare payment."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Virtual Card", "Use_Case_Name": "Accepting Fare Payment on an Online SA Tool from a Virtual Card using Period Pass \u2013 Service Class Route/Location which is lower fare value than the Period Pass Service Class fare on SA Tool", "Test_Scnario": "Handling Transaction within Inter-SP Transfer Window", "Test_Sce_Description": "This scenario is to validate the functionality of the SA Tool when a transaction is made within the Inter-SP Transfer window. The system should read the valid inter-agency transfer product and valid period pass, and confer the right to travel to the Cardholder."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Virtual Card", "Use_Case_Name": "Accepting Fare Payment on an Online SA Tool from a Virtual Card using Period Pass \u2013 Service Class Route/Location which is lower fare value than the Period Pass Service Class fare on SA Tool", "Test_Scnario": "Handling Customer Request for Audio Messages", "Test_Sce_Description": "This scenario is to validate the functionality of the SA Tool when a customer requests audio messages for fare payment. The system should enable audio mode and play the corresponding audio message to the customer in the default language of their Farecard."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Virtual Card", "Use_Case_Name": "Accepting Fare Payment on an Online SA Tool from a Virtual Card using Period Pass \u2013 Limited Period Pass", "Test_Scnario": "Validating Limited Period Pass within valid time", "Test_Sce_Description": "This scenario is to validate the functionality of the system when the farecard has a valid Limited Period Pass product on it and the time at tap is occurring within the time limit of the Limited Period Pass Product. The system should successfully accept the fare payment."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Virtual Card", "Use_Case_Name": "Accepting Fare Payment on an Online SA Tool from a Virtual Card using Period Pass \u2013 Limited Period Pass", "Test_Scnario": "Validating Limited Period Pass outside valid time with sufficient e-Purse balance", "Test_Sce_Description": "This scenario is to validate the functionality of the system when the farecard has a valid Limited Period Pass product on it and the time at tap is occurring outside of the time limit of the Limited Period Pass Product but the farecard has sufficient e-Purse balance to cover the transaction. The system should successfully accept the fare payment by deducting the fare from the e-Purse."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Virtual Card", "Use_Case_Name": "Accepting Fare Payment on an Online SA Tool from a Virtual Card using Period Pass \u2013 Limited Period Pass", "Test_Scnario": "Handling Anonymous Farecard with an Expired Period Pass and ePurse Balance Less than the Fare Amount", "Test_Sce_Description": "This scenario is to validate the functionality of the system when the customer has an expired period pass, ePurse balance is less than the fare amount and the customer has an anonymous Virtual Card. The system should decline the transaction and display a declined message to the customer."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Virtual Card", "Use_Case_Name": "Accepting Fare Payment on an Online SA Tool from a Virtual Card using Period Pass \u2013 Limited Period Pass", "Test_Scnario": "Handling Blocked Virtual Card", "Test_Sce_Description": "This scenario is to validate the functionality of the system when the customer\u2019s Farecard is blocked. The system should decline the transaction and display a declined message to the customer."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Virtual Card", "Use_Case_Name": "Accepting Fare Payment on an Online SA Tool from a Virtual Card using Period Pass \u2013 Limited Period Pass", "Test_Scnario": "Handling Virtual Card on the Deny List", "Test_Sce_Description": "This scenario is to validate the functionality of the system when the customer\u2019s Virtual Card is on the Deny List. The system should remove the card from the Deny List, set it to blocked, decline the transaction and display a declined message to the customer."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Virtual Card", "Use_Case_Name": "Accepting Fare Payment on an Online SA Tool from a Virtual Card using Period Pass \u2013 Limited Period Pass", "Test_Scnario": "Handling low battery threshold during payment", "Test_Sce_Description": "This scenario is to validate the functionality of the system when the low battery threshold is high enough that the remote lists can be processed even after the SA Tool battery goes below the low battery threshold during a successful Farecard tap. The system should successfully process the transaction."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Virtual Card", "Use_Case_Name": "Accepting Fare Payment on an Online SA Tool from a Virtual Card using Period Pass \u2013 Limited Period Pass", "Test_Scnario": "Handling tap counter at the limit", "Test_Sce_Description": "This scenario is to validate the functionality of the system when the tap counter is at the configured limit. The system should decline the transaction and display a declined message to the customer."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Virtual Card", "Use_Case_Name": "Accepting Fare Payment on an Online SA Tool from a Virtual Card using Period Pass \u2013 Limited Period Pass", "Test_Scnario": "Handling Unreadable Virtual Card", "Test_Sce_Description": "This scenario is to validate the functionality of the system when the SA Tool application detects the Virtual Card and fails to read it correctly. The system should indicate to the operator that the Virtual Card is unreadable."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Virtual Card", "Use_Case_Name": "Accepting Fare Payment on an Online SA Tool from a Virtual Card using Period Pass \u2013 Limited Period Pass", "Test_Scnario": "Handling Virtual Card with Sufficient ePurse Balance and an Expired Period Pass", "Test_Sce_Description": "This scenario is to validate the functionality of the system when the customer\u2019s Virtual Card has an expired period pass and the customer\u2019s ePurse balance is more than the fare amount. The system should successfully accept the fare payment by deducting the fare from the e-Purse."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Virtual Card", "Use_Case_Name": "Accepting Fare Payment on an Online SA Tool from a Virtual Card using Period Pass \u2013 Limited Period Pass outside of valid time with sufficient e-Purse balance", "Test_Scnario": "Validating Fare Payment with Limited Period Pass within valid time", "Test_Sce_Description": "This scenario is to test if the fare payment is accepted when the farecard has a valid Limited Period Pass product on it and the time at tap is occurring within the time limit of the Limited Period Pass Product."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Virtual Card", "Use_Case_Name": "Accepting Fare Payment on an Online SA Tool from a Virtual Card using Period Pass \u2013 Limited Period Pass outside of valid time with sufficient e-Purse balance", "Test_Scnario": "Validating Fare Payment with Limited Period Pass outside valid time with sufficient e-Purse balance", "Test_Sce_Description": "This scenario is to test if the fare payment is accepted when the farecard has a valid Limited Period Pass product on it and the time at tap is occurring outside of the time limit of the Limited Period Pass Product but the farecard has sufficient e-Purse balance to cover the transaction."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Virtual Card", "Use_Case_Name": "Accepting Fare Payment on an Online SA Tool from a Virtual Card using Period Pass \u2013 Limited Period Pass outside of valid time with sufficient e-Purse balance", "Test_Scnario": "Validating Fare Payment with Expired Period Pass and insufficient ePurse Balance", "Test_Sce_Description": "This scenario is to test if the fare payment is declined when the customer has an expired period pass, the ePurse balance is less than the fare amount and the customer has an anonymous Virtual Card."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Virtual Card", "Use_Case_Name": "Accepting Fare Payment on an Online SA Tool from a Virtual Card using Period Pass \u2013 Limited Period Pass outside of valid time with sufficient e-Purse balance", "Test_Scnario": "Validating Fare Payment with Blocked Virtual Card", "Test_Sce_Description": "This scenario is to test if the fare payment is declined when the customer\u2019s Farecard is blocked."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Virtual Card", "Use_Case_Name": "Accepting Fare Payment on an Online SA Tool from a Virtual Card using Period Pass \u2013 Limited Period Pass outside of valid time with sufficient e-Purse balance", "Test_Scnario": "Validating Fare Payment with Virtual Card on the Deny List", "Test_Sce_Description": "This scenario is to test if the fare payment is declined when the customer\u2019s Virtual Card is on the Deny List. The ATS should remove the card from the Deny List and set it to blocked."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Virtual Card", "Use_Case_Name": "Accepting Fare Payment on an Online SA Tool from a Virtual Card using Period Pass \u2013 Limited Period Pass outside of valid time with sufficient e-Purse balance", "Test_Scnario": "Validating Fare Payment when Battery goes below the low battery threshold during payment", "Test_Sce_Description": "This scenario is to test if the application switches to \u201cOut of Service\u201d mode when the low battery threshold is reached during a successful Farecard tap."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Virtual Card", "Use_Case_Name": "Accepting Fare Payment on an Online SA Tool from a Virtual Card using Period Pass \u2013 Limited Period Pass outside of valid time with sufficient e-Purse balance", "Test_Scnario": "Validating Fare Payment with a card that is not a Farecard", "Test_Sce_Description": "This scenario is to test if the \u201cCard Read Error\u201d toast message is displayed when the customer taps a card that is not a Farecard."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Virtual Card", "Use_Case_Name": "Accepting Fare Payment on an Online SA Tool from a Virtual Card using Period Pass \u2013 Limited Period Pass outside of valid time with sufficient e-Purse balance", "Test_Scnario": "Validating Fare Payment with Farecard within the Anti-Passback Window", "Test_Sce_Description": "This scenario is to test if the fare payment is declined when the customer\u2019s card is within the Anti-Passback Window."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Virtual Card", "Use_Case_Name": "Accepting Fare Payment on an Online SA Tool from a Virtual Card using Period Pass \u2013 Limited Period Pass outside of valid time with sufficient e-Purse balance", "Test_Scnario": "Validating Fare Payment with a non-activated card", "Test_Sce_Description": "This scenario is to test if the fare payment is declined when the customer\u2019s card is not activated and not on the action list available on the device."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Open Payments", "Use_Case_Name": "Open Payments Media is on the deny list", "Test_Scnario": "Open Payments Media on Deny List", "Test_Sce_Description": "Verify that when the Open Payments Media is on the deny list, the right to travel is not conferred. The device should send the tap to ATS and return a response that the media is on the deny list. The Declined \u2013 Suspended: Unpaid Fares Screen or Declined \u2013 Suspended: Other Screen should be provided to the cardholder. An error should be captured and logged in the background."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Open Payments", "Use_Case_Name": "Open Payments Media is on the deny list", "Test_Scnario": "Open Payments Media on Local Deny List and Device Offline", "Test_Sce_Description": "Verify that when the Open Payments Media is on the local deny list and the device is offline, the right to travel is not conferred. The device should check the local deny list and return a response that the media is denied. The Declined \u2013 Suspended: Unpaid Fares Screen or Declined \u2013 Suspended: Other Screen should be provided to the cardholder. An error should be captured and logged in the background."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Open Payments", "Use_Case_Name": "Open Payments Media is on the deny list", "Test_Scnario": "Multiple NFC Media Presented at Once", "Test_Sce_Description": "Verify that when multiple NFC media are presented to the device at one time, the device blocks all fare payment functionality. The Anti-Collision Error Screen should be provided to the cardholder. An error should be captured and logged in the background."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Open Payments", "Use_Case_Name": "Open Payments Media is on the deny list", "Test_Scnario": "Tap Open Payments Media when Device is Out-of-Service", "Test_Sce_Description": "Verify that when the device is in Out-of-Service state and the customer attempts to tap their Open Payments Media on the card reader, the device does not detect the media and remains in Out-of-Service State."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Open Payments", "Use_Case_Name": "Open Payments Media is on the deny list", "Test_Scnario": "Error Occurred on Device", "Test_Sce_Description": "Verify that when an error has occurred on the device that does not cover the exception cases above, the device records the tap. The Declined \u2013 See Customer Service Screen should be provided to the cardholder. An error should be captured and logged in the background."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Open Payments", "Use_Case_Name": "Open Payments Media is on the deny list", "Test_Scnario": "Tap Open Payments Media Not on Approved List in Beta Mode", "Test_Sce_Description": "Verify that when the customer attempts to tap an Open Payments media not on the approved media list while the device is in beta mode, the right to travel is not conferred. The device should send the tap to ATS and return a response that the media is on the deny list. The Declined \u2013 Suspended: Unpaid Fares Screen or Declined \u2013 Suspended: Other Screen should be provided to the cardholder. An error should be captured and logged in the background."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Open Payments", "Use_Case_Name": "Open Payments Media is on the deny list", "Test_Scnario": "Tap-on Immediately After Tapping-off at Same Station (Anti-passback)", "Test_Sce_Description": "Verify that when the customer taps-on again at an SA Tool after just tapping-off at the same station within the SA Tool Tap-on anti-passback Window, the device sends the tap to ATS and returns a response that the cardholder has already tapped on at the same station and is within the Tap-on anti-passback Window. The Declined \u2013 Already Tapped Screen should be provided to the cardholder. An error should be captured and logged in the background."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Open Payments", "Use_Case_Name": "Open Payments Media is on the local deny list and device is offline", "Test_Scnario": "Open Payments Media on Deny List", "Test_Sce_Description": "Verify that when the Open Payments Media is on the deny list, the right to travel is not conferred. The device should send the tap to ATS and return a response that the media is on the deny list. The Declined \u2013 Suspended: Unpaid Fares Screen or Declined \u2013 Suspended: Other Screen should be provided to the cardholder. An error should be captured and logged in the background."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Open Payments", "Use_Case_Name": "Open Payments Media is on the local deny list and device is offline", "Test_Scnario": "Open Payments Media on Local Deny List and Device Offline", "Test_Sce_Description": "Verify that when the Open Payments Media is on the local deny list and the device is offline, the right to travel is not conferred. The device should check the local deny list and return a response that the media is denied. The Declined \u2013 Suspended: Unpaid Fares Screen or Declined \u2013 Suspended: Other Screen should be provided to the cardholder. An error should be captured and logged in the background."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Open Payments", "Use_Case_Name": "Open Payments Media is on the local deny list and device is offline", "Test_Scnario": "Multiple NFC Media Presented at Once", "Test_Sce_Description": "Verify that when multiple NFC media are presented to the device at one time, the device blocks all fare payment functionality. The Anti-Collision Error Screen should be provided to the cardholder. An error should be captured and logged in the background."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Open Payments", "Use_Case_Name": "Open Payments Media is on the local deny list and device is offline", "Test_Scnario": "Tap Open Payments Media when Device is Out-of-Service", "Test_Sce_Description": "Verify that when the device is in Out-of-Service state and a customer attempts to tap their Open Payments Media on the card reader, the device does not detect the media and remains in Out-of-Service State."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Open Payments", "Use_Case_Name": "Open Payments Media is on the local deny list and device is offline", "Test_Scnario": "Error Occurred on Device", "Test_Sce_Description": "Verify that when an error has occurred on the device that does not cover the exception cases above, the device records the tap and the Declined \u2013 See Customer Service Screen is provided to the cardholder. An error should be captured and logged in the background."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Open Payments", "Use_Case_Name": "Open Payments Media is on the local deny list and device is offline", "Test_Scnario": "Tap Open Payments Media Not on Approved List in Beta Mode", "Test_Sce_Description": "Verify that when a customer attempts to tap an Open Payments media not on the approved media list while the device is in beta mode, the right to travel is not conferred. The device should send the tap to ATS and return a response that the media is on the deny list. The Declined \u2013 Suspended: Unpaid Fares Screen or Declined \u2013 Suspended: Other Screen should be provided to the cardholder. An error should be captured and logged in the background."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Open Payments", "Use_Case_Name": "Open Payments Media is on the local deny list and device is offline", "Test_Scnario": "Tap-on Immediately After Tapping-off at Same Station (Anti-passback)", "Test_Sce_Description": "Verify that when a customer attempts to tap-on immediately after tapping-off at the same station and the device is online, the device sends the tap to ATS and returns a response that the cardholder has already tapped on at the same station and is within the Tap-on anti-passback Window. The Declined \u2013 Already Tapped Screen should be provided to the cardholder. An error should be captured and logged in the background."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Open Payments", "Use_Case_Name": "Multiple NFC media are presented to the device at one time", "Test_Scnario": "Multiple NFC media presented at once", "Test_Sce_Description": "This scenario tests the functionality of the device when multiple NFC media are presented to the card reader at the same time. The device should block all user functionality and present an Anti-Collision toast message to the customer. An error should be captured and logged in the background for troubleshooting purposes."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Open Payments", "Use_Case_Name": "Multiple NFC media are presented to the device at one time", "Test_Scnario": "Non-activated Farecard", "Test_Sce_Description": "This scenario tests the functionality of the device when a non-activated Farecard is tapped on the device. The transaction should be unsuccessful, and the device should provide feedback to the Cardholder of an unsuccessful transaction due to inactive farecard. An error should be captured and logged in the background for troubleshooting purposes."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Open Payments", "Use_Case_Name": "Multiple NFC media are presented to the device at one time", "Test_Scnario": "Card reading error", "Test_Sce_Description": "This scenario tests the functionality of the device when a Cardholder taps Farecard on an SA Tool and a Card reading error occurs. The device should not provide any feedback and screen remains \u201cIn-Service\u201d display. An error should be captured and logged in the background for troubleshooting purposes."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Open Payments", "Use_Case_Name": "Multiple NFC media are presented to the device at one time", "Test_Scnario": "Card write error", "Test_Sce_Description": "This scenario tests the functionality of the device when it fails to write to the Farecard. The device should not provide any feedback and screen remains \u201cIn-Service\u201d display. The device should delete the transaction information. An error should be captured and logged in the background for troubleshooting purposes."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Open Payments", "Use_Case_Name": "Multiple NFC media are presented to the device at one time", "Test_Scnario": "Device in Out-of-Service state", "Test_Sce_Description": "This scenario tests the functionality of the device when it is in Out-of-Service state. The device should display the Not in Service screen to the cardholder. The device should not detect the media and remains in Out-of-Service State."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Open Payments", "Use_Case_Name": "Multiple NFC media are presented to the device at one time", "Test_Scnario": "Tap-on immediately after tapping-off at the same station", "Test_Sce_Description": "This scenario tests the functionality of the device when the cardholder taps-on again at an SA Tool after just tapping-off at the same station within the SA Tool Tap-off anti-passback Window. The device should provide the cardholder with the appropriate feedback. An error should be captured and logged in the background for troubleshooting purposes."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Open Payments", "Use_Case_Name": "Multiple NFC media are presented to the device at one time", "Test_Scnario": "Error occurred on the device", "Test_Sce_Description": "This scenario tests the functionality of the device when an error has occurred on the device that does not cover the exception cases above. The device should record the tap and provide the Declined \u2013 See Customer Service Screen to the cardholder. An error should be captured and logged in the background for troubleshooting purposes."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Open Payments", "Use_Case_Name": "Multiple NFC media are presented to the device at one time", "Test_Scnario": "Insufficient E-Purse to cover the Tap-On Fare", "Test_Sce_Description": "This scenario tests the functionality of the device when the Virtual Card has insufficient E-Purse to cover the Tap-On Fare. The device should provide the appropriate feedback to the cardholder. An error should be captured and logged in the background for troubleshooting purposes."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Open Payments", "Use_Case_Name": "Tap an Open Payments Media when SA Tool is in Out-of-Service state", "Test_Scnario": "Testing Out-of-Service state", "Test_Sce_Description": "Verify that when the SA Tool is in Out-of-Service state, it does not detect the Open Payments Media when a customer attempts to tap it on the card reader. The device should remain in Out-of-Service state."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Open Payments", "Use_Case_Name": "Tap an Open Payments Media when SA Tool is in Out-of-Service state", "Test_Scnario": "Testing Farecard reversals only configuration", "Test_Sce_Description": "Verify that when the SA Tool is configured for only farecard reversals, it provides an error message 'Only Available for Farecard' to the cardholder when they attempt to tap their Open Payments Media on the card reader."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Open Payments", "Use_Case_Name": "Tap an Open Payments Media when SA Tool is in Out-of-Service state", "Test_Scnario": "Testing unapproved media in Pilot mode", "Test_Sce_Description": "Verify that when the device is in Pilot mode and an unapproved Open Payments media is tapped, the device checks the approved media list and provides a 'Declined \u2013 Not Accepted, Tap Farecard' screen to the cardholder if the media is not on the list."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Open Payments", "Use_Case_Name": "Tap an Open Payments Media when SA Tool is in Out-of-Service state", "Test_Scnario": "Testing BIN Blocking List", "Test_Sce_Description": "Verify that when a customer's Open Payments Media is on the BIN Blocking List, the device checks its local BIN Blocking list, plays the decline audio tone and displays the 'Declined \u2013 Try Another Card (BIN Blocked)' screen."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Open Payments", "Use_Case_Name": "Tap an Open Payments Media when SA Tool is in Out-of-Service state", "Test_Scnario": "Testing Interac Card reversal with Interac disabled", "Test_Sce_Description": "Verify that when a cardholder attempts to reverse fare payment with an Interac Card while Interac is disabled on the SA Tool, the device determines that the media tapped is not supported and displays an error message."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Open Payments", "Use_Case_Name": "Tap an Open Payments Media when SA Tool is in Out-of-Service state", "Test_Scnario": "Testing Open Payment Card reversal with Open Payments disabled", "Test_Sce_Description": "Verify that when a cardholder attempts to reverse fare payment with an Open Payment Card while Open Payments are disabled on the SA Tool, the device determines that the media tapped is not supported and displays an error message."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Open Payments", "Use_Case_Name": "Tap an Open Payments Media when SA Tool is in Out-of-Service state", "Test_Scnario": "Testing Open Payment Card reversal with corresponding payment method/card brand disabled", "Test_Sce_Description": "Verify that when a cardholder attempts to reverse fare payment with an Open Payment Card while the corresponding payment method/card brand is disabled on the SA Tool, the device determines that the media tapped is not supported and displays an error message."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Open Payments", "Use_Case_Name": "Tap an Open Payments Media when SA Tool is in Out-of-Service state", "Test_Scnario": "Testing Standby State", "Test_Sce_Description": "Verify that when the SA Tool is in Standby state, the screen is turned off and the device disconnects from all peripherals to conserve battery life."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Open Payments", "Use_Case_Name": "Tap an Open Payments Media when SA Tool is in Out-of-Service state", "Test_Scnario": "Testing Revenue Mode", "Test_Sce_Description": "Verify that in Revenue Mode, the SA Tool operator can perform inspection, fare payments, sales, refunds/reversals, farecard queries, and other customer service gestures."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Open Payments", "Use_Case_Name": "Tap an Open Payments Media when SA Tool is in Out-of-Service state", "Test_Scnario": "Testing Training Mode", "Test_Sce_Description": "Verify that in Training Mode, the SA Tool operator can mimic all functionality available within Sales Mode without accepting payment, and only sending non-revenue transactions."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Open Payments", "Use_Case_Name": "Customer attempts to tap on and an error has occurred", "Test_Scnario": "Device records the tap and error occurs", "Test_Sce_Description": "Verify that the device correctly records the tap and an error occurs that does not cover the exception cases above. The error should be logged and sent to ATS."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Open Payments", "Use_Case_Name": "Customer attempts to tap on and an error has occurred", "Test_Scnario": "Device checks approved media list in beta mode", "Test_Sce_Description": "Verify that the device checks the approved media list when it is provisioned in beta mode and an Open Payments media that is not on the approved media list is tapped on the device. The device should provide the Declined \u2013 Not Accepted, Tap Farecard screen to the cardholder if the media is not on the approved list."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Open Payments", "Use_Case_Name": "Customer attempts to tap on and an error has occurred", "Test_Scnario": "Device checks local BIN Blocking list", "Test_Sce_Description": "Verify that the device checks its local BIN Blocking list and finds the card\u2019s BIN on the list. The device should play the decline audio tone and display the Declined \u2013 Try Another Card (BIN Blocked) screen."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Open Payments", "Use_Case_Name": "Customer attempts to tap on and an error has occurred", "Test_Scnario": "Device sends tap to ATS and returns a decline response", "Test_Sce_Description": "Verify that the device sends the tap to ATS and returns a response that the Interac media is on the deny list. The device should not confer the right to travel and provide the Declined \u2013 Tap Again (in X Seconds) screen (Interac \u2013 Trying to Pay Unpaid Fares) to the cardholder."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Open Payments", "Use_Case_Name": "Customer attempts to tap on and an error has occurred", "Test_Scnario": "Device checks local deny list while offline", "Test_Sce_Description": "Verify that the device checks the local deny list when it is offline. The media should be on the local deny list due to reason Media in Debt. The device should not confer the right to travel and provide the Declined \u2013 Tap Again (in X Seconds) screen (Interac \u2013 Trying to Pay Unpaid Fares) to the cardholder."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Open Payments", "Use_Case_Name": "Customer attempts to tap on and an error has occurred", "Test_Scnario": "Device detects Interac media and displays error message", "Test_Sce_Description": "Verify that the device detects the Interac media when the cardholder taps it on the device Card Reader (CID). The device should determine that the media tapped is not supported and display an error message. The device should not confer the right to travel and not record a transaction."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Open Payments", "Use_Case_Name": "Customer attempts to tap on and an error has occurred", "Test_Scnario": "Device records the tap and provides Declined \u2013 See Customer Service Screen", "Test_Sce_Description": "Verify that the device records the tap and provides the Declined \u2013 See Customer Service Screen to the cardholder. An error should be captured and logged in the background when this occurs to help with troubleshooting the issue. This error should also be captured in the SOTI logs."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Open Payments", "Use_Case_Name": "Customer attempts to tap on and an error has occurred", "Test_Scnario": "Device sends tap to ATS and returns insufficient E-Purse balance response", "Test_Sce_Description": "Verify that the device sends the tap to ATS which returns a response that the virtual card does not have a sufficient E-Purse balance to cover the tap-on fare. The device should provide the Declined \u2013 Insufficient E-Purse Balance to the cardholder."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Open Payments", "Use_Case_Name": "Customer attempts to tap on and an error has occurred", "Test_Scnario": "Device sends tap to ATS and returns media on online hotlist response", "Test_Sce_Description": "Verify that the device sends the tap to ATS and returns a response that the media is on the online hotlist. The device should not confer the right to travel and provide the Declined \u2013 Blocked Screen to the cardholder."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Open Payments", "Use_Case_Name": "Customer attempts to tap on and an error has occurred", "Test_Scnario": "Device sends tap to ATS and updates scratchpad with blocked status", "Test_Sce_Description": "Verify that the device sends the tap to ATS for processing. ATS checks the online hotlist and confirms that the virtual card is on the online hotlist. The device should update the scratchpad with the blocked status and send a notification to ATS that it has done so."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Open Payments", "Use_Case_Name": "Customer attempts to tap on and an error has occurred", "Test_Scnario": "Device checks local hotlist while offline", "Test_Sce_Description": "Verify that the device checks the local hotlist when it is offline. The media should be on the local hotlist. The device should not confer the right to travel and provide the Declined \u2013 Blocked Screen to the cardholder."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Open Payments", "Use_Case_Name": "Customer attempts to tap an Open Payments media not on the approved media list while the device is in beta mode", "Test_Scnario": "Open Payments Media on Deny List", "Test_Sce_Description": "Verify that when the Open Payments Media is on the deny list, the right to travel is not conferred. The device should send the tap to ATS and return a response that the media is on the deny list. The Declined \u2013 Suspended: Unpaid Fares Screen or Declined \u2013 Suspended: Other Screen should be provided to the cardholder. An error should be captured and logged in the background."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Open Payments", "Use_Case_Name": "Customer attempts to tap an Open Payments media not on the approved media list while the device is in beta mode", "Test_Scnario": "Open Payments Media on Local Deny List and Device Offline", "Test_Sce_Description": "Verify that when the Open Payments Media is on the local deny list and the device is offline, the right to travel is not conferred. The device should check the local deny list and return a response that the media is denied. The Declined \u2013 Suspended: Unpaid Fares Screen or Declined \u2013 Suspended: Other Screen should be provided to the cardholder. An error should be captured and logged in the background."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Open Payments", "Use_Case_Name": "Customer attempts to tap an Open Payments media not on the approved media list while the device is in beta mode", "Test_Scnario": "Multiple NFC Media Presented at Once", "Test_Sce_Description": "Verify that when multiple NFC media are presented to the device at one time, the device blocks all fare payment functionality. The Anti-Collision Error Screen should be provided to the cardholder. An error should be captured and logged in the background."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Open Payments", "Use_Case_Name": "Customer attempts to tap an Open Payments media not on the approved media list while the device is in beta mode", "Test_Scnario": "Tap Open Payments Media when Device is Out-of-Service", "Test_Sce_Description": "Verify that when the device is in Out-of-Service state and the customer attempts to tap their Open Payments Media on the card reader, the device does not detect the media and remains in Out-of-Service State."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Open Payments", "Use_Case_Name": "Customer attempts to tap an Open Payments media not on the approved media list while the device is in beta mode", "Test_Scnario": "Error Occurred on Device", "Test_Sce_Description": "Verify that when an error has occurred on the device that does not cover the exception cases above, the device records the tap and the Declined \u2013 See Customer Service Screen is provided to the cardholder. An error should be captured and logged in the background."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Open Payments", "Use_Case_Name": "Customer attempts to tap an Open Payments media not on the approved media list while the device is in beta mode", "Test_Scnario": "Tap Open Payments Media Not on Approved List in Beta Mode", "Test_Sce_Description": "Verify that when the customer attempts to tap an Open Payments media not on the approved media list while the device is in beta mode, the right to travel is not conferred. The device should send the tap to ATS and return a response that the media is on the deny list. The Declined \u2013 Suspended: Unpaid Fares Screen or Declined \u2013 Suspended: Other Screen should be provided to the cardholder. An error should be captured and logged in the background."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Open Payments", "Use_Case_Name": "Customer attempts to tap an Open Payments media not on the approved media list while the device is in beta mode", "Test_Scnario": "Tap-on Immediately After Tapping-off at Same Station (Online)", "Test_Sce_Description": "Verify that when the customer taps-on again at an SA Tool after just tapping-off at the same station within the SA Tool Tap-on anti-passback Window, the device sends the tap to ATS and returns a response that the cardholder has already tapped on at the same station and is within the Tap-on anti-passback Window. The Declined \u2013 Already Tapped Screen should be provided to the cardholder. An error should be captured and logged in the background."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Open Payments", "Use_Case_Name": "Customer attempts to tap an Open Payments media not on the approved media list while the device is in beta mode", "Test_Scnario": "Tap-on Immediately After Tapping-off at Same Station (Offline)", "Test_Sce_Description": "Verify that when the customer taps-on again at an SA Tool after just tapping-off at the same station within the SA Tool Tap-on anti-passback Window and the device is offline, the device should not detect the tap and remain in the offline state. An error should be captured and logged in the background."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Open Payments", "Use_Case_Name": "Customers attempts to tap-on immediately after tapping-off at the same station and the device is online (Anti-passback)", "Test_Scnario": "Customer attempts to tap-on immediately after tapping-off at the same station and the device is online (Anti-passback)", "Test_Sce_Description": "This scenario tests the functionality of the device when a customer attempts to tap-on immediately after tapping-off at the same station while the device is online. The device should check the latent transaction processor for a previous tap within the anti-passback window. The tap should be stored on the device until it is connected to ATS where the tap will be reconciled. An error should be captured and logged in the background when this occurs to help with troubleshooting the issue."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Open Payments", "Use_Case_Name": "Customers attempts to tap-on immediately after tapping-off at the same station and the device is online (Anti-passback)", "Test_Scnario": "Customer attempts to tap on and an error has occurred", "Test_Sce_Description": "This scenario tests the functionality of the device when an error has occurred that does not cover the exception cases. The device should record the tap and provide the Declined \u2013 See Customer Service Screen to the cardholder. An error should be captured and logged in the background when this occurs to help with troubleshooting the issue."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Open Payments", "Use_Case_Name": "Customers attempts to tap-on immediately after tapping-off at the same station and the device is online (Anti-passback)", "Test_Scnario": "Customer attempts to tap an Open Payments media not on the approved media list while the device is in beta mode", "Test_Sce_Description": "This scenario tests the functionality of the device when it is provisioned in beta mode and an Open Payments media that is not on the approved media list is tapped on the device. The device should check the approved media list and if the media is not found on the list, the Declined \u2013 Tap Farecard Screen should be provided to the cardholder. An error should be captured and logged in the background when this occurs to help with troubleshooting the issue."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Open Payments", "Use_Case_Name": "Customers attempts to tap-on immediately after tapping-off at the same station and the device is online (Anti-passback)", "Test_Scnario": "Customer\u2019s Open Payments Media is on the BIN Blocking List", "Test_Sce_Description": "This scenario tests the functionality of the device when the customer\u2019s Open Payments Media is on the BIN Blocking List. The device should check its local BIN Blocking list and if the card\u2019s BIN is found to be on the list, the device should play the decline audio tone and display the Declined \u2013 BIN Blocked screen. An error should be captured and logged in the background when this occurs to help with troubleshooting the issue."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Open Payments", "Use_Case_Name": "Customers attempts to tap-on immediately after tapping-off at the same station and the device is online (Anti-passback)", "Test_Scnario": "Customer is travelling with an Interac Card, and ATS returns a decline response due to Media In Debt", "Test_Sce_Description": "This scenario tests the functionality of the device when the customer is travelling with an Interac Card, and ATS returns a decline response due to Media In Debt. The device should send the tap to ATS and return a response that the Interac media is on the deny list. The Declined \u2013 Interac Unpaid Fares Online Screen should be provided to the cardholder. An error should be captured and logged in the background when this occurs to help with troubleshooting the issue."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "With/Without audio messages", "Use_Case_Name": "Farecard is tapped on a device during a time period that contains an associated Temporal Class Supplement", "Test_Scnario": "Temporal Class Supplement Tap-On Transaction", "Test_Sce_Description": "Verify that when a Farecard is tapped on a device during a time period that contains an associated Temporal Class Supplement, the device correctly displays the Temporal Class Supplement and processes the Tap-On Transaction as a normal tap-on."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "With/Without audio messages", "Use_Case_Name": "Farecard is tapped on a device during a time period that contains an associated Temporal Class Supplement", "Test_Scnario": "Autoload Enabled Farecard Tap-On Transaction", "Test_Sce_Description": "Verify that when a Farecard with Autoload Enabled is tapped on a device and the Fare amount crosses the Auto-load threshold, the Farecard correctly has the Autoload amount automatically added to the E-Purse balance."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "With/Without audio messages", "Use_Case_Name": "Farecard is tapped on a device during a time period that contains an associated Temporal Class Supplement", "Test_Scnario": "Override Default Trip Tap-On Transaction", "Test_Sce_Description": "Verify that when a Farecard with no Default O/D is tapped on while the device is in Override mode, the device correctly processes the tap as a result tap-on and provides the appropriate feedback to the Cardholder of a successful transaction in addition to notifying the customer that the Default Trip was overridden."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "With/Without audio messages", "Use_Case_Name": "Farecard is tapped on a device during a time period that contains an associated Temporal Class Supplement", "Test_Scnario": "Audio Messages Request during Fare-by-Zone TA Tap-On Transaction", "Test_Sce_Description": "Verify that when a Cardholder Taps-On an SA Tool to a Fare-by-Zone TA with Farecard and requests Audio Messages, the operator correctly enables audio mode and the corresponding audio message is played to the customer in the default language of their Farecard."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "With/Without audio messages", "Use_Case_Name": "Farecard is tapped on a device during a time period that contains an associated Temporal Class Supplement", "Test_Scnario": "Farecard Validation Failure at Tap-On", "Test_Sce_Description": "Verify that when a Farecard fails validation checks at Tap-On, the device correctly provides the appropriate feedback to the cardholder without updating the Farecard and logs the error in the background for troubleshooting."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "With/Without audio messages", "Use_Case_Name": "Farecard is tapped on a device during a time period that contains an associated Temporal Class Supplement", "Test_Scnario": "Blocked Farecard Tap-On Transaction", "Test_Sce_Description": "Verify that when a blocked Farecard is tapped on a device, the right to travel is not conferred, the device provides the appropriate feedback to the Cardholder, and logs the error in the background for troubleshooting."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "With/Without audio messages", "Use_Case_Name": "Farecard is tapped on a device during a time period that contains an associated Temporal Class Supplement", "Test_Scnario": "Max Travel Duration Exceeded Tap-On Transaction", "Test_Sce_Description": "Verify that when the time since tap-on exceeds the Max Travel Duration, the Device correctly auto-settles the Underpayment, opens a new trip, and deducts the value from the Farecard E-Purse."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "With/Without audio messages", "Use_Case_Name": "Farecard is tapped on a device during a time period that contains an associated Temporal Class Supplement", "Test_Scnario": "Multiple NFC Media Presentation", "Test_Sce_Description": "Verify that when multiple NFC media are presented to the device at one time, the device correctly blocks all fare payment functionality, presents Anti-Collision HMI to customer, and logs the error in the background for troubleshooting."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "With/Without audio messages", "Use_Case_Name": "Farecard is tapped on a device during a time period that contains an associated Temporal Class Supplement", "Test_Scnario": "Non-Activated Farecard Tap-On Transaction", "Test_Sce_Description": "Verify that when a non-activated Farecard is tapped on the device, the transaction is unsuccessful, the device provides feedback to the Cardholder of an unsuccessful transaction, and logs the error in the background for troubleshooting."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "With/Without audio messages", "Use_Case_Name": "Farecard is tapped on a device during a time period that contains an associated Temporal Class Supplement", "Test_Scnario": "Card Reading Error during Tap-On Transaction", "Test_Sce_Description": "Verify that when a Cardholder taps Farecard on an SA Tool and a Card reading error occurs (e.g. Farecard is immediately removed from the card reader), the device correctly handles the error and logs it in the background for troubleshooting."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "With/Without audio messages", "Use_Case_Name": "Farecard with Autoload Enabled is tapped on a device which and the Fare amount crosses the Auto-load threshold", "Test_Scnario": "Autoload Threshold Crossing", "Test_Sce_Description": "Verify that when the Farecard with Autoload Enabled is tapped on a device and the Fare amount crosses the Auto-load threshold, the Autoload amount is automatically added to the E-Purse balance."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "With/Without audio messages", "Use_Case_Name": "Farecard with Autoload Enabled is tapped on a device which and the Fare amount crosses the Auto-load threshold", "Test_Scnario": "Fare Deduction after Autoload", "Test_Sce_Description": "Check that the device correctly deducts the Fare from the Farecard E-Purse balance after the Autoload amount has been added."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "With/Without audio messages", "Use_Case_Name": "Farecard with Autoload Enabled is tapped on a device which and the Fare amount crosses the Auto-load threshold", "Test_Scnario": "Successful Transaction Feedback", "Test_Sce_Description": "Ensure that the device provides the appropriate feedback to the Cardholder of a successful transaction in addition to notifying the customer that the autoload was successful."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "With/Without audio messages", "Use_Case_Name": "Farecard with Autoload Enabled is tapped on a device which and the Fare amount crosses the Auto-load threshold", "Test_Scnario": "Farecard Validation Failure", "Test_Sce_Description": "Validate that the device processes the Load Value or Action prior to performing the Fare Validation when Farecard fails validation checks at Tap-On."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "With/Without audio messages", "Use_Case_Name": "Farecard with Autoload Enabled is tapped on a device which and the Fare amount crosses the Auto-load threshold", "Test_Scnario": "Temporal Class Supplement Processing", "Test_Sce_Description": "Verify that the device checks the tap-on time associated to the current transaction and processes the temporal class supplement in addition to the Base Fare when Farecard taps off on a Device after the tap-on occurred during a temporal class Supplement time."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "With/Without audio messages", "Use_Case_Name": "Farecard with Autoload Enabled is tapped on a device which and the Fare amount crosses the Auto-load threshold", "Test_Scnario": "Non-Revenue Farecard Handling", "Test_Sce_Description": "Ensure that the SA tool only accepts Non-Revenue farecard in the training mode and if the Non-Revenue card is tapped in the revenue mode, the device displays a declined HMI."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "With/Without audio messages", "Use_Case_Name": "Farecard with Autoload Enabled is tapped on a device which and the Fare amount crosses the Auto-load threshold", "Test_Scnario": "Fare Type Discount Processing", "Test_Sce_Description": "Check that the device displays the \u201cFare Payment with Fare type Discount\u201d HMI and accounts for the concession discount in the Fare when Farecard with Fare type (either Universal or Specific) other than Default taps-off."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "With/Without audio messages", "Use_Case_Name": "Farecard with Autoload Enabled is tapped on a device which and the Fare amount crosses the Auto-load threshold", "Test_Scnario": "Default Trip Override", "Test_Sce_Description": "Validate that the device processes the tap as a result tap-on when the Farecard with no Default O/D is tapped on while the device is in Override mode."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "With/Without audio messages", "Use_Case_Name": "Farecard with Autoload Enabled is tapped on a device which and the Fare amount crosses the Auto-load threshold", "Test_Scnario": "Performance of Autoload", "Test_Sce_Description": "Check the performance of the device when the Autoload is triggered. The device should not slow down or hang during this process."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "With/Without audio messages", "Use_Case_Name": "Farecard with Autoload Enabled is tapped on a device which and the Fare amount crosses the Auto-load threshold", "Test_Scnario": "Security of Autoload Transaction", "Test_Sce_Description": "Ensure that the Autoload transaction is secure and no unauthorized access or modification is possible during the transaction."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "With/Without audio messages", "Use_Case_Name": "Farecard does not contain a Default O/D and the Customer Overrides the Default Trip prior to tapping-on", "Test_Scnario": "Full Fare-by-Zone transaction processing", "Test_Sce_Description": "Verify that the device correctly processes a full Fare-by-Zone transaction (both tap-on and tap-off) in case of a default O/D on the Farecard. The ATS should deduct the Full Fare value for the station-to-station trip accounting for all Fare considerations associated to the trip. Default trip will use PAR as the card identifier."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "With/Without audio messages", "Use_Case_Name": "Farecard does not contain a Default O/D and the Customer Overrides the Default Trip prior to tapping-on", "Test_Scnario": "Default O/D override", "Test_Sce_Description": "Verify that the device correctly overrides the default O/D contained on the Open Payments Media and process the tap as a regular tap-on when the customer requests the override of a Default Trip by interacting with the Device."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "With/Without audio messages", "Use_Case_Name": "Farecard does not contain a Default O/D and the Customer Overrides the Default Trip prior to tapping-on", "Test_Scnario": "Capping discount eligibility", "Test_Sce_Description": "Verify that when capping is configured, and the customer has met any of the capping criteria (Daily, Weekly, Monthly), the device sends the tap to Accenture Ticketing Services for processing. ATS checks the online deny list and completes the fare processing. ATS should calculate the capping discount and apply to the fare calculation."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "With/Without audio messages", "Use_Case_Name": "Farecard does not contain a Default O/D and the Customer Overrides the Default Trip prior to tapping-on", "Test_Scnario": "Multiple capping discounts eligibility", "Test_Sce_Description": "Verify that when capping is configured, and the customer has met a combination of multiple capping criteria (Daily, Weekly, Monthly), the device sends the tap to Accenture Ticketing Services for processing. ATS checks the online deny list and completes the fare processing. ATS should calculate the capping discount and apply to the fare calculation. When multiple caps are met ATS will take whatever Capping program which is of highest precedence (set in RE) and apply that discount to the fare."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "With/Without audio messages", "Use_Case_Name": "Farecard does not contain a Default O/D and the Customer Overrides the Default Trip prior to tapping-on", "Test_Scnario": "Offline device capping discount processing", "Test_Sce_Description": "Verify that if the SA Tool is not online and not connected to ATS, the device checks the local deny list if the media is on the local deny list. The latent transaction processor stores the tap till the device goes back online and connects to Accenture Ticketing Services. The tap is then rated in ATS. Capping rules will follow use-case logic outlined in ticketing use cases."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "With/Without audio messages", "Use_Case_Name": "Farecard does not contain a Default O/D and the Customer Overrides the Default Trip prior to tapping-on", "Test_Scnario": "Open Payments Media ODA check failure", "Test_Sce_Description": "Verify that if an Open Payments Media fails the ODA check, the device returns the appropriate feedback. The device performs the necessary validation and determines that the Open Payments Media is unable to pass the checks. The Declined \u2013 Failed ODA Check screen is provided to the cardholder. An error will be captured and logged in the background when this occurs to help with troubleshooting the issue. This error will also be captured in the SOTI logs. The declined tap is sent to ATS."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "With/Without audio messages", "Use_Case_Name": "Farecard does not contain a Default O/D and the Customer Overrides the Default Trip prior to tapping-on", "Test_Scnario": "Mismatched Farecard tap", "Test_Sce_Description": "Verify that if the Farecard tapped during the write tap does not match the Farecard tapped during the identification tap, the SA checks if the serial number matches the serial number detected in the identification tap. The SA detects that the Farecard tapped during the write tap does not match the Farecard tapped during the identification tap. The SA displays an error message and prompts the operator to tap the correct card in order to proceed. The operator can also choose to cancel the transaction."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "With/Without audio messages", "Use_Case_Name": "Farecard does not contain a Default O/D and the Customer Overrides the Default Trip prior to tapping-on", "Test_Scnario": "Underpayment handling", "Test_Sce_Description": "Verify that if the customer\u2019s card is in underpayment, the identification tap will detect the underpayment amount. The operator informs the customer that they are in underpayment. The operator must determine whether the customer has missed a tap off or just tapped on (and would like to add funds while waiting for their vehicle). They can do this in two ways: Ask the customer directly or Verify by checking the last tap information on the Farecard."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "With/Without audio messages", "Use_Case_Name": "Cardholder Taps-On an SA Tool to a Fare-by-Zone TA with Farecard \u2013 Customer requests Audio Messages", "Test_Scnario": "Testing the functionality of Non-Revenue farecard in training mode", "Test_Sce_Description": "This scenario will test the functionality of the SA tool when a Non-Revenue farecard is used in training mode. The tool should accept the card and not display a declined HMI."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "With/Without audio messages", "Use_Case_Name": "Cardholder Taps-On an SA Tool to a Fare-by-Zone TA with Farecard \u2013 Customer requests Audio Messages", "Test_Scnario": "Testing the functionality of Non-Revenue farecard in revenue mode", "Test_Sce_Description": "This scenario will test the functionality of the SA tool when a Non-Revenue farecard is used in revenue mode. The tool should not accept the card and display a declined HMI."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "With/Without audio messages", "Use_Case_Name": "Cardholder Taps-On an SA Tool to a Fare-by-Zone TA with Farecard \u2013 Customer requests Audio Messages", "Test_Scnario": "Testing the functionality of Farecard with Temporal Class Supplement", "Test_Sce_Description": "This scenario will test the functionality of the SA tool when a Farecard with Temporal Class Supplement is tapped on the device. The device should reflect the Temporal Class Supplement and process the Tap-On Transaction as a normal tap-on."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "With/Without audio messages", "Use_Case_Name": "Cardholder Taps-On an SA Tool to a Fare-by-Zone TA with Farecard \u2013 Customer requests Audio Messages", "Test_Scnario": "Testing the functionality of Farecard with Autoload Enabled", "Test_Sce_Description": "This scenario will test the functionality of the SA tool when a Farecard with Autoload Enabled is tapped on the device and the Fare amount crosses the Auto-load threshold. The Farecard should have the Autoload amount automatically added to the E-Purse balance."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "With/Without audio messages", "Use_Case_Name": "Cardholder Taps-On an SA Tool to a Fare-by-Zone TA with Farecard \u2013 Customer requests Audio Messages", "Test_Scnario": "Testing the functionality of Farecard with no Default O/D in Override mode", "Test_Sce_Description": "This scenario will test the functionality of the SA tool when a Farecard with no Default O/D is tapped on while the device is in Override mode. The device should process the tap as a result tap-on."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "With/Without audio messages", "Use_Case_Name": "Cardholder Taps-On an SA Tool to a Fare-by-Zone TA with Farecard \u2013 Customer requests Audio Messages", "Test_Scnario": "Testing the functionality of Farecard with audio messages request", "Test_Sce_Description": "This scenario will test the functionality of the SA tool when a Farecard is tapped on and the customer requests audio messages for the fare payment. The operator should enable audio mode and the corresponding audio message should be played to the customer in the default language of their Farecard."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "With/Without audio messages", "Use_Case_Name": "Cardholder Taps-On an SA Tool to a Fare-by-Zone TA with Farecard \u2013 Customer requests Audio Messages", "Test_Scnario": "Testing the functionality of Farecard that fails validation checks at Tap-On", "Test_Sce_Description": "This scenario will test the functionality of the SA tool when a Farecard fails validation checks at Tap-On. The tool should not accept the card and display a declined HMI."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "With/Without audio messages", "Use_Case_Name": "Cardholder Taps-On an SA Tool to a Fare-by-Zone TA with Farecard \u2013 Customer requests Audio Messages", "Test_Scnario": "Testing the functionality of Farecard with Period Pass and higher fare value", "Test_Sce_Description": "This scenario will test the functionality of the SA tool when a Farecard with a valid Period Pass is tapped on and the Service class fare value is lower than the current route/location Service Class fare value. The ATS should compute and deduct the Upgrade fare."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "With/Without audio messages", "Use_Case_Name": "Cardholder Taps-On an SA Tool to a Fare-by-Zone TA with Farecard \u2013 Customer requests Audio Messages", "Test_Scnario": "Testing the functionality of Farecard with Period Pass and lower fare value", "Test_Sce_Description": "This scenario will test the functionality of the SA tool when a Farecard with a valid Period Pass is tapped on and the Service class fare value is greater than the current route/location Service Class fare value. The ATS should identify that the customer\u2019s Period Pass is valid and accept the period pass fare payment."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "With/Without audio messages", "Use_Case_Name": "Cardholder Taps-On an SA Tool to a Fare-by-Zone TA with Farecard \u2013 Customer requests Audio Messages", "Test_Scnario": "Testing the functionality of Farecard with Limited Period Pass within valid time", "Test_Sce_Description": "This scenario will test the functionality of the SA tool when a Farecard with a valid Limited Period Pass is tapped on and the current time is within the limits of the product. The tool should accept the card and process the transaction."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "With/Without audio messages", "Use_Case_Name": "Cardholder Taps-On an SA Tool to a Fare-by-Zone TA with Farecard \u2013 Customer requests Audio Messages", "Test_Scnario": "Testing the functionality of Farecard with Limited Period Pass outside of valid time with sufficient e-Purse balance", "Test_Sce_Description": "This scenario will test the functionality of the SA tool when a Farecard with a valid Limited Period Pass is tapped on and the current time is outside the time limits of the product, but the farecard has sufficient e-Purse balance to cover the transaction. The tool should accept the card and process the transaction."}, {"Function_Flow_Name": "Query a Farecard", "Sub_Flow_Name": "Tickets", "Use_Case_Name": "Farecard Tapped is the incorrect Farecard Type", "Test_Scnario": "Incorrect Farecard Type", "Test_Sce_Description": "Verify that the SA Tool application correctly identifies and notifies the operator when the Farecard Type is incorrect for the mode the operator is currently operating in. The application should terminate the use case upon detection of the incorrect Farecard Type."}, {"Function_Flow_Name": "Query a Farecard", "Sub_Flow_Name": "Tickets", "Use_Case_Name": "Farecard Tapped is the incorrect Farecard Type", "Test_Scnario": "Non-Farecard Tapped", "Test_Sce_Description": "Verify that the SA Tool application correctly identifies when a non-Farecard is tapped to the reader and displays an appropriate error pop up message."}, {"Function_Flow_Name": "Query a Farecard", "Sub_Flow_Name": "Tickets", "Use_Case_Name": "Farecard Tapped is the incorrect Farecard Type", "Test_Scnario": "Failure to Read Virtual Card", "Test_Sce_Description": "Verify that the SA Tool application correctly detects when it fails to read a Virtual Card and provides appropriate feedback to the operator. The operator should be able to attempt to read the card again and the use case should resume if the read is successful."}, {"Function_Flow_Name": "Query a Farecard", "Sub_Flow_Name": "Tickets", "Use_Case_Name": "Farecard Tapped is the incorrect Farecard Type", "Test_Scnario": "Non-Virtual Card Tapped", "Test_Sce_Description": "Verify that the SA Tool application correctly identifies when a non-Virtual Card is tapped to the reader and displays an appropriate error pop up message."}, {"Function_Flow_Name": "Query a Farecard", "Sub_Flow_Name": "Tickets", "Use_Case_Name": "Farecard Tapped is the incorrect Farecard Type", "Test_Scnario": "Blocked/Hotlisted Farecard", "Test_Sce_Description": "Verify that the SA Tool application correctly detects when a Farecard is blocked and displays the Farecard query screen indicating that the Farecard has been blocked. The operator should not be able to take any further actions on the Farecard."}, {"Function_Flow_Name": "Query a Farecard", "Sub_Flow_Name": "Tickets", "Use_Case_Name": "Farecard Tapped is the incorrect Farecard Type", "Test_Scnario": "Ineligible Products in Shopping Cart", "Test_Sce_Description": "Verify that the SA Tool application correctly identifies when products that were added to the card are now ineligible for purchase. The application should display an error confirming that one or more of the products are not available for sale."}, {"Function_Flow_Name": "Query a Farecard", "Sub_Flow_Name": "Tickets", "Use_Case_Name": "Farecard Tapped is the incorrect Farecard Type", "Test_Scnario": "ATS Failure to Load Products", "Test_Sce_Description": "Verify that the SA Tool application correctly informs the operator when ATS is unable to load products to the customer\u2019s account after proceeding through checkout."}, {"Function_Flow_Name": "Query a Farecard", "Sub_Flow_Name": "Tickets", "Use_Case_Name": "Farecard Tapped is the incorrect Farecard Type", "Test_Scnario": "Mismatched Farecard Tapped", "Test_Sce_Description": "Verify that the SA Tool application correctly checks if the serial number matches the serial number detected in the identification tap and displays an error message when the Farecard tapped during the write tap does not match the Farecard tapped during the identification tap."}, {"Function_Flow_Name": "Query a Farecard", "Sub_Flow_Name": "Tickets", "Use_Case_Name": "Farecard Tapped is the incorrect Farecard Type", "Test_Scnario": "Underpayment Handling", "Test_Sce_Description": "Verify that the SA Tool application correctly detects when a customer\u2019s Farecard is in underpayment and provides appropriate feedback to the operator. The operator should be able to address the underpayment and proceed through the main flow or exit it."}, {"Function_Flow_Name": "Query a Farecard", "Sub_Flow_Name": "Tickets", "Use_Case_Name": "Non-Farecard tapped to the reader", "Test_Scnario": "Incorrect Farecard Type", "Test_Sce_Description": "Test the scenario where the Farecard tapped is of the incorrect type for the Mode. The system should identify the incorrect Farecard type and notify the operator."}, {"Function_Flow_Name": "Query a Farecard", "Sub_Flow_Name": "Tickets", "Use_Case_Name": "Non-Farecard tapped to the reader", "Test_Scnario": "Non-Farecard Tapped", "Test_Sce_Description": "Test the scenario where a Non-Farecard is tapped to the reader. The system should identify the card as a non-Farecard and display an error pop up message."}, {"Function_Flow_Name": "Query a Farecard", "Sub_Flow_Name": "Tickets", "Use_Case_Name": "Non-Farecard tapped to the reader", "Test_Scnario": "Failure to Read Virtual Card", "Test_Sce_Description": "Test the scenario where the system fails to read a customer's Virtual Card. The system should indicate to the operator that the Virtual Card read has failed and allow the operator to retry."}, {"Function_Flow_Name": "Query a Farecard", "Sub_Flow_Name": "Tickets", "Use_Case_Name": "Non-Farecard tapped to the reader", "Test_Scnario": "Non-Virtual Card Tapped", "Test_Sce_Description": "Test the scenario where a Non-Virtual Card is tapped to the reader. The system should identify the card as a non-Virtual Card and display an error pop up message."}, {"Function_Flow_Name": "Query a Farecard", "Sub_Flow_Name": "Tickets", "Use_Case_Name": "Non-Farecard tapped to the reader", "Test_Scnario": "Blocked/Hotlisted Farecard", "Test_Sce_Description": "Test the scenario where a customer's Farecard is blocked. The system should detect that the Farecard is blocked and prevent any further actions on the Farecard."}, {"Function_Flow_Name": "Query a Farecard", "Sub_Flow_Name": "Tickets", "Use_Case_Name": "Non-Farecard tapped to the reader", "Test_Scnario": "Ineligible Products in Shopping Cart", "Test_Sce_Description": "Test the scenario where the SA Tool shopping cart has ineligible products. The system should display an error confirming that one or more of the products are not available for sale."}, {"Function_Flow_Name": "Query a Farecard", "Sub_Flow_Name": "Tickets", "Use_Case_Name": "Non-Farecard tapped to the reader", "Test_Scnario": "ATS Failure to Load Products", "Test_Sce_Description": "Test the scenario where the ATS fails to load products to the customer's account. The system should inform the operator that the products purchased were not added to the user's account."}, {"Function_Flow_Name": "Query a Farecard", "Sub_Flow_Name": "Tickets", "Use_Case_Name": "Non-Farecard tapped to the reader", "Test_Scnario": "Farecard Tapped-Off at Same Location", "Test_Sce_Description": "Test the scenario where the Farecard is tapped-off at the same location where tap-on occurred. The system should provide the cardholder with the appropriate feedback without updating the Farecard."}, {"Function_Flow_Name": "Query a Farecard", "Sub_Flow_Name": "Tickets", "Use_Case_Name": "Non-Farecard tapped to the reader", "Test_Scnario": "Blocked Farecard", "Test_Sce_Description": "Test the scenario where the Farecard is blocked. The system should detect that the Farecard is blocked and not confer the right to travel."}, {"Function_Flow_Name": "Query a Farecard", "Sub_Flow_Name": "Tickets", "Use_Case_Name": "Non-Farecard tapped to the reader", "Test_Scnario": "Exceeds Max Travel Duration", "Test_Sce_Description": "Test the scenario where the time since tap-on exceeds the Max Travel Duration. The system should auto-settle the Underpayment and open a new trip."}, {"Function_Flow_Name": "Query a Farecard", "Sub_Flow_Name": "Tickets", "Use_Case_Name": "Non-Farecard tapped to the reader", "Test_Scnario": "Multiple NFC Media Presented", "Test_Sce_Description": "Test the scenario where multiple NFC media are presented to the device at one time. The system should block all fare payment functionality."}, {"Function_Flow_Name": "Query a Farecard", "Sub_Flow_Name": "Tickets", "Use_Case_Name": "Non-Farecard tapped to the reader", "Test_Scnario": "Non-Activated Farecard Tapped", "Test_Sce_Description": "Test the scenario where a non-activated Farecard is tapped on the device. The system should provide feedback to the Cardholder of an unsuccessful transaction."}, {"Function_Flow_Name": "Query a Farecard", "Sub_Flow_Name": "Tickets", "Use_Case_Name": "Non-Farecard tapped to the reader", "Test_Scnario": "Card Reading Error", "Test_Sce_Description": "Test the scenario where a Cardholder taps Farecard on an SA Tool and a Card reading error occurs. The system should capture and log the error."}, {"Function_Flow_Name": "Query a Farecard", "Sub_Flow_Name": "Tickets", "Use_Case_Name": "Failure to read Virtual Card", "Test_Scnario": "Unreadable Virtual Card", "Test_Sce_Description": "Test the scenario where the SA Tool NFC reader detects the Virtual Card but is unable to read it. The application should indicate to the operator that the Virtual Card is unreadable. The customer will tap on the NFC reader again. If the tap is unsuccessful, the SA Tool application should indicate to the operator that the CLIENT (Virtual) Card is unreadable."}, {"Function_Flow_Name": "Query a Farecard", "Sub_Flow_Name": "Tickets", "Use_Case_Name": "Failure to read Virtual Card", "Test_Scnario": "Non-Adult, Non-Child, non-discreet concessions", "Test_Sce_Description": "Test the scenario where the customer\u2019s Virtual Card has a Valid Non-Adult, Non-Child, non-discreet concessions. The SA Tool should show the successful fare payment screen for non-adult concession, play the successful fare payment audio tone for a concession other than Adult, Child, or Discreet Concessions."}, {"Function_Flow_Name": "Query a Farecard", "Sub_Flow_Name": "Tickets", "Use_Case_Name": "Failure to read Virtual Card", "Test_Scnario": "ePurse balance less than fare amount", "Test_Sce_Description": "Test the scenario where the customer\u2019s ePurse balance is less than the fare amount. The device should send the tap to ATS for processing. ATS should check the online hotlist and complete the fare processing. ATS should remove the fare from the Virtual Card e-Purse and put the card into overdraft."}, {"Function_Flow_Name": "Query a Farecard", "Sub_Flow_Name": "Tickets", "Use_Case_Name": "Failure to read Virtual Card", "Test_Scnario": "Intra-SP Transfer window", "Test_Sce_Description": "Test the scenario where the customer\u2019s Virtual Card has a valid transfer product. ATS should read that the Virtual Card contains a valid intra-agency transfer product and deduct $0 from the Virtual Card E-Purse. This should be communicated back to the device."}, {"Function_Flow_Name": "Query a Farecard", "Sub_Flow_Name": "Tickets", "Use_Case_Name": "Failure to read Virtual Card", "Test_Scnario": "Inter-SP Transfer window", "Test_Sce_Description": "Test the scenario where the customer\u2019s Virtual Card has a valid transfer product from other service provider. A transfer agreement between the service providers has been established. ATS should read that the Virtual Card contains a valid inter-agency transfer product and deduct $0 from the Virtual Card E-Purse. This should be communicated back to the device."}, {"Function_Flow_Name": "Query a Farecard", "Sub_Flow_Name": "Tickets", "Use_Case_Name": "Failure to read Virtual Card", "Test_Scnario": "Card Authentication check failure", "Test_Sce_Description": "Test the scenario where the Virtual Card Media fails the Card Authentication check. The device should return the appropriate feedback."}, {"Function_Flow_Name": "Query a Farecard", "Sub_Flow_Name": "Tickets", "Use_Case_Name": "Failure to read Virtual Card", "Test_Scnario": "Multiple NFC media presented at once", "Test_Sce_Description": "Test the scenario where multiple NFC media are presented to the device at one time. The device should block all fare payment functionality."}, {"Function_Flow_Name": "Query a Farecard", "Sub_Flow_Name": "Tickets", "Use_Case_Name": "Failure to read Virtual Card", "Test_Scnario": "Device in Out-of-Service state", "Test_Sce_Description": "Test the scenario where the device is in Out-of-Service state. The device should display the Not in Service screen to the cardholder. The device should not detect the media."}, {"Function_Flow_Name": "Query a Farecard", "Sub_Flow_Name": "Tickets", "Use_Case_Name": "Failure to read Virtual Card", "Test_Scnario": "Error occurrence", "Test_Sce_Description": "Test the scenario where an error has occurred on the device that does not cover the exception cases above. The device should record the tap."}, {"Function_Flow_Name": "Query a Farecard", "Sub_Flow_Name": "Tickets", "Use_Case_Name": "Failure to read Virtual Card", "Test_Scnario": "Virtual Card Media on local hotlist and device offline", "Test_Sce_Description": "Test the scenario where the Virtual Card Media is on the local hotlist and the device is offline. The device should check the local hotlist and return a response that the media is denied."}, {"Function_Flow_Name": "Query a Farecard", "Sub_Flow_Name": "Tickets", "Use_Case_Name": "Failure to read Virtual Card", "Test_Scnario": "Virtual Card Media\u2019s blocked parameter on scratchpad enabled", "Test_Sce_Description": "Test the scenario where the Virtual Card Media\u2019s scratchpad blocked parameter is set to enabled. The device should not confer the right to travel."}, {"Function_Flow_Name": "Query a Farecard", "Sub_Flow_Name": "Virtual Card", "Use_Case_Name": "Blocked/Hotlisted Farecard \u2013 Virtual Card", "Test_Scnario": "Checking the functionality of Virtual Card Media's blocked parameter", "Test_Sce_Description": "This scenario will test if the Virtual Card Media's blocked parameter is set to enabled, the right to travel is not conferred. The device should check the local hotlist and not find the Virtual Card. The device should also check the Virtual Card Scratchpad and determine the card blocked parameter is set to true."}, {"Function_Flow_Name": "Query a Farecard", "Sub_Flow_Name": "Virtual Card", "Use_Case_Name": "Blocked/Hotlisted Farecard \u2013 Virtual Card", "Test_Scnario": "Checking the functionality of Virtual Card Media's mobile wallet blocked parameter", "Test_Sce_Description": "This scenario will test if the Virtual Card Media's mobile wallet blocked parameter is set to enabled, the right to travel is not conferred. If the Virtual Card Media is blocked in the wallet, there should not be an interaction with the device on an attempted tap. The device should not know a tap is attempted and will have no action."}, {"Function_Flow_Name": "Query a Farecard", "Sub_Flow_Name": "Virtual Card", "Use_Case_Name": "Blocked/Hotlisted Farecard \u2013 Virtual Card", "Test_Scnario": "Checking the functionality of tap counter", "Test_Sce_Description": "This scenario will test if the tap counter is greater than the allowable offline taps, the right to travel is not conferred. The device should check the tap counter and if the tap counter limit has been reached, the offline device should reject the tap and the rider should not be permitted entry."}, {"Function_Flow_Name": "Query a Farecard", "Sub_Flow_Name": "Virtual Card", "Use_Case_Name": "Blocked/Hotlisted Farecard \u2013 Virtual Card", "Test_Scnario": "Checking the functionality of E-Ticket fare payment", "Test_Sce_Description": "This scenario will test the steps for an operator to accept a fare payment from a e-Ticket. The operator should be able to press the button on the side of the device to enable the barcode scanner. The E-Ticket holder should be able to scan the QR Code on their E-Ticket against the SA tool\u2019s barcode reader to validate the Ticket in Fare Payment Mode."}, {"Function_Flow_Name": "Query a Farecard", "Sub_Flow_Name": "Virtual Card", "Use_Case_Name": "Blocked/Hotlisted Farecard \u2013 Virtual Card", "Test_Scnario": "Checking the functionality of E-Ticket validation when the SA Tool is offline", "Test_Sce_Description": "This scenario will test if an E-Ticket fails the necessary validation checks, the device returns the appropriate feedback, and the right to travel is not conferred. As the device is offline, the call to the Bytemark backend should fail and be unable to retrieve details regarding the E-Ticket."}, {"Function_Flow_Name": "Query a Farecard", "Sub_Flow_Name": "Virtual Card", "Use_Case_Name": "Blocked/Hotlisted Farecard \u2013 Virtual Card", "Test_Scnario": "Checking the functionality of E-Ticket holder scanning Group QR Code at the SA Tool Barcode Reader", "Test_Sce_Description": "This scenario will test the functionality of E-Ticket holder scanning Group QR Code at the SA Tool Barcode Reader. The device should be able to read the Group QR Code and validate the E-Ticket."}, {"Function_Flow_Name": "Query a Farecard", "Sub_Flow_Name": "Virtual Card", "Use_Case_Name": "Virtual Card \u2013 Ineligible Products", "Test_Scnario": "ATS failure to load products", "Test_Sce_Description": "This scenario will test the exception flow when ATS fails to load products onto a customer\u2019s account after checkout. The operator will be informed that the products purchased were not added to the user\u2019s account. The operator may attempt the checkout again or provide the customer a refund if the customer paid with cash."}, {"Function_Flow_Name": "Query a Farecard", "Sub_Flow_Name": "Virtual Card", "Use_Case_Name": "Virtual Card \u2013 Ineligible Products", "Test_Scnario": "SVC / VC Shopping Cart", "Test_Sce_Description": "This scenario will test the exception flow when the shopping cart includes both SVC and VC products. The device should not allow both SVC and VC products in the shopping cart at the same time. If the cart has ineligible products, the Operator should receive an error providing them the option to clear the cart."}, {"Function_Flow_Name": "Query a Farecard", "Sub_Flow_Name": "Virtual Card", "Use_Case_Name": "Virtual Card \u2013 Ineligible Products", "Test_Scnario": "ECP is disabled and Customer\u2019s Artemis device is locked or asleep", "Test_Sce_Description": "This scenario will test the exception flow when the user\u2019s device is locked or asleep and ECP is disabled for the users Virtual Card. The virtual card media should not be detected and the screen should remain the same. The Artemis device should prompt the user to provide authentication."}, {"Function_Flow_Name": "Query a Farecard", "Sub_Flow_Name": "Virtual Card", "Use_Case_Name": "Virtual Card \u2013 Ineligible Products", "Test_Scnario": "Customer\u2019s Artemis device is in Power Reserve mode and ECP is disabled", "Test_Sce_Description": "This scenario will test the exception flow when the user\u2019s mobile device is in Power Reserve mode and ECP is disabled on the mobile device for the users Virtual Card. The virtual card media should not be detected and the screen should remain the same. The Artemis device should prompt the user to charge their device."}, {"Function_Flow_Name": "Query a Farecard", "Sub_Flow_Name": "Virtual Card", "Use_Case_Name": "Virtual Card \u2013 Ineligible Products", "Test_Scnario": "In-Service State", "Test_Sce_Description": "This scenario will test the normal operational state of the device. The SA Tool application should be successfully launched and in the foreground. The \u201cIn-service\u201d state should have two modes: \u201cOnline\u201d and \u201cOffline\u201d. Both should allow operators to interact with the device, but with different functionalities."}, {"Function_Flow_Name": "Query a Farecard", "Sub_Flow_Name": "Virtual Card", "Use_Case_Name": "Virtual Card \u2013 Ineligible Products", "Test_Scnario": "Open Payments Modes and Configurations", "Test_Sce_Description": "This scenario will test the configurations for Open Payments either in real-time mode or queued mode. In real-time mode, Open Payments fare payments & inspections should provide a near real-time response to the Operator of the result for the customer\u2019s media. In Queued mode, the device should send the taps collected to ATS, whereby no true inspection or fare payment result is provided to the Operator."}, {"Function_Flow_Name": "Query a Farecard", "Sub_Flow_Name": "Virtual Card", "Use_Case_Name": "Virtual Card \u2013 Ineligible Products", "Test_Scnario": "Virtual Card", "Test_Sce_Description": "This scenario will test the real-time and queued modes for Virtual Cards. In real-time mode, VC taps should provide a near real-time response to the Operator of the result for the customer\u2019s media. In Queued mode for Virtual Cards, the device should evaluate the tap result offline based on the scratchpad and the local deny list. Afterwards, it should send the taps collected to ATS, which will confirm the tap result and may override the result if required."}, {"Function_Flow_Name": "Query a Farecard", "Sub_Flow_Name": "Virtual Card", "Use_Case_Name": "Virtual Card \u2013 Ineligible Products", "Test_Scnario": "Degraded Mode", "Test_Sce_Description": "This scenario will test the degraded mode, where the device can only accept Farecard taps. This mode can either be set through a configuration when Virtual Card is disabled, or after a configurable period of time the device is offline. In this state, a Virtual Card should not be accepted."}, {"Function_Flow_Name": "Query a Farecard", "Sub_Flow_Name": "Virtual Card", "Use_Case_Name": "ATS failure to load products", "Test_Scnario": "ATS failure to load products", "Test_Sce_Description": "This scenario tests the functionality of the system when ATS fails to load products onto a customer\u2019s account. The operator should be informed that the products purchased were not added to the user\u2019s account. The operator should have the option to attempt the checkout again or provide the customer a refund if the customer paid with cash."}, {"Function_Flow_Name": "Query a Farecard", "Sub_Flow_Name": "Virtual Card", "Use_Case_Name": "ATS failure to load products", "Test_Scnario": "SVC / VC Shopping Cart", "Test_Sce_Description": "This scenario tests the functionality of the system when the shopping cart includes only Virtual Card or Stored Value Card Products. The device should not allow both SVC and VC products in the shopping cart at the same time. If the cart has ineligible products, the Operator should receive an error providing them the option to clear the cart."}, {"Function_Flow_Name": "Query a Farecard", "Sub_Flow_Name": "Virtual Card", "Use_Case_Name": "ATS failure to load products", "Test_Scnario": "ECP is disabled and Customer\u2019s Artemis device is locked or asleep", "Test_Sce_Description": "This scenario tests the functionality of the system when the user\u2019s device is locked or asleep and ECP is disabled for the users Virtual Card. The Virtual card media should not be detected and the screen should remain the same. The Artemis device should prompt the user to provide authentication."}, {"Function_Flow_Name": "Query a Farecard", "Sub_Flow_Name": "Virtual Card", "Use_Case_Name": "ATS failure to load products", "Test_Scnario": "Customer\u2019s Artemis device is in Power Reserve mode and ECP is disabled", "Test_Sce_Description": "This scenario tests the functionality of the system when the user\u2019s mobile device is in Power Reserve mode and ECP is disabled on the mobile device for the users Virtual Card. The Virtual card media should not be detected and the screen should remain the same. The Artemis device should prompt the user to charge their device."}, {"Function_Flow_Name": "Query a Farecard", "Sub_Flow_Name": "Virtual Card", "Use_Case_Name": "ATS failure to load products", "Test_Scnario": "Device is offline and not connected to Accenture Ticketing Services", "Test_Sce_Description": "This scenario tests the functionality of the system when the device is offline and not connected to Accenture Ticketing Services. The device should check the local deny list if the media is on the local deny list. The latent transaction processor should store the tap till the device goes back online and connects to Accenture Ticketing Services. The tap should then be rated in ATS."}, {"Function_Flow_Name": "Query a Farecard", "Sub_Flow_Name": "Virtual Card", "Use_Case_Name": "ATS failure to load products", "Test_Scnario": "Open Payments Media fails ODA check", "Test_Sce_Description": "This scenario tests the functionality of the system when an Open Payments Media fails the ODA check. The device should return the appropriate feedback and the Declined \u2013 Failed ODA Check Screen should be provided to the cardholder. An error should be captured and logged in the background when this occurs to help with troubleshooting the issue."}, {"Function_Flow_Name": "Query a Farecard", "Sub_Flow_Name": "Virtual Card", "Use_Case_Name": "ATS failure to load products", "Test_Scnario": "Open Payments Media Fails Expiry Check", "Test_Sce_Description": "This scenario tests the functionality of the system when an Open Payments Media fails the Expiry Check. The device should return the appropriate feedback and the Declined \u2013 Card Expired Screen should be provided to the cardholder. An error should be captured and logged in the background when this occurs to help with troubleshooting the issue."}, {"Function_Flow_Name": "Query a Farecard", "Sub_Flow_Name": "Virtual Card", "Use_Case_Name": "ATS failure to load products", "Test_Scnario": "Open Payments Media has already tapped-on using an Online Device within Anti-Passback Window", "Test_Sce_Description": "This scenario tests the functionality of the system when the cardholder taps-on again at an SA Tool at the same station within the SA Tool Tap-on anti-passback Window, whereby the initial device and secondary device(s) tapped on were all online. The device should provide the cardholder with the appropriate feedback and the Declined \u2013 Already Tapped Screen should be provided to the cardholder."}, {"Function_Flow_Name": "Query a Farecard", "Sub_Flow_Name": "Virtual Card", "Use_Case_Name": "ATS failure to load products", "Test_Scnario": "Open Payments Media has already tapped-on using an Offline Device", "Test_Sce_Description": "This scenario tests the functionality of the system when the cardholder taps-on again at an SA Tool at the same station within the SA Tool Tap-on anti-passback Window whereby the initial device tapped, and secondary device(s) is the same device and is offline. The device should provide the cardholder with the appropriate feedback and the Declined \u2013 Already Tapped Screen should be provided to the cardholder."}, {"Function_Flow_Name": "Query a Farecard", "Sub_Flow_Name": "Virtual Card", "Use_Case_Name": "ATS failure to load products", "Test_Scnario": "Open Payments Media is on the ATS deny list and the SA Tool is online", "Test_Sce_Description": "This scenario tests the functionality of the system when Open Payments Media is on the deny list and the SA Tool is online. The device should return the appropriate feedback and the Declined \u2013 Failed ODA Check Screen should be provided to the cardholder. An error should be captured and logged in the background when this occurs to help with troubleshooting the issue."}, {"Function_Flow_Name": "Query a Farecard", "Sub_Flow_Name": "With/Without audio messages", "Use_Case_Name": "Farecard fails validation checks at Tap-On", "Test_Scnario": "Farecard Tap-On at Same Location", "Test_Sce_Description": "Verify that if the Farecard is tapped-off at the same location where tap-on occurred, the device provides the cardholder with the appropriate feedback without updating the Farecard. An error should be captured and logged in the background."}, {"Function_Flow_Name": "Query a Farecard", "Sub_Flow_Name": "With/Without audio messages", "Use_Case_Name": "Farecard fails validation checks at Tap-On", "Test_Scnario": "Blocked Farecard", "Test_Sce_Description": "Verify that if a blocked Farecard is used, the right to travel is not conferred and the device provides the appropriate feedback to the Cardholder. An error should be captured and logged in the background."}, {"Function_Flow_Name": "Query a Farecard", "Sub_Flow_Name": "With/Without audio messages", "Use_Case_Name": "Farecard fails validation checks at Tap-On", "Test_Scnario": "Max Travel Duration Exceeded", "Test_Sce_Description": "Verify that if the time since tap-on exceeds the Max Travel Duration, then the Device will auto-settle the Underpayment and open a new trip. The device should determine that the Tap-On Time + Max Travel Duration < Current Time and auto-settle the Underpayment."}, {"Function_Flow_Name": "Query a Farecard", "Sub_Flow_Name": "With/Without audio messages", "Use_Case_Name": "Farecard fails validation checks at Tap-On", "Test_Scnario": "Multiple NFC Media Presentation", "Test_Sce_Description": "Verify that if multiple NFC media are presented to the device at one time, the device will block all fare payment functionality and present Anti-Collision HMI to customer. An error should be captured and logged in the background."}, {"Function_Flow_Name": "Query a Farecard", "Sub_Flow_Name": "With/Without audio messages", "Use_Case_Name": "Farecard fails validation checks at Tap-On", "Test_Scnario": "Non-Activated Farecard", "Test_Sce_Description": "Verify that if a non-activated Farecard is tapped on the device, the transaction is unsuccessful and the device provides feedback to the Cardholder of an unsuccessful transaction. An error should be captured and logged in the background."}, {"Function_Flow_Name": "Query a Farecard", "Sub_Flow_Name": "With/Without audio messages", "Use_Case_Name": "Farecard fails validation checks at Tap-On", "Test_Scnario": "Card Reading Error", "Test_Sce_Description": "Verify that if a Cardholder taps Farecard on an SA Tool and a Card reading error occurs (e.g. Farecard is immediately removed from the card reader), an error is captured and logged in the background."}, {"Function_Flow_Name": "Query a Farecard", "Sub_Flow_Name": "With/Without audio messages", "Use_Case_Name": "Farecard fails validation checks at Tap-On", "Test_Scnario": "Farecard Validation Failure", "Test_Sce_Description": "Verify that if a Farecard fails the necessary validation checks, the device returns the appropriate feedback, and the right to travel is not conferred. The device should perform the necessary validation and determine that the Farecard is unable to pass the checks."}, {"Function_Flow_Name": "Query a Farecard", "Sub_Flow_Name": "With/Without audio messages", "Use_Case_Name": "Farecard fails validation checks at Tap-On", "Test_Scnario": "Insufficient E-Purse Balance", "Test_Sce_Description": "Verify that if a Farecard\u2019s E-Purse balance is less than that of the Tap-On Fare, the right to travel is not conferred and the device provides the appropriate feedback to the Cardholder. An error should be captured and logged in the background."}, {"Function_Flow_Name": "Query a Farecard", "Sub_Flow_Name": "With/Without audio messages", "Use_Case_Name": "Farecard fails validation checks at Tap-On", "Test_Scnario": "Blocked Farecard", "Test_Sce_Description": "Verify that if a blocked Farecard is used, the right to travel is not conferred and the device provides the appropriate feedback to the Cardholder. An error should be captured and logged in the background."}, {"Function_Flow_Name": "Query a Farecard", "Sub_Flow_Name": "With/Without audio messages", "Use_Case_Name": "Farecard fails validation checks at Tap-On", "Test_Scnario": "Multiple NFC Media Presentation", "Test_Sce_Description": "Verify that if multiple NFC media are presented to the device at one time, the device will block all fare payment functionality and present Anti-Collision toast message to customer. An error should be captured and logged in the background."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Change universal concession", "Use_Case_Name": "Fare Payment with Fare type Discount", "Test_Scnario": "Fare Payment with Fare type Discount", "Test_Sce_Description": "Verify that the device correctly reads the concession value from the Farecard and passes this information to the CRE. The CRE should then utilize this concession information to determine the appropriate fare and deduct this value from the Farecard E-Purse. The device should then provide the appropriate feedback to the Cardholder of a successful transaction with a fare type discount and update the Farecard accordingly."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Change universal concession", "Use_Case_Name": "Fare Payment with Fare type Discount", "Test_Scnario": "Customer Overrides the Default Trip prior to tapping-off", "Test_Sce_Description": "Verify that if the tap-off occurs while the device is in Override mode, the device processes the tap as a normal tap-off. The device should inform the customer that it is prepared to override the Default Trip when the customer requests the override of a Default Trip."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Change universal concession", "Use_Case_Name": "Fare Payment with Fare type Discount", "Test_Scnario": "Cardholder Taps-Off SA Tool with Farecard \u2013 Customer requests Audio Messages", "Test_Sce_Description": "Verify that when the customer asks to pay for the trip with their Farecard and requests audio messages for the fare payment, the operator enables audio mode. The operator should be able to change the volume level using the physical device buttons at the customer\u2019s discretion or proceed with the use case."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Change universal concession", "Use_Case_Name": "Fare Payment with Fare type Discount", "Test_Scnario": "Farecard fails validation checks at Tap-On", "Test_Sce_Description": "Verify that if a Farecard fails the necessary validation checks, the device returns the appropriate feedback, and the right to travel is not conferred. The device should perform the necessary validation and determine that the Farecard is unable to pass the checks."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Change universal concession", "Use_Case_Name": "Fare Payment with Fare type Discount", "Test_Scnario": "Farecard is tapped at the same station as the Tap-On", "Test_Sce_Description": "Verify that if the Farecard is tapped-off at the same location where tap-on occurred, the device provides the cardholder with the appropriate feedback. The device should detect that the cardholder has already tapped on at the same station and is within the Tap-on anti-passback Window."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Change universal concession", "Use_Case_Name": "Fare Payment with Fare type Discount", "Test_Scnario": "Farecard is blocked", "Test_Sce_Description": "Verify that if the Farecard is blocked, the device provides the cardholder with the appropriate feedback and does not allow the cardholder to proceed with the transaction."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Change universal concession", "Use_Case_Name": "Fare Payment with Fare type Discount", "Test_Scnario": "Accepting Fare Payment from a Farecard using ePurse Balance \u2013 Payment during Peak hours after reaching Off Peak Daily Cap outside of Transfer Window on SA Tool", "Test_Sce_Description": "Verify that a tap on peak hours after previously reaching off peak daily cap (outside the transfer window) results in a fare payment. ATS should compute the fare and deduct the amount from the Virtual Card E-Purse."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Change universal concession", "Use_Case_Name": "Fare Payment with Fare type Discount", "Test_Scnario": "Accepting Fare Payment from a Farecard using ePurse Balance \u2013 Premium Service Route with Transfer where the Premium fare is higher than the Special Event fare on SA Tool", "Test_Sce_Description": "Verify that a tap on a premium service route/location after previously riding on a Special Event service route (within the transfer window) results in a fare upgrade. ATS should compute the fare and deduct the amount from the Virtual Card E-Purse."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Change universal concession", "Use_Case_Name": "Fare Payment with Fare type Discount", "Test_Scnario": "Accepting Fare Payment from a Farecard using ePurse Balance \u2013 Premium Service Route with Transfer where the Premium fare is lower than the Special Event fare on SA Tool", "Test_Sce_Description": "Verify that a tap on a premium service route/location after previously riding on a Special Event service route (within the transfer window) results in a free transfer. ATS should compute the fare and deduct the amount from the Virtual Card E-Purse."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Change universal concession", "Use_Case_Name": "Fare Payment with Fare type Discount", "Test_Scnario": "Accepting Fare Payment from a Farecard using ePurse Balance - Customer has a Valid Non-Adult Concession on their Farecard", "Test_Sce_Description": "Verify that if the customer\u2019s Farecard has a Valid Non-Adult concession, the device correctly reads this information and applies the appropriate discount to the fare."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Change universal concession", "Use_Case_Name": "Customer Overrides the Default Trip prior to tapping-off", "Test_Scnario": "Full Fare-by-Zone transaction processing", "Test_Sce_Description": "Verify that the device correctly processes a full Fare-by-Zone transaction in case of a default O/D on the Farecard. This includes both tap-on and tap-off. The ATS should deduct the Full Fare value for the station-to-station trip accounting for all Fare considerations associated to the trip."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Change universal concession", "Use_Case_Name": "Customer Overrides the Default Trip prior to tapping-off", "Test_Scnario": "Default O/D override", "Test_Sce_Description": "Verify that the device correctly overrides the default O/D contained on the Farecard and processes the tap as a regular tap-on when the customer requests the override of a Default Trip."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Change universal concession", "Use_Case_Name": "Customer Overrides the Default Trip prior to tapping-off", "Test_Scnario": "Capping discount eligibility", "Test_Sce_Description": "Verify that when capping is configured, and the customer has met any of the capping criteria (Daily, Weekly, Monthly), the device sends the tap to Accenture Ticketing Services for processing. ATS should check the online deny list and complete the fare processing. ATS should calculate the capping discount and apply to the fare calculation."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Change universal concession", "Use_Case_Name": "Customer Overrides the Default Trip prior to tapping-off", "Test_Scnario": "Multiple capping discounts eligibility", "Test_Sce_Description": "Verify that when capping is configured, and the customer has met a combination of multiple capping criteria (Daily, Weekly, Monthly), the device sends the tap to Accenture Ticketing Services for processing. ATS should check the online deny list and complete the fare processing. ATS should calculate the capping discount and apply to the fare calculation. When multiple caps are met ATS should take whatever Capping program which is of highest precedence (set in RE) and apply that discount to the fare."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Change universal concession", "Use_Case_Name": "Customer Overrides the Default Trip prior to tapping-off", "Test_Scnario": "Offline device capping discount eligibility", "Test_Sce_Description": "Verify that if the SA Tool is not online and not connected to ATS, the device checks the local deny list if the media is on the local deny list. The latent transaction processor should store the tap till the device goes back online and connects to Accenture Ticketing Services. The tap should then be rated in ATS. Capping rules should follow use-case logic outlined in ticketing use cases."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Change universal concession", "Use_Case_Name": "Customer Overrides the Default Trip prior to tapping-off", "Test_Scnario": "Open Payments Media fails ODA check", "Test_Sce_Description": "Verify that if an Open Payments Media fails the ODA check, the device returns the appropriate feedback. The device should perform the necessary validation and determine that the Open Payments Media is unable to pass the checks. The Declined \u2013 Failed ODA Check screen should be provided to the cardholder. An error should be captured and logged in the background when this occurs to help with troubleshooting the issue. This error should also be captured in the SOTI logs. The declined tap should be sent to ATS."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Change universal concession", "Use_Case_Name": "Customer Overrides the Default Trip prior to tapping-off", "Test_Scnario": "Open Payments Media Fails Expiry Check", "Test_Sce_Description": "Verify that the Device processes the Load or Action Transaction prior to continuing the validation Use Case when Open Payments Media Fails Expiry Check. The right to travel should be conferred to the Cardholder by updating the Farecard; accordingly, the device should provide the appropriate feedback to the Cardholder of a successful transaction in addition to a List Item processing."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Change universal concession", "Use_Case_Name": "Customer Overrides the Default Trip prior to tapping-off", "Test_Scnario": "Farecard contains a valid transfer product", "Test_Sce_Description": "Verify that the Tap-On Fare configured on the device as well as the Underpayment Value will be reduced to account for the Transfer Discount if a valid transfer product is contained on the Farecard."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Change universal concession", "Use_Case_Name": "Customer Overrides the Default Trip prior to tapping-off", "Test_Scnario": "Farecard contains a Default O/D and the Customer Taps on at either the Origin or Destination Station", "Test_Sce_Description": "Verify that the Device processes a full Fare-by-Zone transaction (both tap-on and tap-off) in case of a default O/D on the Farecard when the Customer Taps on at either the Origin or Destination Station. The Device should deduct the Full Fare value for the station-to-station trip accounting for all Fare considerations associated to the trip."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Change universal concession", "Use_Case_Name": "Customer Overrides the Default Trip prior to tapping-off", "Test_Scnario": "Farecard contains Underpayment from a previous trip", "Test_Sce_Description": "Verify that the Device deducts the Underpayment Value from the Farecard E-Purse prior to performing the Fare Validation when the Farecard has a value contained in the Underpayment Block. The Device should read the Underpayment value from the Farecard and deduct this value from the E-Purse Balance. The Device should clear the underpayment field."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Change universal concession", "Use_Case_Name": "Customer Overrides the Default Trip prior to tapping-off", "Test_Scnario": "Non-Revenue Farecard is tapped on the Device", "Test_Sce_Description": "Verify that the SA tool only accepts Non-Revenue farecard in the training mode. If the Non-Revenue card is tapped in the revenue mode, the device should display a declined HMI."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Change universal concession", "Use_Case_Name": "Customer Overrides the Default Trip prior to tapping-off", "Test_Scnario": "Farecard is tapped on a device during a time period that contains an associated Temporal Class Supplement", "Test_Sce_Description": "Verify that the device correctly processes the tap when a Farecard is tapped on a device during a time period that contains an associated Temporal Class Supplement."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Change universal concession", "Use_Case_Name": "Cardholder Taps-Off SA Tool with Farecard \u2013 Customer requests Audio Messages", "Test_Scnario": "Testing Non-Revenue farecard in training mode", "Test_Sce_Description": "Validate that the SA tool only accepts Non-Revenue farecard in the training mode. If the Non-Revenue card is tapped in the revenue mode, the device should display a declined HMI."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Change universal concession", "Use_Case_Name": "Cardholder Taps-Off SA Tool with Farecard \u2013 Customer requests Audio Messages", "Test_Scnario": "Testing Farecard with Temporal Class Supplement", "Test_Sce_Description": "Validate that the device contains an HMI reflecting the Temporal Class Supplement, and processes the Tap-On Transaction as a normal tap-on when a Farecard is tapped on a device during a time period that contains an associated Temporal Class Supplement."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Change universal concession", "Use_Case_Name": "Cardholder Taps-Off SA Tool with Farecard \u2013 Customer requests Audio Messages", "Test_Scnario": "Testing Farecard with Autoload Enabled", "Test_Sce_Description": "Validate that if the Fare causes the Farecard E-Purse Balance to cross the Auto-load threshold, the Farecard will have the Autoload amount automatically added to the E-Purse balance."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Change universal concession", "Use_Case_Name": "Cardholder Taps-Off SA Tool with Farecard \u2013 Customer requests Audio Messages", "Test_Scnario": "Testing Farecard without Default O/D", "Test_Sce_Description": "Validate that if the Farecard with no Default O/D is tapped on while the device is in Override mode, the device will process the tap as a result tap-on."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Change universal concession", "Use_Case_Name": "Cardholder Taps-Off SA Tool with Farecard \u2013 Customer requests Audio Messages", "Test_Scnario": "Testing Audio Messages Request", "Test_Sce_Description": "Validate that when a customer requests audio messages for the fare payment, the operator enables audio mode and the corresponding audio message is played to the customer in the default language of their Farecard."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Change universal concession", "Use_Case_Name": "Cardholder Taps-Off SA Tool with Farecard \u2013 Customer requests Audio Messages", "Test_Scnario": "Testing Farecard Validation Checks", "Test_Sce_Description": "Validate that if a Farecard fails validation checks at Tap-On, the device determines that the media tapped is not supported and displays an error message."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Change universal concession", "Use_Case_Name": "Cardholder Taps-Off SA Tool with Farecard \u2013 Customer requests Audio Messages", "Test_Scnario": "Testing Virtual Card Transaction Reversal", "Test_Sce_Description": "Validate that the steps for a SP operator to manually perform a Virtual Card transaction reversal with the SA Tool are correctly implemented and function as expected."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Change universal concession", "Use_Case_Name": "Cardholder Taps-Off SA Tool with Farecard \u2013 Customer requests Audio Messages", "Test_Scnario": "Testing Transaction Reversal with Unreadable Farecard", "Test_Sce_Description": "Validate that if the SA Tool application detects the Farecard and fails to read it correctly, it indicates to the operator that the Farecard is unreadable."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Change universal concession", "Use_Case_Name": "Cardholder Taps-Off SA Tool with Farecard \u2013 Customer requests Audio Messages", "Test_Scnario": "Testing Transaction Reversal with Offline SA Tool", "Test_Sce_Description": "Validate that if the SA Tool is offline and not connected to ATS, it checks the Tap Counter to see if it is exceeded, stores request for reversal, and sends bulk upload of transactions to ATS for processing when it comes back online."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Change universal concession", "Use_Case_Name": "Cardholder Taps-Off SA Tool with Farecard \u2013 Customer requests Audio Messages", "Test_Scnario": "Testing Transaction Reversal with Audio Messages Request", "Test_Sce_Description": "Validate that when a customer requests to reverse a fare and requests audio messages for fare reversal, the operator enables audio mode and the corresponding audio message is played to the customer in the default language of their Farecard."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Change universal concession", "Use_Case_Name": "Farecard is tapped at the same station as the Tap-On", "Test_Scnario": "Farecard Tapped at Same Station", "Test_Sce_Description": "Verify that the device correctly identifies when a Farecard is tapped off at the same station where it was tapped on and provides the appropriate feedback to the cardholder without updating the Farecard. Also, ensure that an error is captured and logged in the background and in the SOTI logs."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Change universal concession", "Use_Case_Name": "Farecard is tapped at the same station as the Tap-On", "Test_Scnario": "Farecard Blocked", "Test_Sce_Description": "Verify that the device correctly identifies when a Farecard is blocked and does not confer the right to travel. Also, ensure that the device provides the appropriate feedback to the cardholder and that an error is captured and logged in the background and in the SOTI logs."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Change universal concession", "Use_Case_Name": "Farecard is tapped at the same station as the Tap-On", "Test_Scnario": "Max Travel Duration Exceeded", "Test_Sce_Description": "Verify that the device correctly identifies when the time since tap-on exceeds the Max Travel Duration, auto-settles the Underpayment, and opens a new trip. Also, ensure that the device deducts the value from the Farecard E-Purse."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Change universal concession", "Use_Case_Name": "Farecard is tapped at the same station as the Tap-On", "Test_Scnario": "Multiple NFC Media Presented", "Test_Sce_Description": "Verify that the device correctly blocks all fare payment functionality when multiple NFC media are presented at the same time. Also, ensure that the device presents Anti-Collision HMI to the customer and that an error is captured and logged in the background and in the SOTI logs."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Change universal concession", "Use_Case_Name": "Farecard is tapped at the same station as the Tap-On", "Test_Scnario": "Non-Activated Farecard Tapped", "Test_Sce_Description": "Verify that the device correctly identifies when a non-activated Farecard is tapped and provides feedback to the Cardholder of an unsuccessful transaction. Also, ensure that an error is captured and logged in the background and in the SOTI logs."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Change universal concession", "Use_Case_Name": "Farecard is tapped at the same station as the Tap-On", "Test_Scnario": "Card Reading Error", "Test_Sce_Description": "Verify that the device correctly identifies when a card reading error occurs (e.g. Farecard is immediately removed from the card reader) and provides the appropriate feedback to the cardholder. Also, ensure that an error is captured and logged in the background and in the SOTI logs."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Change universal concession", "Use_Case_Name": "Farecard is tapped at the same station as the Tap-On", "Test_Scnario": "Temporal Class Supplement", "Test_Sce_Description": "Verify that the device correctly identifies when a Farecard is tapped during a time period that contains an associated Temporal Class Supplement and processes the Tap-On Transaction as a normal tap-on."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Change universal concession", "Use_Case_Name": "Farecard is tapped at the same station as the Tap-On", "Test_Scnario": "Autoload Enabled", "Test_Sce_Description": "Verify that the device correctly identifies when the Fare causes the Farecard E-Purse Balance to cross the Auto-load threshold and adds the Autoload amount to the E-Purse balance. Also, ensure that the device deducts the Fare from the Farecard E-Purse balance."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Change universal concession", "Use_Case_Name": "Farecard is tapped at the same station as the Tap-On", "Test_Scnario": "Default Trip Override", "Test_Sce_Description": "Verify that the device correctly processes the tap as a result tap-on when a Farecard with no Default O/D is tapped on while the device is in Override mode."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Change universal concession", "Use_Case_Name": "Farecard is tapped at the same station as the Tap-On", "Test_Scnario": "Audio Messages Requested", "Test_Sce_Description": "Verify that the device correctly enables audio mode when the customer requests audio messages for the fare payment. Also, ensure that the operator can change the volume level using the physical device buttons at the customer\u2019s discretion."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Change universal concession", "Use_Case_Name": "Farecard is tapped at the same station as the Tap-On", "Test_Scnario": "Farecard Fails Validation Checks", "Test_Sce_Description": "Verify that the device correctly identifies when a Farecard fails validation checks at Tap-On and provides the appropriate feedback to the cardholder. Also, ensure that an error is captured and logged in the background and in the SOTI logs."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Change universal concession", "Use_Case_Name": "Farecard is blocked", "Test_Scnario": "Multiple NFC media presented to device", "Test_Sce_Description": "This scenario tests the functionality of the device when multiple NFC media are presented at once. The device should block all fare payment functionality and present an Anti-Collision toast message to the customer. An error should be logged in the background and captured in the SOTI logs."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Change universal concession", "Use_Case_Name": "Farecard is blocked", "Test_Scnario": "Non-activated Farecard tapped on SA Tool", "Test_Sce_Description": "This scenario tests the functionality of the device when a non-activated Farecard is tapped. The device should detect that the Farecard is not activated and provide feedback to the Cardholder of an unsuccessful transaction. An error should be logged in the background and captured in the SOTI logs."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Change universal concession", "Use_Case_Name": "Farecard is blocked", "Test_Scnario": "Card reading error occurs", "Test_Sce_Description": "This scenario tests the functionality of the device when a Card reading error occurs. The device should not provide any feedback and screen remains \u201cIn-Service\u201d display. An error should be logged in the background and captured in the SOTI logs."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Change universal concession", "Use_Case_Name": "Farecard is blocked", "Test_Scnario": "Card write error occurs", "Test_Sce_Description": "This scenario tests the functionality of the device when a Card write error occurs. The device should not provide any feedback and screen remains \u201cIn-Service\u201d display. The device should delete the transaction information. An error should be logged in the background and captured in the SOTI logs."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Change universal concession", "Use_Case_Name": "Farecard is blocked", "Test_Scnario": "Farecard tapped when SA Tool is in Out-of-Service state", "Test_Sce_Description": "This scenario tests the functionality of the device when a Farecard is tapped while the SA Tool is in Out-of-Service state. The device should provide appropriate \u2018Out-of-Service\u2019 display to customers."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Change universal concession", "Use_Case_Name": "Farecard is blocked", "Test_Scnario": "Farecard tapped-off at the same location where tap-on occurred", "Test_Sce_Description": "This scenario tests the functionality of the device when the Farecard is tapped-off at the same location where tap-on occurred. The device should provide the cardholder with the appropriate feedback without updating the Farecard. An error should be logged in the background and captured in the SOTI logs."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Change universal concession", "Use_Case_Name": "Farecard is blocked", "Test_Scnario": "Blocked Farecard", "Test_Sce_Description": "This scenario tests the functionality of the device when a blocked Farecard is tapped. The device should detect that the Farecard is blocked and not confer the right to travel. The device should provide the appropriate feedback to the Cardholder. An error should be logged in the background and captured in the SOTI logs."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Change universal concession", "Use_Case_Name": "Farecard is blocked", "Test_Scnario": "Time since Tap-On Exceeds Max Travel Duration", "Test_Sce_Description": "This scenario tests the functionality of the device when the time since tap-on exceeds the Max Travel Duration. The device should auto-settle the Underpayment and open a new trip."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Change universal concession", "Use_Case_Name": "Non-Recognizable media is tapped on SA Tool", "Test_Scnario": "Offline SA Tool Tap Details Collection", "Test_Sce_Description": "Verify that when the SA Tool is offline and not connected to ATS, it collects offline tap details. Once the device returns back online, these offline taps should be sent to ATS via bulk upload."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Change universal concession", "Use_Case_Name": "Non-Recognizable media is tapped on SA Tool", "Test_Scnario": "Media Check on Local Hotlist", "Test_Sce_Description": "Verify that the device checks if the media is contained on the local hotlist, and if the hotlist parameter on the Virtual Card Scratchpad is enabled."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Change universal concession", "Use_Case_Name": "Non-Recognizable media is tapped on SA Tool", "Test_Scnario": "Tap Counter Increment", "Test_Sce_Description": "Verify that the tap counter is checked and incremented correctly when a tap is made."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Change universal concession", "Use_Case_Name": "Non-Recognizable media is tapped on SA Tool", "Test_Scnario": "Latent Transaction Processor Functionality", "Test_Sce_Description": "Verify that the latent transaction processor stores the tap till the device goes back online and connects to ATS. The tap should then be rated in ATS."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Change universal concession", "Use_Case_Name": "Non-Recognizable media is tapped on SA Tool", "Test_Scnario": "Right to Travel Conferment", "Test_Sce_Description": "Verify that the right to travel is conferred to the Cardholder by updating the HMI of the SA Tool. The FPS \u2013 E-Purse Tap Off should be provided to the cardholder."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Change universal concession", "Use_Case_Name": "Non-Recognizable media is tapped on SA Tool", "Test_Scnario": "Audio Assist Mode Functionality", "Test_Sce_Description": "Verify that when a customer inserts headphones into the Audio jack, it automatically switches the device into audio assist mode. Audio instructions should detail how to adjust the volume by pressing the volume button and then prompt the user to tap their media (in both French and English)."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Change universal concession", "Use_Case_Name": "Non-Recognizable media is tapped on SA Tool", "Test_Scnario": "Non-Revenue Virtual Card Media Processing", "Test_Sce_Description": "Verify that when the Virtual Card media is a non-revenue media, the device sends the tap like any other Virtual Card Media to ATS."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Change universal concession", "Use_Case_Name": "Non-Recognizable media is tapped on SA Tool", "Test_Scnario": "Override Mode Tap Processing", "Test_Sce_Description": "Verify that if the tap-off occurs while the device is in Override mode, the device processes the tap as a normal tap-off."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Change universal concession", "Use_Case_Name": "Non-Recognizable media is tapped on SA Tool", "Test_Scnario": "Card Authentication Check Failure", "Test_Sce_Description": "Verify that if the Virtual Card Media fails the Card Authentication check, the device returns the appropriate feedback."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Change universal concession", "Use_Case_Name": "Non-Recognizable media is tapped on SA Tool", "Test_Scnario": "Multiple NFC Media Presentation", "Test_Sce_Description": "Verify the device's behavior when multiple NFC media are presented to the device at one time."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Change universal concession", "Use_Case_Name": "Non-Recognizable media is tapped on SA Tool", "Test_Scnario": "Temporal Class Supplement Processing", "Test_Sce_Description": "Verify that the Device will contain an HMI reflecting the Temporal Class Supplement, and will process the Tap-On Transaction as a normal tap-on."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Change universal concession", "Use_Case_Name": "Non-Recognizable media is tapped on SA Tool", "Test_Scnario": "Autoload Threshold Crossing", "Test_Sce_Description": "Verify that if the Fare causes the Farecard E-Purse Balance to cross the Auto-load threshold, the Farecard will have the Autoload amount automatically added to the E-Purse balance."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Change universal concession", "Use_Case_Name": "Non-Recognizable media is tapped on SA Tool", "Test_Scnario": "Default Trip Override", "Test_Sce_Description": "Verify that if the Farecard with no Default O/D is tapped on while the device is in Override mode, the device will process the tap as a result tap-on."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Change universal concession", "Use_Case_Name": "Non-Recognizable media is tapped on SA Tool", "Test_Scnario": "Audio Messages Request", "Test_Sce_Description": "Verify that when the customer asks to pay for the trip with their Farecard and requests audio messages for the fare payment, the operator enables audio mode and the corresponding audio message is played to the customer in the default language of their Farecard."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Change universal concession", "Use_Case_Name": "Non-Recognizable media is tapped on SA Tool", "Test_Scnario": "Farecard Validation Check Failure", "Test_Sce_Description": "Verify the device's behavior when a Farecard fails validation checks at Tap-On."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Change universal concession", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance", "Test_Scnario": "Fare Payment during Peak hours after reaching Off Peak Daily Cap", "Test_Sce_Description": "Verify that the system correctly computes the fare and deducts the amount from the Virtual Card E-Purse when a tap is made during peak hours after previously reaching off peak daily cap (outside the transfer window). The system should also communicate this back to the SA Tool."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Change universal concession", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance", "Test_Scnario": "Fare Payment on Premium Service Route with Higher Premium Fare", "Test_Sce_Description": "Verify that the system correctly computes the fare and deducts the amount from the Virtual Card E-Purse when a tap is made on a premium service route/location after previously riding on a Special Event service route (within the transfer window). The fare should be upgraded and this should be communicated back to the SA Tool."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Change universal concession", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance", "Test_Scnario": "Fare Payment on Premium Service Route with Lower Premium Fare", "Test_Sce_Description": "Verify that the system correctly computes the fare and deducts the amount from the Virtual Card E-Purse when a tap is made on a premium service route/location after previously riding on a Special Event service route (within the transfer window). The transfer should be free and this should be communicated back to the SA Tool."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Change universal concession", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance", "Test_Scnario": "Fare Payment with Valid Non-Adult Concession", "Test_Sce_Description": "Verify that the system correctly computes the fare and deducts the amount from the Virtual Card E-Purse when a customer with a Valid Non-Adult concession makes a tap. The system should also communicate this back to the SA Tool."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Change universal concession", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance", "Test_Scnario": "Fare Payment with Unreadable Virtual Card", "Test_Sce_Description": "Verify that the SA Tool application correctly detects when the Virtual Card is unreadable and communicates this to the operator. If the customer taps again and it is successful, the system should proceed with the fare payment process. If the tap is unsuccessful, the SA Tool application should indicate to the operator that the Virtual Card is unreadable."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Change universal concession", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance", "Test_Scnario": "Fare Payment with Non-Adult, Non-Child, Non-Discreet Concessions", "Test_Sce_Description": "Verify that the system correctly computes the fare and deducts the amount from the Virtual Card E-Purse when a customer with a Valid Non-Adult, Non-Child, non-discreet concession makes a tap. The system should also communicate this back to the SA Tool."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Change universal concession", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance", "Test_Scnario": "Fare Payment with Insufficient ePurse Balance", "Test_Sce_Description": "Verify that the system correctly handles a situation where the customer\u2019s ePurse balance is less than the fare amount. The system should send the tap to ATS for processing, check the online hotlist, complete the fare processing, remove the fare from the Virtual Card e-Purse and put the card into overdraft. The system should also confer the right to travel to the Cardholder by updating the Virtual Card accordingly."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Change universal concession", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance", "Test_Scnario": "Fare Payment within Intra-SP Transfer Window", "Test_Sce_Description": "Verify that the system correctly computes the fare and deducts the amount from the Virtual Card E-Purse when a customer with a valid intra-agency transfer product makes a tap. The system should deduct $0 from the Virtual Card E-Purse and communicate this back to the device."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Change universal concession", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance", "Test_Scnario": "Fare Payment within Inter-SP Transfer Window", "Test_Sce_Description": "Verify that the system correctly computes the fare and deducts the amount from the Virtual Card E-Purse when a customer with a valid inter-agency transfer product makes a tap. The system should deduct $0 from the Virtual Card E-Purse and communicate this back to the device."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Change universal concession", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance", "Test_Scnario": "Fare Payment with Audio Messages Request", "Test_Sce_Description": "Verify that the system correctly handles a situation where the customer requests audio messages. The system should provide the appropriate feedback to the Cardholder of a successful transaction with a transfer."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Change universal concession", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance - Customer\u2019s Farecard is Unreadable", "Test_Scnario": "Unreadable Farecard Detection", "Test_Sce_Description": "Verify that the SA Tool application correctly detects when a Farecard is unreadable. The application should indicate to the operator that the Farecard is unreadable."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Change universal concession", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance - Customer\u2019s Farecard is Unreadable", "Test_Scnario": "Retry Reading Unreadable Farecard", "Test_Sce_Description": "Verify that the SA Tool application allows the customer to tap the NFC reader again if the Farecard is unreadable. If the tap is successful, the application should proceed with steps 4 \u2013 9. If the tap is unsuccessful, the application should indicate to the operator that the Farecard is unreadable."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Change universal concession", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance - Customer\u2019s Farecard is Unreadable", "Test_Scnario": "Error Logging for Unreadable Farecard", "Test_Sce_Description": "Verify that an error is captured and logged in the background when the Farecard is unreadable. This error should also be captured in the SOTI logs to help with troubleshooting the issue."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Change universal concession", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance - Customer\u2019s Farecard is Unreadable", "Test_Scnario": "Non-Adult, Non-Child, Non-Discreet Concessions Detection", "Test_Sce_Description": "Verify that the SA Tool application correctly detects when a customer\u2019s Farecard has a Valid Non-Adult, Non-Child, non-discreet concessions. The application should proceed with the modified steps for this condition."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Change universal concession", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance - Customer\u2019s Farecard is Unreadable", "Test_Scnario": "Successful Fare Payment with Non-Adult Concession", "Test_Sce_Description": "Verify that the SA Tool application correctly processes a successful fare payment for a non-adult concession. The application should display the successful fare payment screen for non-adult concession and play the successful fare payment audio tone for a concession other than Adult, Child, or Discreet Concessions."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Change universal concession", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance - Customer\u2019s Farecard is Unreadable", "Test_Scnario": "Fare Deduction for Less Than Fare Amount", "Test_Sce_Description": "Verify that the SA Tool application correctly processes a fare payment when the customer\u2019s ePurse balance is less than the fare amount. The application should send the tap to ATS for processing, check the online hotlist, complete the fare processing, remove the fare from the Virtual Card e-Purse and put the card into overdraft."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Change universal concession", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance - Customer\u2019s Farecard is Unreadable", "Test_Scnario": "Successful Transaction Feedback for Less Than Fare Amount", "Test_Sce_Description": "Verify that the SA Tool application provides the appropriate feedback to the Cardholder of a successful transaction when the customer\u2019s ePurse balance is less than the fare amount. The right to travel should be conferred to the Cardholder by updating the Virtual Card accordingly."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Change universal concession", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance - Customer\u2019s Farecard is Unreadable", "Test_Scnario": "Valid Intra-SP Transfer Product Detection", "Test_Sce_Description": "Verify that the SA Tool application correctly detects when a customer\u2019s Virtual Card contains a valid intra-agency transfer product. The application should read the Virtual Card and deduct $0 from the Virtual Card E-Purse."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Change universal concession", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance - Customer\u2019s Farecard is Unreadable", "Test_Scnario": "Successful Transaction Feedback for Intra-SP Transfer", "Test_Sce_Description": "Verify that the SA Tool application provides the appropriate feedback to the Cardholder of a successful transaction with a transfer when the customer\u2019s Virtual Card contains a valid intra-agency transfer product. The right to travel should be conferred to the Cardholder by updating the Virtual Card accordingly."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Change universal concession", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance - Customer\u2019s Farecard is Unreadable", "Test_Scnario": "Valid Inter-SP Transfer Product Detection", "Test_Sce_Description": "Verify that the SA Tool application correctly detects when a customer\u2019s Virtual Card contains a valid inter-agency transfer product. The application should read the Virtual Card and deduct $0 from the Virtual Card E-Purse."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Change universal concession", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance - Customer\u2019s Farecard is Unreadable", "Test_Scnario": "Successful Transaction Feedback for Inter-SP Transfer", "Test_Sce_Description": "Verify that the SA Tool application provides the appropriate feedback to the Cardholder of a successful transaction with a transfer when the customer\u2019s Virtual Card contains a valid inter-agency transfer product. The right to travel should be conferred to the Cardholder by updating the Virtual Card accordingly."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Change universal concession", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance - Customer has a Concession other than Adult, Child, or Discreet Concessions on their Farecard", "Test_Scnario": "Validating Non-Adult, Non-Child, Non-discreet concession", "Test_Sce_Description": "Verify that the SA Tool correctly identifies and deducts the correct Non-Adult, Non-Child, Non-discreet Concessions from the customer's Farecard."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Change universal concession", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance - Customer has a Concession other than Adult, Child, or Discreet Concessions on their Farecard", "Test_Scnario": "Farecard with insufficient ePurse balance", "Test_Sce_Description": "Verify that the SA Tool correctly identifies when a customer's ePurse balance is less than the fare amount and puts the Farecard into overdraft."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Change universal concession", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance - Customer has a Concession other than Adult, Child, or Discreet Concessions on their Farecard", "Test_Scnario": "Validating intra-agency transfer product", "Test_Sce_Description": "Verify that the SA Tool correctly identifies a valid transfer product on the customer's Farecard and computes the free transfer."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Change universal concession", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance - Customer has a Concession other than Adult, Child, or Discreet Concessions on their Farecard", "Test_Scnario": "Validating inter-agency transfer product", "Test_Sce_Description": "Verify that the SA Tool correctly identifies a valid transfer product from another transit agency on the customer's Farecard and computes the fare based on the transfer agreement between the transit agencies."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Change universal concession", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance - Customer has a Concession other than Adult, Child, or Discreet Concessions on their Farecard", "Test_Scnario": "Autoload threshold check", "Test_Sce_Description": "Verify that the SA Tool correctly identifies when the ePurse balance (after deducting the travel fare) is under the Autoload threshold and adds the Autoload amount to the ePurse balance."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Change universal concession", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance - Customer has a Concession other than Adult, Child, or Discreet Concessions on their Farecard", "Test_Scnario": "Action or Load Value List check", "Test_Sce_Description": "Verify that the SA Tool correctly identifies when the customer's Farecard is on the Action or Load Value List and updates the Farecard accordingly."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Change universal concession", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance - Customer has a Concession other than Adult, Child, or Discreet Concessions on their Farecard", "Test_Scnario": "Virtual Card unreadable", "Test_Sce_Description": "Verify that the SA Tool correctly identifies when the Virtual Card is unreadable and provides the appropriate feedback to the operator."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Change universal concession", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance - Customer has a Concession other than Adult, Child, or Discreet Concessions on their Farecard", "Test_Scnario": "Validating Non-Adult, Non-Child, Non-discreet concession on Virtual Card", "Test_Sce_Description": "Verify that the SA Tool correctly identifies and shows the successful fare payment screen for non-adult concession on the customer's Virtual Card."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Change universal concession", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance - Customer has a Concession other than Adult, Child, or Discreet Concessions on their Farecard", "Test_Scnario": "Virtual Card with insufficient ePurse balance", "Test_Sce_Description": "Verify that the SA Tool correctly identifies when a customer's ePurse balance on the Virtual Card is less than the fare amount and puts the Virtual Card into overdraft."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Change universal concession", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance - Customer has a Concession other than Adult, Child, or Discreet Concessions on their Farecard", "Test_Scnario": "Validating intra-agency transfer product on Virtual Card", "Test_Sce_Description": "Verify that the SA Tool correctly identifies a valid intra-agency transfer product on the customer's Virtual Card and deducts $0 from the Virtual Card E-Purse."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Change universal concession", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance - Customer has a Concession other than Adult, Child, or Discreet Concessions on their Farecard", "Test_Scnario": "Validating inter-agency transfer product on Virtual Card", "Test_Sce_Description": "Verify that the SA Tool correctly identifies a valid inter-agency transfer product on the customer's Virtual Card and deducts $0 from the Virtual Card E-Purse."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Change SP specific concession", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance - Customer Has a Registered Farecard with Positive ePurse Balance Less Than the Fare Amount", "Test_Scnario": "Fare Payment with Positive ePurse Balance Less Than the Fare Amount", "Test_Sce_Description": "Verify that the system correctly handles a fare payment when the customer's registered Farecard has a positive ePurse balance that is less than the fare amount. The system should compute the fare, deduct the amount from the ePurse, and communicate this back to the SA Tool. The system should also handle any exceptions such as the card being anonymous or in overdraft, and display appropriate messages to the customer."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Change SP specific concession", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance - Customer Has a Registered Farecard with Positive ePurse Balance Less Than the Fare Amount", "Test_Scnario": "Fare Payment during Peak hours after reaching Off Peak Daily Cap", "Test_Sce_Description": "Verify that the system correctly handles a fare payment made during peak hours after the customer's Farecard has reached the off peak daily cap. The system should compute the fare, deduct the amount from the ePurse, and communicate this back to the SA Tool. The system should also handle any exceptions such as the card being anonymous or in overdraft, and display appropriate messages to the customer."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Change SP specific concession", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance - Customer Has a Registered Farecard with Positive ePurse Balance Less Than the Fare Amount", "Test_Scnario": "Fare Payment on Premium Service Route with Transfer", "Test_Sce_Description": "Verify that the system correctly handles a fare payment made on a premium service route with a valid transfer. The system should compute the fare, deduct the amount from the ePurse, and communicate this back to the SA Tool. The system should also handle any exceptions such as the card being anonymous or in overdraft, and display appropriate messages to the customer."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Change SP specific concession", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance - Customer Has a Registered Farecard with Positive ePurse Balance Less Than the Fare Amount", "Test_Scnario": "Fare Payment with Valid Non-Adult Concession", "Test_Sce_Description": "Verify that the system correctly handles a fare payment when the customer's Farecard has a valid non-adult concession. The system should compute the fare, deduct the amount from the ePurse, and communicate this back to the SA Tool. The system should also handle any exceptions such as the card being anonymous or in overdraft, and display appropriate messages to the customer."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Change SP specific concession", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance - Customer Has a Registered Farecard with Positive ePurse Balance Less Than the Fare Amount", "Test_Scnario": "Fare Payment with ePurse Balance Less than the Fare Amount", "Test_Sce_Description": "Verify that the system correctly handles a fare payment when the customer's anonymous Farecard has an ePurse balance less than the fare amount. The system should display a declined message to the customer and not conduct the transaction."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Change SP specific concession", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance - Customer Has a Registered Farecard with Positive ePurse Balance Less Than the Fare Amount", "Test_Scnario": "Fare Payment with Overdraft on Registered Farecard", "Test_Sce_Description": "Verify that the system correctly handles a fare payment when the customer's registered Farecard is in overdraft. The system should display a declined message to the customer and not conduct the transaction."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Change SP specific concession", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance - Customer Has a Registered Farecard with Positive ePurse Balance Less Than the Fare Amount", "Test_Scnario": "Fare Payment with Blocked Farecard", "Test_Sce_Description": "Verify that the system correctly handles a fare payment when the customer's Farecard is blocked. The system should display a declined message to the customer and not conduct the transaction."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Change SP specific concession", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance - Customer Has a Registered Farecard with Positive ePurse Balance Less Than the Fare Amount", "Test_Scnario": "Fare Payment with Farecard on the Hotlist", "Test_Sce_Description": "Verify that the system correctly handles a fare payment when the customer's Farecard is on the hotlist. The system should update the card's status to blocked, display a declined message to the customer, and not conduct the transaction."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Change SP specific concession", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance - Customer Has a Registered Farecard with Positive ePurse Balance Less Than the Fare Amount", "Test_Scnario": "Fare Payment with Low Battery Threshold", "Test_Sce_Description": "Verify that the system correctly handles a fare payment when the battery goes below the low battery threshold during payment. The system should switch to 'Out of Service' mode after processing the fare payment."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Change SP specific concession", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance - Customer Has a Registered Farecard with Positive ePurse Balance Less Than the Fare Amount", "Test_Scnario": "Fare Payment with Non-Farecard", "Test_Sce_Description": "Verify that the system correctly handles a fare payment when the customer taps a card that is not a Farecard. The system should display the 'Card Read Error' message."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Change SP specific concession", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance - Customer Has a Registered Farecard with Positive ePurse Balance Less Than the Fare Amount", "Test_Scnario": "Fare Payment within the Anti-Passback Window", "Test_Sce_Description": "Verify that the system correctly handles a fare payment when the customer's Farecard is within the Anti-Passback Window. The system should compute the fare, deduct the amount from the ePurse, and communicate this back to the SA Tool. The system should also handle any exceptions such as the card being anonymous or in overdraft, and display appropriate messages to the customer."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Change SP specific concession", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance - Transaction is within Intra-agency Transfer window", "Test_Scnario": "Fare Payment with Valid Regular Service Transfer Product", "Test_Sce_Description": "Verify that the system correctly computes the fare and deducts the amount from the Virtual Card E-Purse when the fare payment is made on the SA Tool, the Service Class is Premium or Special Event, the Farecard has a valid Regular Service Transfer Product and the Tap is within Transfer Window."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Change SP specific concession", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance - Transaction is within Intra-agency Transfer window", "Test_Scnario": "Fare Payment during Peak hours after reaching Off Peak Daily Cap", "Test_Sce_Description": "Verify that the system correctly computes the fare and deducts the amount from the Virtual Card E-Purse when the fare payment is made on the SA Tool, the Farecard has reached off peak Daily Cap Limit, the Farecard has not reached Peak Daily Cap limit and the Farecard is out of transfer window."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Change SP specific concession", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance - Transaction is within Intra-agency Transfer window", "Test_Scnario": "Fare Payment on Premium Service Route with Higher Special Event fare", "Test_Sce_Description": "Verify that the system correctly computes the fare and deducts the amount from the Virtual Card E-Purse when the fare payment is made on the SA Tool, the Service Class is Premium, the Farecard has a valid Special Event Transfer Product and the Tap is within Transfer Window."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Change SP specific concession", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance - Transaction is within Intra-agency Transfer window", "Test_Scnario": "Fare Payment on Premium Service Route with Lower Special Event fare", "Test_Sce_Description": "Verify that the system correctly computes the fare and deducts the amount from the Virtual Card E-Purse when the fare payment is made on the SA Tool, the Service Class is Premium, the Farecard has a valid Special Event Transfer Product and the Tap is within Transfer Window."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Change SP specific concession", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance - Transaction is within Intra-agency Transfer window", "Test_Scnario": "Fare Payment with Valid Non-Adult Concession", "Test_Sce_Description": "Verify that the system correctly computes the fare and deducts the amount from the Virtual Card E-Purse when the fare payment is made on the SA Tool and the Customer\u2019s Farecard has a Valid Non-Adult concession."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Change SP specific concession", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance - Transaction is within Intra-agency Transfer window", "Test_Scnario": "Fare Payment with Unreadable Virtual Card", "Test_Sce_Description": "Verify that the SA Tool application correctly detects the Virtual Card and fails to read it correctly, and that the system provides appropriate feedback to the operator."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Change SP specific concession", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance - Transaction is within Intra-agency Transfer window", "Test_Scnario": "Fare Payment with Non-Adult, Non-Child, non-discreet concessions", "Test_Sce_Description": "Verify that the system correctly computes the fare and deducts the amount from the Virtual Card E-Purse when the fare payment is made on the SA Tool and the Customer\u2019s Virtual Card has a Valid Non-Adult, Non-Child, non-discreet concessions."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Change SP specific concession", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance - Transaction is within Intra-agency Transfer window", "Test_Scnario": "Fare Payment with Insufficient ePurse Balance", "Test_Sce_Description": "Verify that the system correctly puts the card into overdraft when the Customer\u2019s ePurse balance is less than the fare amount."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Change SP specific concession", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance - Transaction is within Intra-agency Transfer window", "Test_Scnario": "Fare Payment within Intra-SP Transfer window", "Test_Sce_Description": "Verify that the system correctly computes the fare and deducts $0 from the Virtual Card E-Purse when the Customer\u2019s Virtual Card has a valid transfer product."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Change SP specific concession", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance - Transaction is within Intra-agency Transfer window", "Test_Scnario": "Fare Payment within Inter-SP Transfer window", "Test_Sce_Description": "Verify that the system correctly computes the fare and deducts $0 from the Virtual Card E-Purse when the Customer\u2019s Virtual Card has a valid transfer product from other service provider and a transfer agreement between the service providers has been established."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Change SP specific concession", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance - Transaction is within Inter-agency Transfer window", "Test_Scnario": "Fare Payment with Valid Regular Service Transfer Product", "Test_Sce_Description": "Verify that the system correctly computes the fare and deducts the amount from the Virtual Card E-Purse when the fare payment is made on the SA Tool, the Service Class is Premium or Special Event, the Farecard has a valid Regular Service Transfer Product and the Tap is within Transfer Window."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Change SP specific concession", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance - Transaction is within Inter-agency Transfer window", "Test_Scnario": "Fare Payment during Peak hours after reaching Off Peak Daily Cap", "Test_Sce_Description": "Verify that the system correctly computes the fare and deducts the amount from the Virtual Card E-Purse when the fare payment is made on the SA Tool, the Farecard has reached off peak Daily Cap Limit, the Farecard has not reached Peak Daily Cap limit and the Farecard is out of transfer window."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Change SP specific concession", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance - Transaction is within Inter-agency Transfer window", "Test_Scnario": "Fare Payment on Premium Service Route with Higher Special Event fare", "Test_Sce_Description": "Verify that the system correctly computes the fare and deducts the amount from the Virtual Card E-Purse when the fare payment is made on the SA Tool, the Service Class is Premium, the Farecard has a valid Special Event Transfer Product and the Tap is within Transfer Window."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Change SP specific concession", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance - Transaction is within Inter-agency Transfer window", "Test_Scnario": "Fare Payment on Premium Service Route with Lower Special Event fare", "Test_Sce_Description": "Verify that the system correctly computes the fare and deducts the amount from the Virtual Card E-Purse when the fare payment is made on the SA Tool, the Service Class is Premium, the Farecard has a valid Special Event Transfer Product and the Tap is within Transfer Window."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Change SP specific concession", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance - Transaction is within Inter-agency Transfer window", "Test_Scnario": "Fare Payment with Valid Non-Adult Concession", "Test_Sce_Description": "Verify that the system correctly computes the fare and deducts the amount from the Virtual Card E-Purse when the fare payment is made on the SA Tool and the Customer\u2019s Farecard has a Valid Non-Adult concession."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Change SP specific concession", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance - Transaction is within Inter-agency Transfer window", "Test_Scnario": "Fare Payment with Unreadable Virtual Card", "Test_Sce_Description": "Verify that the SA Tool application detects the Virtual Card and fails to read it correctly, and that the system provides appropriate feedback to the operator."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Change SP specific concession", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance - Transaction is within Inter-agency Transfer window", "Test_Scnario": "Fare Payment with Non-Adult, Non-Child, non-discreet concessions", "Test_Sce_Description": "Verify that the system correctly computes the fare and deducts the amount from the Virtual Card E-Purse when the fare payment is made on the SA Tool and the Customer\u2019s Virtual Card has a Valid Non-Adult, Non-Child, non-discreet concessions."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Change SP specific concession", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance - Transaction is within Inter-agency Transfer window", "Test_Scnario": "Fare Payment with Insufficient ePurse Balance", "Test_Sce_Description": "Verify that the system correctly computes the fare and deducts the amount from the Virtual Card E-Purse when the fare payment is made on the SA Tool and the Customer\u2019s ePurse balance is less than the fare amount."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Change SP specific concession", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance - Transaction is within Inter-agency Transfer window", "Test_Scnario": "Fare Payment within Intra-SP Transfer window", "Test_Sce_Description": "Verify that the system correctly computes the fare and deducts the amount from the Virtual Card E-Purse when the fare payment is made on the SA Tool and the Customer\u2019s Virtual Card has a valid transfer product."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Change SP specific concession", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance - Transaction is within Inter-agency Transfer window", "Test_Scnario": "Fare Payment within Inter-SP Transfer window", "Test_Sce_Description": "Verify that the system correctly computes the fare and deducts the amount from the Virtual Card E-Purse when the fare payment is made on the SA Tool, the Customer\u2019s Virtual Card has a valid transfer product from other service provider and a transfer agreement between the service providers has been established."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Change SP specific concession", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance - Autoload Threshold is met", "Test_Scnario": "Fare Payment during Peak hours after reaching Off Peak Daily Cap outside of Transfer Window", "Test_Sce_Description": "This scenario tests the functionality of the SA Tool when a fare payment is made during peak hours after the farecard has already reached the off peak daily cap limit and is outside of the transfer window. The tool should correctly compute the fare and deduct the amount from the Virtual Card E-Purse."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Change SP specific concession", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance - Autoload Threshold is met", "Test_Scnario": "Fare Payment on Premium Service Route with Transfer where Premium fare is higher than Special Event fare", "Test_Sce_Description": "This scenario tests the functionality of the SA Tool when a fare payment is made on a premium service route after previously riding on a Special Event service route within the transfer window. The tool should correctly compute the fare upgrade and deduct the amount from the Virtual Card E-Purse."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Change SP specific concession", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance - Autoload Threshold is met", "Test_Scnario": "Fare Payment on Premium Service Route with Transfer where Premium fare is lower than Special Event fare", "Test_Sce_Description": "This scenario tests the functionality of the SA Tool when a fare payment is made on a premium service route after previously riding on a Special Event service route within the transfer window. The tool should correctly compute the fare as a free transfer."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Change SP specific concession", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance - Autoload Threshold is met", "Test_Scnario": "Fare Payment with Valid Non-Adult Concession", "Test_Sce_Description": "This scenario tests the functionality of the SA Tool when a fare payment is made with a farecard that has a valid non-adult concession. The tool should correctly compute the fare and deduct the amount from the Virtual Card E-Purse."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Change SP specific concession", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance - Autoload Threshold is met", "Test_Scnario": "Fare Payment with Farecard on Action or Load Value List", "Test_Sce_Description": "This scenario tests the functionality of the SA Tool when a fare payment is made with a farecard that is on the Action or Load Value List. The tool should correctly verify the farecard and update it accordingly."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Change SP specific concession", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance - Autoload Threshold is met", "Test_Scnario": "Fare Payment with Daily Cap Reached outside of Transfer window", "Test_Sce_Description": "This scenario tests the functionality of the SA Tool when a fare payment is made with a farecard that has reached the daily cap limit and is outside of the transfer window. The tool should correctly compute the fare as no fare since the daily cap is reached."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Change SP specific concession", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance - Autoload Threshold is met", "Test_Scnario": "Fare Payment on Premium Service or Special Route/Location", "Test_Sce_Description": "This scenario tests the functionality of the SA Tool when a fare payment is made on a premium service or special route/location. The tool should correctly compute the fare and deduct the amount from the Virtual Card E-Purse."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Change SP specific concession", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance - Autoload Threshold is met", "Test_Scnario": "Fare Payment on Premium Service or Special Route/Location with Fare Upgrade", "Test_Sce_Description": "This scenario tests the functionality of the SA Tool when a fare payment is made on a premium service or special event route/location after previously riding on a regular service route within the transfer window. The tool should correctly compute the fare upgrade and deduct the amount from the Virtual Card E-Purse."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Change SP specific concession", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance - Customer\u2019s Farecard is on the Action or Load Value List", "Test_Scnario": "Verify Farecard on Action or Load Value List", "Test_Sce_Description": "Check if the system correctly verifies that the Farecard is on the Action or Load Value List and updates the Farecard accordingly. This is to ensure that only valid Farecards are processed."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Change SP specific concession", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance - Customer\u2019s Farecard is on the Action or Load Value List", "Test_Scnario": "Verify Audio Messages Request", "Test_Sce_Description": "Check if the system correctly processes a customer's request for audio messages during fare payment. This is to ensure that the system can provide accessibility features as needed."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Change SP specific concession", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance - Customer\u2019s Farecard is on the Action or Load Value List", "Test_Scnario": "Verify Daily Cap Reached outside of Transfer window", "Test_Sce_Description": "Check if the system correctly processes a fare payment when the Farecard has reached the Daily Cap Limit and is out of the transfer window. The system should not deduct any fare in this scenario."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Change SP specific concession", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance - Customer\u2019s Farecard is on the Action or Load Value List", "Test_Scnario": "Verify Premium Service or Special Route/Location Fare Payment", "Test_Sce_Description": "Check if the system correctly computes and deducts the Premium or Special Event fare when a tap is made on a premium service or special route/location. This is to ensure that the system can handle different fare types."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Change SP specific concession", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance - Customer\u2019s Farecard is on the Action or Load Value List", "Test_Scnario": "Verify Fare Upgrade for Premium Service or Special Route/Location", "Test_Sce_Description": "Check if the system correctly computes and deducts the Upgrade fare when a tap is made on a premium service or special event route/location after previously riding on a regular service route (within the transfer window). This is to ensure that the system can handle fare upgrades."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Change SP specific concession", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance - Customer\u2019s Farecard is on the Action or Load Value List", "Test_Scnario": "Verify Fare Payment during Peak hours after reaching Off Peak Daily Cap", "Test_Sce_Description": "Check if the system correctly processes a fare payment when a tap is made during peak hours after previously reaching off peak daily cap (outside the transfer window). This is to ensure that the system can handle different fare caps."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Change SP specific concession", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance - Customer\u2019s Farecard is on the Action or Load Value List", "Test_Scnario": "Verify Load Value or Action Processing", "Test_Sce_Description": "Check if the system correctly processes the Load Value or Action prior to performing the Fare Validation. This is to ensure that the system can handle different transaction types."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Change SP specific concession", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance - Customer\u2019s Farecard is on the Action or Load Value List", "Test_Scnario": "Verify Fare Payment with Valid Transfer Product", "Test_Sce_Description": "Check if the system correctly processes a fare payment when the Farecard contains a valid transfer product. The system should reduce the Tap-On Fare and the Underpayment Value to account for the Transfer Discount."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Change SP specific concession", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance - Customer\u2019s Farecard is on the Action or Load Value List", "Test_Scnario": "Verify Fare Payment with Default O/D", "Test_Sce_Description": "Check if the system correctly processes a fare payment when the Farecard contains a Default O/D. The system should deduct the Full Fare value for the station-to-station trip."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Change SP specific concession", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance - Customer\u2019s Farecard is on the Action or Load Value List", "Test_Scnario": "Verify Default Trip Override", "Test_Sce_Description": "Check if the system correctly processes a fare payment when the customer overrides the Default Trip prior to tapping-on. The system should process the tap as a regular tap-on."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Change SP specific concession", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance - Customer\u2019s Farecard is on the Action or Load Value List", "Test_Scnario": "Verify Underpayment Deduction", "Test_Sce_Description": "Check if the system correctly deducts the Underpayment Value from the Farecard E-Purse prior to performing the Fare Validation. This is to ensure that the system can handle underpayments."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Change SP specific concession", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance - Customer\u2019s Farecard is on the Action or Load Value List", "Test_Scnario": "Verify Non-Revenue Farecard Processing", "Test_Sce_Description": "Check if the system correctly processes a Non-Revenue farecard. The system should only accept Non-Revenue farecard in the training mode and display a declined HMI in the revenue mode."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Change SP specific concession", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance - Customer\u2019s Farecard is on the Action or Load Value List", "Test_Scnario": "Verify Fare Payment during Temporal Class Supplement", "Test_Sce_Description": "Check if the system correctly processes a fare payment when the Farecard is tapped on a device during a time period that contains an associated Temporal Class Supplement. This is to ensure that the system can handle different fare supplements."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Change card language profile", "Use_Case_Name": "Transaction Reversal - Customer\u2019s Farecard Does Not Have a Valid Fare to Reverse", "Test_Scnario": "Testing the functionality of the SA Tool when a non-activated Farecard is tapped", "Test_Sce_Description": "This scenario will test the functionality of the SA Tool when a non-activated Farecard is tapped. The expected outcome is that the SA Tool application should display a declined message to the customer and the transaction should not be conducted. The SA Tool should also play the declined audio tone."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Change card language profile", "Use_Case_Name": "Transaction Reversal - Customer\u2019s Farecard Does Not Have a Valid Fare to Reverse", "Test_Scnario": "Testing the functionality of the SA Tool when a card not on the action list is tapped", "Test_Sce_Description": "This scenario will test the functionality of the SA Tool when a card not on the action list is tapped. The expected outcome is that the SA Tool application should not respond and a device error message 'Card Read Error' should be displayed for a short period of time."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Change card language profile", "Use_Case_Name": "Transaction Reversal - Customer\u2019s Farecard Does Not Have a Valid Fare to Reverse", "Test_Scnario": "Testing the performance of the SA Tool when a non-activated Farecard is tapped", "Test_Sce_Description": "This scenario will test the performance of the SA Tool when a non-activated Farecard is tapped. The expected outcome is that the SA Tool application should display a declined message to the customer in a timely manner and the transaction should not be conducted."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Change card language profile", "Use_Case_Name": "Transaction Reversal - Customer\u2019s Farecard Does Not Have a Valid Fare to Reverse", "Test_Scnario": "Testing the security of the SA Tool when a non-activated Farecard is tapped", "Test_Sce_Description": "This scenario will test the security of the SA Tool when a non-activated Farecard is tapped. The expected outcome is that the SA Tool application should not allow the transaction to be conducted and should display a declined message to the customer."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Change card language profile", "Use_Case_Name": "Transaction Reversal - Customer\u2019s Farecard Does Not Have a Valid Fare to Reverse", "Test_Scnario": "Testing the functionality of the SA Tool when a Farecard is unreadable", "Test_Sce_Description": "This scenario will test the functionality of the SA Tool when a Farecard is unreadable. The expected outcome is that the SA Tool NFC reader should detect the Farecard but should be unable to read it. The SA Tool application should indicate to the operator that the Farecard is unreadable."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Change card language profile", "Use_Case_Name": "Transaction Reversal - Customer\u2019s Farecard Does Not Have a Valid Fare to Reverse", "Test_Scnario": "Testing the performance of the SA Tool when a Farecard is unreadable", "Test_Sce_Description": "This scenario will test the performance of the SA Tool when a Farecard is unreadable. The expected outcome is that the SA Tool NFC reader should detect the Farecard but should be unable to read it in a timely manner. The SA Tool application should indicate to the operator that the Farecard is unreadable."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Change card language profile", "Use_Case_Name": "Transaction Reversal - Customer\u2019s Farecard Does Not Have a Valid Fare to Reverse", "Test_Scnario": "Testing the security of the SA Tool when a Farecard is unreadable", "Test_Sce_Description": "This scenario will test the security of the SA Tool when a Farecard is unreadable. The expected outcome is that the SA Tool NFC reader should detect the Farecard but should be unable to read it. The SA Tool application should indicate to the operator that the Farecard is unreadable and should not allow the transaction to be conducted."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Change card language profile", "Use_Case_Name": "Transaction Reversal - Customer\u2019s Farecard Does Not Have a Valid Fare to Reverse", "Test_Scnario": "Testing the functionality of the SA Tool when it is offline", "Test_Sce_Description": "This scenario will test the functionality of the SA Tool when it is offline. The expected outcome is that the SA Tool should store the request for reversal and should send a bulk upload of transactions to ATS for processing when it comes back online."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Change card language profile", "Use_Case_Name": "Transaction Reversal - Customer\u2019s Farecard Does Not Have a Valid Fare to Reverse", "Test_Scnario": "Testing the performance of the SA Tool when it is offline", "Test_Sce_Description": "This scenario will test the performance of the SA Tool when it is offline. The expected outcome is that the SA Tool should store the request for reversal in a timely manner and should send a bulk upload of transactions to ATS for processing when it comes back online."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Change card language profile", "Use_Case_Name": "Transaction Reversal - Customer\u2019s Farecard Does Not Have a Valid Fare to Reverse", "Test_Scnario": "Testing the security of the SA Tool when it is offline", "Test_Sce_Description": "This scenario will test the security of the SA Tool when it is offline. The expected outcome is that the SA Tool should store the request for reversal securely and should send a bulk upload of transactions to ATS for processing when it comes back online."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Change card language profile", "Use_Case_Name": "Transaction Reversal - Customer\u2019s Farecard is Blocked", "Test_Scnario": "Testing the functionality of Farecard activation", "Test_Sce_Description": "This scenario will test the functionality of the Farecard activation. The test will ensure that the SA Tool application correctly identifies and responds to a non-activated Farecard. The expected outcome is that the application will display a declined message to the customer and the transaction will not be conducted."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Change card language profile", "Use_Case_Name": "Transaction Reversal - Customer\u2019s Farecard is Blocked", "Test_Scnario": "Testing the audio tone functionality", "Test_Sce_Description": "This scenario will test the functionality of the audio tone that is played when a transaction is declined. The test will ensure that the SA Tool application correctly plays the declined audio tone after a transaction is declined due to a non-activated Farecard."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Change card language profile", "Use_Case_Name": "Transaction Reversal - Customer\u2019s Farecard is Blocked", "Test_Scnario": "Testing the functionality of the reversal mode", "Test_Sce_Description": "This scenario will test the functionality of the reversal mode on the device. The test will ensure that the device correctly enters the reversal mode and performs the necessary checks such as ODA Verification, Expiry Check, and BIN Blocking."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Change card language profile", "Use_Case_Name": "Transaction Reversal - Customer\u2019s Farecard is Blocked", "Test_Scnario": "Testing the functionality of the reversal request", "Test_Sce_Description": "This scenario will test the functionality of the reversal request. The test will ensure that the device correctly sends the cardholder\u2019s reversal request tap to Accenture Ticketing Services and displays the Request for Reversal Recorded screen to the cardholder."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Change card language profile", "Use_Case_Name": "Transaction Reversal - Customer\u2019s Farecard is Blocked", "Test_Scnario": "Testing the functionality of the device when it is offline", "Test_Sce_Description": "This scenario will test the functionality of the device when it is offline and not connected to Accenture Ticketing Services. The test will ensure that the latent transaction processor correctly stores the tap till the device goes back online and connects to Accenture Ticketing Services."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Change card language profile", "Use_Case_Name": "Transaction Reversal - Customer\u2019s Farecard is Blocked", "Test_Scnario": "Testing the functionality of the Virtual Card transaction reversal", "Test_Sce_Description": "This scenario will test the functionality of the Virtual Card transaction reversal. The test will ensure that the SA Tool correctly reads the Virtual Card information and sends the transaction to ATS to be processed. The expected outcome is that ATS verifies that the last transaction is reversible, performs the reversal, and sends the result back to the SA Tool."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Change card language profile", "Use_Case_Name": "Transaction Reversal - Customer\u2019s Farecard is Blocked", "Test_Scnario": "Testing the functionality of the Farecard readability", "Test_Sce_Description": "This scenario will test the functionality of the Farecard readability. The test will ensure that the SA Tool NFC reader correctly detects the Farecard and reads it. If the Farecard is unreadable, the SA Tool application should indicate to the operator that the Farecard is unreadable."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Change card language profile", "Use_Case_Name": "Transaction Reversal - Customer\u2019s Farecard is Blocked", "Test_Scnario": "Testing the functionality of the device when it is offline during a transaction reversal", "Test_Sce_Description": "This scenario will test the functionality of the device when it is offline and not connected to ATS during a transaction reversal. The test will ensure that the device correctly checks the Tap Counter to see if it is exceeded and stores the request for reversal. The expected outcome is that the Request for reversal success screen is displayed."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Change card language profile", "Use_Case_Name": "Transaction Reversal - Customer\u2019s Farecard is Blocked", "Test_Scnario": "Testing the functionality of the audio messages during a transaction reversal", "Test_Sce_Description": "This scenario will test the functionality of the audio messages during a transaction reversal. The test will ensure that the operator correctly enables the audio mode and changes the volume level using the physical device buttons at the customer\u2019s discretion."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Change card language profile", "Use_Case_Name": "Transaction Reversal - Customer\u2019s Farecard is on the Hotlist", "Test_Scnario": "Virtual Card Transaction Reversal", "Test_Sce_Description": "This scenario tests the functionality of the SA Tool when a customer requests to reverse a fare payment made with a Virtual Card. The test will ensure that the SA Tool correctly reads the Virtual Card information, sends the transaction to ATS for processing, and displays the appropriate success or failure message."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Change card language profile", "Use_Case_Name": "Transaction Reversal - Customer\u2019s Farecard is on the Hotlist", "Test_Scnario": "Transaction Reversal with Unreadable Farecard", "Test_Sce_Description": "This scenario tests the SA Tool's ability to handle a situation where the Farecard is unreadable. The test will ensure that the SA Tool correctly detects the unreadable Farecard, informs the operator, and prompts the customer to tap again."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Change card language profile", "Use_Case_Name": "Transaction Reversal - Customer\u2019s Farecard is on the Hotlist", "Test_Scnario": "Transaction Reversal with Offline SA Tool", "Test_Sce_Description": "This scenario tests the SA Tool's functionality when it is offline and not connected to ATS. The test will ensure that the SA Tool correctly stores the request for reversal and sends a bulk upload of transactions to ATS for processing when it comes back online."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Change card language profile", "Use_Case_Name": "Transaction Reversal - Customer\u2019s Farecard is on the Hotlist", "Test_Scnario": "Transaction Reversal with Audio Messages", "Test_Sce_Description": "This scenario tests the SA Tool's ability to provide audio messages during a fare reversal at the customer's request. The test will ensure that the operator can enable audio mode, adjust the volume level, and that the corresponding audio message is played in the default language of the Farecard."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Change card language profile", "Use_Case_Name": "Transaction Reversal - Customer\u2019s Farecard is on the Hotlist", "Test_Scnario": "Transaction Reversal with Non-activated Farecard", "Test_Sce_Description": "This scenario tests the SA Tool's response when a customer taps a non-activated Farecard. The test will ensure that the SA Tool correctly detects that the Farecard is not activated, displays a declined message to the customer, and does not conduct the transaction."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Change card language profile", "Use_Case_Name": "Transaction Reversal - Customer\u2019s Farecard is on the Hotlist", "Test_Scnario": "Fare Payment Reversal with Open Payments Media", "Test_Sce_Description": "This scenario tests the interactions of an Open Payments cardholder as they reverse a fare payment on an Online SA Tool that is connected to ATS. The test will ensure that the device correctly checks the validity of the media, sends the reversal request to ATS, and provides the appropriate feedback to the cardholder."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Change card language profile", "Use_Case_Name": "Transaction Reversal - Customer\u2019s Farecard is on the Hotlist", "Test_Scnario": "Reverse a Fare Payment with Offline Device", "Test_Sce_Description": "This scenario tests the device's ability to handle a fare payment reversal when it is offline and not connected to ATS. The test will ensure that the device correctly stores the tap until it goes back online and connects to ATS, and then rates the tap in ATS."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Change card language profile", "Use_Case_Name": "Transaction Reversal - Customer\u2019s Farecard is on the Hotlist", "Test_Scnario": "Reverse a Fare Payment with Audio Messages", "Test_Sce_Description": "This scenario tests the device's ability to provide audio messages during a fare payment reversal at the customer's request. The test will ensure that the device correctly plays the corresponding audio message in the default language of the Farecard."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Change card language profile", "Use_Case_Name": "Transaction Reversal - Battery goes below the low battery threshold during reversal", "Test_Scnario": "Low Battery Threshold during Fare Payment", "Test_Sce_Description": "This scenario tests the functionality of the application when the battery goes below the low battery threshold during a successful Farecard tap. The application should switch to 'Out of Service' mode after processing the Farecard tap if the battery level is below the threshold."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Change card language profile", "Use_Case_Name": "Transaction Reversal - Battery goes below the low battery threshold during reversal", "Test_Scnario": "Fare Payment with Non-Farecard", "Test_Sce_Description": "This scenario tests the application's response when a customer taps a card that is not a Farecard. The application should not respond and a 'Card Read Error' message should be displayed."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Change card language profile", "Use_Case_Name": "Transaction Reversal - Battery goes below the low battery threshold during reversal", "Test_Scnario": "Farecard within Anti-Passback Window", "Test_Sce_Description": "This scenario tests the application's response when a customer's Farecard is within the Anti-Passback Window. The application should detect that the Farecard fails the Anti-Passback checks and display a declined message to the customer."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Change card language profile", "Use_Case_Name": "Transaction Reversal - Battery goes below the low battery threshold during reversal", "Test_Scnario": "Limited Period Pass outside of valid time", "Test_Sce_Description": "This scenario tests the application's response when a Farecard with a valid Limited Period Pass is tapped outside of the time limit of the product and the Farecard is in overdraft. The application should detect that the Limited Period Pass is not valid at the current time, compute the value to be deducted from the e-Purse, and detect that the Farecard is in overdraft."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Change card language profile", "Use_Case_Name": "Transaction Reversal - Battery goes below the low battery threshold during reversal", "Test_Scnario": "Cardholder Taps-On an Online SA Tool to a Fare-by-Zone TA with Virtual Card Media", "Test_Sce_Description": "This scenario tests the interactions of a Virtual Card Cardholder as they tap-on at a SA Tool that is online and connected to ATS for a Fare-by-Zone TA. The device should determine that the media tapped is not supported and display an error message."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Change card language profile", "Use_Case_Name": "Transaction Reversal - Battery goes below the low battery threshold during reversal", "Test_Scnario": "Virtual Card Transaction Reversal on an Online SA Tool", "Test_Sce_Description": "This scenario tests the steps for a SP operator to manually perform a Virtual Card transaction reversal with the SA Tool. The SA Tool should read the Virtual Card information, send the transaction to ATS to be processed, and display a successful fare reversal screen to the operator and customer."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Change card language profile", "Use_Case_Name": "Transaction Reversal - Battery goes below the low battery threshold during reversal", "Test_Scnario": "Transaction Reversal - Customer\u2019s Farecard is Unreadable", "Test_Sce_Description": "This scenario tests the application's response when the Farecard is unreadable. The application should indicate to the operator that the Farecard is unreadable."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Change card language profile", "Use_Case_Name": "Transaction Reversal - Battery goes below the low battery threshold during reversal", "Test_Scnario": "Transaction Reversal \u2013 SA Tool is Offline", "Test_Sce_Description": "This scenario tests the application's response when the SA Tool is offline and not connected to ATS. The device should check the Tap Counter to see if it is exceeded and store the request for reversal."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Change card language profile", "Use_Case_Name": "Transaction Reversal - Battery goes below the low battery threshold during reversal", "Test_Scnario": "Transaction Reversal - Customer Requests Audio Messages", "Test_Sce_Description": "This scenario tests the application's response when a customer requests to reverse a fare and requests audio messages for fare reversal. The operator should enable audio mode and the SA Tool should display the fare reversal screen to the operator and customer for the duration of the audio message."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Change card language profile", "Use_Case_Name": "Transaction Reversal \u2013 Customer taps a card that is not a Farecard", "Test_Scnario": "Verify the functionality of the SA Tool when a non-Farecard is tapped", "Test_Sce_Description": "This scenario is to test the functionality of the SA Tool when a non-Farecard is tapped. The expected outcome is that the SA Tool application does not respond, but the device error message \u201cCard Read Error\u201d is displayed for a short period of time."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Change card language profile", "Use_Case_Name": "Transaction Reversal \u2013 Customer taps a card that is not a Farecard", "Test_Scnario": "Verify the functionality of the SA Tool when a non-activated Farecard is tapped", "Test_Sce_Description": "This scenario is to test the functionality of the SA Tool when a non-activated Farecard is tapped. The expected outcome is that the device detects that the Farecard is not activated and the SA Tool application will display a declined message to the customer. The transaction is not conducted."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Change card language profile", "Use_Case_Name": "Transaction Reversal \u2013 Customer taps a card that is not a Farecard", "Test_Scnario": "Verify the functionality of the SA Tool when a Farecard is unreadable", "Test_Sce_Description": "This scenario is to test the functionality of the SA Tool when a Farecard is unreadable. The expected outcome is that the SA Tool NFC reader detects the Farecard but is unable to read it. SA Tool application will indicate to the operator that the Farecard is unreadable."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Change card language profile", "Use_Case_Name": "Transaction Reversal \u2013 Customer taps a card that is not a Farecard", "Test_Scnario": "Verify the functionality of the SA Tool when it is offline", "Test_Sce_Description": "This scenario is to test the functionality of the SA Tool when it is offline. The expected outcome is that the SA Tool stores the request for reversal and displays a request for reversal success screen. The SA Tool sends a bulk upload of transactions to ATS for processing when it comes back online."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Change card language profile", "Use_Case_Name": "Transaction Reversal \u2013 Customer taps a card that is not a Farecard", "Test_Scnario": "Verify the functionality of the SA Tool when the customer requests audio messages", "Test_Sce_Description": "This scenario is to test the functionality of the SA Tool when the customer requests audio messages for fare reversal. The expected outcome is that the operator enables audio mode and the SA Tool displays the fare reversal screen to the operator and customer for the duration of the audio message. Corresponding audio message is played to the customer in the default language of their Farecard."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Change card language profile", "Use_Case_Name": "Transaction Reversal \u2013 Customer taps a card that is not a Farecard", "Test_Scnario": "Verify the functionality of the SA Tool when Open Payments Media is tapped", "Test_Sce_Description": "This scenario is to test the functionality of the SA Tool when Open Payments Media is tapped. The expected outcome is that the device sends the cardholder\u2019s reversal request tap to Accenture Ticketing Services and the Request for Reversal Recorded screen is provided to the cardholder."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Change card language profile", "Use_Case_Name": "Transaction Reversal \u2013 Customer taps a card that is not a Farecard", "Test_Scnario": "Verify the functionality of the SA Tool when it is offline and Open Payments Media is tapped", "Test_Sce_Description": "This scenario is to test the functionality of the SA Tool when it is offline and Open Payments Media is tapped. The expected outcome is that the latent transaction processor stores the tap till the device goes back online and connects to Accenture Ticketing Services. The tap is then rated in ATS."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Change card language profile", "Use_Case_Name": "Transaction Reversal \u2013 Customer taps a card that is not a Farecard", "Test_Scnario": "Verify the functionality of the SA Tool when the customer requests audio messages and Open Payments Media is tapped", "Test_Sce_Description": "This scenario is to test the functionality of the SA Tool when the customer requests audio messages and Open Payments Media is tapped. The expected outcome is that the operator enables audio mode and the SA Tool displays the fare reversal screen to the operator and customer for the duration of the audio message. Corresponding audio message is played to the customer in the default language of their Farecard."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Change card language profile", "Use_Case_Name": "Transaction Reversal \u2013 Customer taps a non-activated Farecard", "Test_Scnario": "Reversal Request with Non-Activated Farecard", "Test_Sce_Description": "Validate the system's response when a customer attempts to reverse a fare with a non-activated Farecard. The system should detect that the Farecard is not activated, display a declined message to the customer, and not conduct the transaction."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Change card language profile", "Use_Case_Name": "Transaction Reversal \u2013 Customer taps a non-activated Farecard", "Test_Scnario": "Reversal Request with Unreadable Farecard", "Test_Sce_Description": "Verify the system's behavior when the Farecard is unreadable. The system should detect the Farecard but fail to read it, and indicate to the operator that the Farecard is unreadable. If the customer taps the NFC reader again and the tap is successful, the system should proceed with the reversal. If the tap is unsuccessful, the system should again indicate that the Farecard is unreadable."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Change card language profile", "Use_Case_Name": "Transaction Reversal \u2013 Customer taps a non-activated Farecard", "Test_Scnario": "Reversal Request with Offline SA Tool", "Test_Sce_Description": "Test the system's functionality when the SA Tool is offline and not connected to ATS. The system should check the Tap Counter, store the request for reversal, display a success screen, and send a bulk upload of transactions to ATS for processing when it comes back online."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Change card language profile", "Use_Case_Name": "Transaction Reversal \u2013 Customer taps a non-activated Farecard", "Test_Scnario": "Reversal Request with Audio Messages", "Test_Sce_Description": "Check the system's ability to handle a fare reversal request with audio messages. The operator should be able to enable audio mode and adjust the volume level using the physical device buttons. The system should display the fare reversal screen to the operator and customer for the duration of the audio message, and play the corresponding audio message in the default language of the Farecard."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Change card language profile", "Use_Case_Name": "Transaction Reversal \u2013 Customer taps a non-activated Farecard", "Test_Scnario": "Reversal Request with Non-Farecard", "Test_Sce_Description": "Assess the system's response when a customer taps a card that is not a Farecard. The SA Tool application should not respond, but the device should display an error message 'Card Read Error' for a short period of time."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Change card language profile", "Use_Case_Name": "Transaction Reversal \u2013 Customer taps a non-activated Farecard", "Test_Scnario": "Reversal Request with Open Payments Media on Online SA Tool", "Test_Sce_Description": "Validate the system's ability to handle a fare payment reversal with Open Payments Media on an Online SA Tool that is connected to ATS. The system should perform various checks (ODA Verification, Expiry Check, BIN Blocking), send the reversal request tap to Accenture Ticketing Services, and provide a 'Request for Reversal Recorded' screen to the cardholder."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Change card language profile", "Use_Case_Name": "Transaction Reversal \u2013 Customer taps a non-activated Farecard", "Test_Scnario": "Reversal Request with Open Payments Media on Offline SA Tool", "Test_Sce_Description": "Test the system's functionality when the SA Tool is offline and not connected to ATS. The latent transaction processor should store the tap till the device goes back online and connects to Accenture Ticketing Services, at which point the tap should be rated in ATS."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Change card language profile", "Use_Case_Name": "Transaction Reversal \u2013 Customer taps a non-activated Farecard", "Test_Scnario": "Reversal Request with Open Payments Media and Audio Messages", "Test_Sce_Description": "Check the system's ability to handle a fare payment reversal with Open Payments Media and audio messages. The system should perform the reversal and play the corresponding audio message in the default language of the Farecard."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Change card language profile", "Use_Case_Name": "Cardholder has already tapped-on", "Test_Scnario": "Cardholder taps-on again at the same station within the SA Tool tap-on anti-passback Window", "Test_Sce_Description": "Verify that the system correctly identifies and handles the situation when a cardholder taps-on again at the same station within the SA Tool tap-on anti-passback Window. The system should accept the tap, check the latent transaction processor on the same device for a previous tap within the anti-passback window, and store the tap on the device till it is connected to ATS where the tap will be reconciled."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Change card language profile", "Use_Case_Name": "Cardholder has already tapped-on", "Test_Scnario": "Cardholder receives Declined \u2013 Already Tapped Screen", "Test_Sce_Description": "Verify that the system correctly provides the Declined \u2013 Already Tapped Screen to the cardholder when they tap-on again at the same station within the SA Tool tap-on anti-passback Window. An error should be captured and logged in the background when this occurs to help with troubleshooting the issue."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Change card language profile", "Use_Case_Name": "Cardholder has already tapped-on", "Test_Scnario": "Declined tap is sent to ATS", "Test_Sce_Description": "Verify that the system correctly sends the declined tap to ATS when a cardholder taps-on again at the same station within the SA Tool tap-on anti-passback Window."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Change card language profile", "Use_Case_Name": "Cardholder has already tapped-on", "Test_Scnario": "Device records the tap when an error has occurred", "Test_Sce_Description": "Verify that the system correctly records the tap when an error has occurred on the device that does not cover the exception cases above."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Change card language profile", "Use_Case_Name": "Cardholder has already tapped-on", "Test_Scnario": "Cardholder receives Declined \u2013 See Customer Service Screen when an error has occurred", "Test_Sce_Description": "Verify that the system correctly provides the Declined \u2013 See Customer Service Screen to the cardholder when an error has occurred on the device that does not cover the exception cases above. An error should be captured and logged in the background when this occurs to help with troubleshooting the issue."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Change card language profile", "Use_Case_Name": "Cardholder has already tapped-on", "Test_Scnario": "Device checks the approved media list", "Test_Sce_Description": "Verify that the system correctly checks the approved media list when the device is provisioned in beta mode and an Open Payments media that is not on the approved media list is tapped on the device."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Change card language profile", "Use_Case_Name": "Cardholder has already tapped-on", "Test_Scnario": "Cardholder receives Declined \u2013 Tap Farecard Screen", "Test_Sce_Description": "Verify that the system correctly provides the Declined \u2013 Tap Farecard Screen to the cardholder when the device is provisioned in beta mode and an Open Payments media that is not on the approved media list is tapped on the device. An error should be captured and logged in the background when this occurs to help with troubleshooting the issue."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Change card language profile", "Use_Case_Name": "Cardholder has already tapped-on", "Test_Scnario": "Device checks its local BIN Blocking list", "Test_Sce_Description": "Verify that the system correctly checks its local BIN Blocking list when a customer\u2019s Open Payments Media is on the BIN Blocking List. The card\u2019s BIN should be found to be on the BIN Blocking List and the device should play the decline audio tone and display the Declined \u2013 BIN Blocked screen."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Change card language profile", "Use_Case_Name": "Cardholder has already tapped-on", "Test_Scnario": "Device sends the tap to ATS and returns a response that the Interac media is on the deny list", "Test_Sce_Description": "Verify that the system correctly sends the tap to ATS and returns a response that the Interac media is on the deny list when a customer is travelling with an Interac Card, and ATS returns a decline response due to Media In Debt."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Change card language profile", "Use_Case_Name": "Cardholder has already tapped-on", "Test_Scnario": "Cardholder receives Declined \u2013 Interac Unpaid Fares Online Screen", "Test_Sce_Description": "Verify that the system correctly provides the Declined \u2013 Interac Unpaid Fares Online Screen to the cardholder when a customer is travelling with an Interac Card, and ATS returns a decline response due to Media In Debt. An error should be captured and logged in the background when this occurs to help with troubleshooting the issue."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Change card language profile", "Use_Case_Name": "Farecard has insufficient E-Purse to cover the Tap-On Fare", "Test_Scnario": "Farecard tapped does not match", "Test_Sce_Description": "Test the scenario where the Farecard tapped during the write tap does not match the Farecard tapped during the identification tap. This can occur when the operator does not allow the Farecard to remain on the NFC Reader for the duration of the transaction or when the operator has tapped one Farecard and intends to write to it but another Farecard is presented during the write tap."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Change card language profile", "Use_Case_Name": "Farecard has insufficient E-Purse to cover the Tap-On Fare", "Test_Scnario": "Underpayment handling", "Test_Sce_Description": "Test the scenario where the customer\u2019s Farecard is in underpayment and the operator has to handle this situation. This includes informing the customer about the underpayment, determining whether the customer has missed a tap off or just tapped on, and deciding whether to accept or waive the underpayment."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Change card language profile", "Use_Case_Name": "Farecard has insufficient E-Purse to cover the Tap-On Fare", "Test_Scnario": "Farecard is tapped-off at the same location where tap-on occurred", "Test_Sce_Description": "Test the scenario where the Farecard is tapped-off at the same location where tap-on occurred within the Tap-on anti-passback Window. The device should provide the appropriate feedback to the cardholder without updating the Farecard."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Change card language profile", "Use_Case_Name": "Farecard has insufficient E-Purse to cover the Tap-On Fare", "Test_Scnario": "Farecard is blocked", "Test_Sce_Description": "Test the scenario where the Farecard is blocked and the right to travel is not conferred. The device should provide the appropriate feedback to the Cardholder."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Change card language profile", "Use_Case_Name": "Farecard has insufficient E-Purse to cover the Tap-On Fare", "Test_Scnario": "Time since Tap-On Exceeds Max Travel Duration", "Test_Sce_Description": "Test the scenario where the time since tap-on exceeds the Max Travel Duration. In this case, the Device should auto-settle the Underpayment and open a new trip."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Change card language profile", "Use_Case_Name": "Farecard has insufficient E-Purse to cover the Tap-On Fare", "Test_Scnario": "Multiple NFC media are presented to the device at one time", "Test_Sce_Description": "Test the scenario where multiple NFC media are presented to the device at one time. The device should block all fare payment functionality and present Anti-Collision HMI to customer."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Change card language profile", "Use_Case_Name": "Farecard has insufficient E-Purse to cover the Tap-On Fare", "Test_Scnario": "Tap a non-activated Farecard on an SA Tool", "Test_Sce_Description": "Test the scenario where a non-activated Farecard is tapped on the device. The transaction should be unsuccessful and the device should provide feedback to the Cardholder of an unsuccessful transaction."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Change card language profile", "Use_Case_Name": "Farecard has insufficient E-Purse to cover the Tap-On Fare", "Test_Scnario": "Tap a Farecard on an SA Tool and card reading error occurs", "Test_Sce_Description": "Test the scenario where a Cardholder taps Farecard on an SA Tool and a Card reading error occurs (e.g. Farecard is immediately removed from the card reader)."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Change card language profile", "Use_Case_Name": "Tap a non-activated Farecard on an SA Tool", "Test_Scnario": "Non-Revenue farecard in the training mode", "Test_Sce_Description": "Verify that the SA tool only accepts Non-Revenue farecard in the training mode and if the Non-Revenue card is tapped in the revenue mode, the device should display a declined HMI."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Change card language profile", "Use_Case_Name": "Tap a non-activated Farecard on an SA Tool", "Test_Scnario": "Temporal Class Supplement", "Test_Sce_Description": "Verify that when a Farecard is tapped on a device during a time period that contains an associated Temporal Class Supplement, the Device should contain an HMI reflecting the Temporal Class Supplement, and should process the Tap-On Transaction as a normal tap-on."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Change card language profile", "Use_Case_Name": "Tap a non-activated Farecard on an SA Tool", "Test_Scnario": "Autoload Enabled Farecard", "Test_Sce_Description": "Verify that if the Fare causes the Farecard E-Purse Balance to cross the Auto-load threshold, the Farecard should have the Autoload amount automatically added to the E-Purse balance."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Change card language profile", "Use_Case_Name": "Tap a non-activated Farecard on an SA Tool", "Test_Scnario": "Override Default Trip", "Test_Sce_Description": "Verify that if the Farecard with no Default O/D is tapped on while the device is in Override mode, the device should process the tap as a result tap-on."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Change card language profile", "Use_Case_Name": "Tap a non-activated Farecard on an SA Tool", "Test_Scnario": "Audio Messages Request", "Test_Sce_Description": "Verify that when the customer asks to pay for the trip with their Farecard and requests audio messages for the fare payment, the operator should enable audio mode and the corresponding audio message should be played to the customer in the default language of their Farecard."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Change card language profile", "Use_Case_Name": "Tap a non-activated Farecard on an SA Tool", "Test_Scnario": "Farecard Validation Failure", "Test_Sce_Description": "Verify that if the Farecard fails validation checks at Tap-On, the device should provide the cardholder with the appropriate feedback without updating the Farecard."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Change card language profile", "Use_Case_Name": "Tap a non-activated Farecard on an SA Tool", "Test_Scnario": "Blocked Farecard", "Test_Sce_Description": "Verify that if the Farecard is blocked, the right to travel should not be conferred and the Device should provide the appropriate feedback to the Cardholder."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Change card language profile", "Use_Case_Name": "Tap a non-activated Farecard on an SA Tool", "Test_Scnario": "Max Travel Duration Exceeded", "Test_Sce_Description": "Verify that if the time since tap-on exceeds the Max Travel Duration, then the Device should auto-settle the Underpayment and open a new trips."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Change card language profile", "Use_Case_Name": "Tap a non-activated Farecard on an SA Tool", "Test_Scnario": "Multiple NFC media", "Test_Sce_Description": "Verify that if multiple NFC media are presented to the device at one time, the device should block all fare payment functionality."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Change card language profile", "Use_Case_Name": "Tap a non-activated Farecard on an SA Tool", "Test_Scnario": "Non-activated Farecard", "Test_Sce_Description": "Verify that if the Farecard is not activated and is tapped on the device, the transaction should be unsuccessful."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Change card language profile", "Use_Case_Name": "Tap a non-activated Farecard on an SA Tool", "Test_Scnario": "Card Reading Error", "Test_Sce_Description": "Verify that if a Cardholder taps Farecard on an SA Tool and a Card reading error occurs (e.g. Farecard is immediately removed from the card reader), the device should provide the appropriate feedback to the Cardholder."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Default Trip", "Use_Case_Name": "Open Payments Media Contains a Default O/D and the Customer Overrides the Default Trip prior to tapping-on", "Test_Scnario": "Override Default O/D", "Test_Sce_Description": "Verify that the device correctly overrides the default O/D contained on the Open Payments Media and processes the tap as a regular tap-on when the customer requests the override of a Default Trip."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Default Trip", "Use_Case_Name": "Open Payments Media Contains a Default O/D and the Customer Overrides the Default Trip prior to tapping-on", "Test_Scnario": "Customer Interaction with Device", "Test_Sce_Description": "Verify that the Device HMI correctly informs the customer that the Device is prepared to override the Default Trip when the customer requests the override of a Default Trip."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Default Trip", "Use_Case_Name": "Open Payments Media Contains a Default O/D and the Customer Overrides the Default Trip prior to tapping-on", "Test_Scnario": "Initiate Trip with Farecard", "Test_Sce_Description": "Verify that the trip is correctly initiated when the Cardholder presents the Farecard to the Device CID after requesting the override of a Default Trip."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Default Trip", "Use_Case_Name": "Open Payments Media Contains a Default O/D and the Customer Overrides the Default Trip prior to tapping-on", "Test_Scnario": "Capping Discount Eligibility", "Test_Sce_Description": "Verify that the device correctly identifies when the customer has met any capping discount criteria and that capping has been configured."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Default Trip", "Use_Case_Name": "Open Payments Media Contains a Default O/D and the Customer Overrides the Default Trip prior to tapping-on", "Test_Scnario": "Capping Discount Calculation", "Test_Sce_Description": "Verify that ATS correctly calculates the capping discount and applies it to the fare calculation when the customer has met any of the capping criteria (Daily, Weekly, Monthly)."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Default Trip", "Use_Case_Name": "Open Payments Media Contains a Default O/D and the Customer Overrides the Default Trip prior to tapping-on", "Test_Scnario": "Multiple Capping Discounts Eligibility", "Test_Sce_Description": "Verify that the device correctly identifies when the customer has met a combination of multiple capping criteria (Daily, Weekly, Monthly) and that capping has been configured."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Default Trip", "Use_Case_Name": "Open Payments Media Contains a Default O/D and the Customer Overrides the Default Trip prior to tapping-on", "Test_Scnario": "Multiple Capping Discounts Calculation", "Test_Sce_Description": "Verify that ATS correctly calculates the capping discount and applies it to the fare calculation when multiple caps are met. ATS should take whatever Capping program which is of highest precedence (set in RE) and apply that discount to the fare."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Default Trip", "Use_Case_Name": "Open Payments Media Contains a Default O/D and the Customer Overrides the Default Trip prior to tapping-on", "Test_Scnario": "Offline Device Capping Discount", "Test_Sce_Description": "Verify that the device correctly checks the local deny list if the media is on the local deny list when the device is offline and not connected to Accenture Ticketing Services. The latent transaction processor should store the tap till the device goes back online and connects to Accenture Ticketing Services."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Default Trip", "Use_Case_Name": "Open Payments Media Contains a Default O/D and the Customer Overrides the Default Trip prior to tapping-on", "Test_Scnario": "Open Payments Media Fails ODA Check", "Test_Sce_Description": "Verify that the device correctly returns the appropriate feedback when an Open Payments Media fails the ODA check."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Default Trip", "Use_Case_Name": "Open Payments Media Contains a Default O/D and the Customer Overrides the Default Trip prior to tapping-on", "Test_Scnario": "Open Payments Media on Deny List", "Test_Sce_Description": "Verify that the device correctly sends the tap to ATS and returns a response that the media is on the deny list when the Open Payments Media is on the deny list."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Default Trip", "Use_Case_Name": "Open Payments Media Contains a Default O/D and the Customer Overrides the Default Trip prior to tapping-on", "Test_Scnario": "Open Payments Media on Local Deny List", "Test_Sce_Description": "Verify that the device correctly checks the local deny list and returns a response that the media is denied when the Open Payments Media is on the local deny list."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Default Trip", "Use_Case_Name": "Open Payments Media Contains a Default O/D and the Customer Overrides the Default Trip prior to tapping-on", "Test_Scnario": "Multiple NFC Media Presentation", "Test_Sce_Description": "Verify that the device correctly blocks all fare payment functionality when multiple NFC media are presented to the device at one time."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Default Trip", "Use_Case_Name": "Open Payments Media Contains a Default O/D and the Customer Overrides the Default Trip prior to tapping-on", "Test_Scnario": "Out-of-Service Device", "Test_Sce_Description": "Verify that the device correctly displays the Not in Service screen to the cardholder and does not detect the media when the device is in Out-of-Service state."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Default Trip", "Use_Case_Name": "Open Payments Media Contains a Default O/D and the Customer Overrides the Default Trip prior to tapping-on", "Test_Scnario": "Anti-passback Online", "Test_Sce_Description": "Verify that the device correctly sends the tap to ATS and returns a response that the cardholder has already tapped on at the same station and is within the Tap-on anti-passback Window when the customer attempts to tap-on immediately after tapping-off at the same station and the device is online."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Default Trip", "Use_Case_Name": "Open Payments Media Contains a Default O/D and the Customer Overrides the Default Trip prior to tapping-on", "Test_Scnario": "Anti-passback Offline", "Test_Sce_Description": "Verify that the device correctly handles the situation when the customer attempts to tap-on immediately after tapping-off at the same station and the device is offline."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Default Trip", "Use_Case_Name": "Tap-On an SA Tool with Open Payments Media \u2013 Customer is eligible for capping discount", "Test_Scnario": "Offline Device and ATS Connection", "Test_Sce_Description": "Verify that when the SA Tool is not online and not connected to ATS, the device checks the local deny list if the media is on the local deny list and the latent transaction processor stores the tap till the device goes back online and connects to Accenture Ticketing Services. The tap is then rated in ATS."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Default Trip", "Use_Case_Name": "Tap-On an SA Tool with Open Payments Media \u2013 Customer is eligible for capping discount", "Test_Scnario": "Audio Jack Instructions", "Test_Sce_Description": "Verify that when the customer inserts headphones into the Audio jack, the device automatically switches into audio assist mode and provides audio instructions detailing how to adjust the volume and prompt the user to tap their media in both French and English."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Default Trip", "Use_Case_Name": "Tap-On an SA Tool with Open Payments Media \u2013 Customer is eligible for capping discount", "Test_Scnario": "Default Trip Override", "Test_Sce_Description": "Verify that when the customer requests the override of a Default Trip by interacting with the Device, the Device HMI informs the customer that the Device is prepared to override the Default Trip and the Cardholder presents Farecard to the Device CID."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Default Trip", "Use_Case_Name": "Tap-On an SA Tool with Open Payments Media \u2013 Customer is eligible for capping discount", "Test_Scnario": "Capping Discount Eligibility", "Test_Sce_Description": "Verify that when capping is configured, and the customer has met any of the capping criteria (Daily, Weekly, Monthly), the device sends the tap to Accenture Ticketing Services for processing. ATS checks the online deny list, completes the fare processing, calculates the capping discount and applies to the fare calculation."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Default Trip", "Use_Case_Name": "Tap-On an SA Tool with Open Payments Media \u2013 Customer is eligible for capping discount", "Test_Scnario": "Multiple Capping Discounts Eligibility", "Test_Sce_Description": "Verify that when capping is configured, and the customer has met a combination of multiple capping criteria (Daily, Weekly, Monthly), the device sends the tap to Accenture Ticketing Services for processing. ATS checks the online deny list, completes the fare processing, calculates the capping discount and applies to the fare calculation. When multiple caps are met ATS will take whatever Capping program which is of highest precedence (set in RE) and apply that discount to the fare."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Default Trip", "Use_Case_Name": "Tap-On an SA Tool with Open Payments Media \u2013 Customer is eligible for capping discount", "Test_Scnario": "Offline Device and Capping Discount Eligibility", "Test_Sce_Description": "Verify that when the device is offline and not connected to Accenture Ticketing Services and the customer has met any capping discount criteria, the device checks the local deny list if the media is on the local deny list. The latent transaction processor stores the tap till the device goes back online and connects to Accenture Ticketing Services. The tap is then rated in ATS."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Default Trip", "Use_Case_Name": "Tap-On an SA Tool with Open Payments Media \u2013 Customer is eligible for capping discount", "Test_Scnario": "Open Payments Media Default O/D", "Test_Sce_Description": "Verify that when the Open Payments Media contains a Default O/D and the Customer Taps on at either the Origin or Destination Status, the device will process a full Fare-by-Zone transaction (both tap-on and tap-off) in case of a default O/D on the Farecard."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Default Trip", "Use_Case_Name": "Tap-On an SA Tool with Open Payments Media \u2013 Customer is eligible for multiple capping discounts", "Test_Scnario": "Verify Cardholder Taps-On an SA Tool with Open Payments Media", "Test_Sce_Description": "Check if the Cardholder is able to initiate a trip and tap the Open Payments Media on the device Card Reader (CID). The device should be able to detect the Open Payments media."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Default Trip", "Use_Case_Name": "Tap-On an SA Tool with Open Payments Media \u2013 Customer is eligible for multiple capping discounts", "Test_Scnario": "Verify device reader checks", "Test_Sce_Description": "Check if the device reads the open payments media and completes the reader checks including ODA Verification, Expiry Check and BIN Blocking."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Default Trip", "Use_Case_Name": "Tap-On an SA Tool with Open Payments Media \u2013 Customer is eligible for multiple capping discounts", "Test_Scnario": "Verify device sends tap to Accenture Ticketing Services", "Test_Sce_Description": "Check if the device sends the tap to Accenture Ticketing Services for processing. ATS should check the online deny list and complete the fare processing."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Default Trip", "Use_Case_Name": "Tap-On an SA Tool with Open Payments Media \u2013 Customer is eligible for multiple capping discounts", "Test_Scnario": "Verify right to travel is conferred to the Cardholder", "Test_Sce_Description": "Check if the right to travel is conferred to the Cardholder by updating the HMI of the SA Tool. The FPS \u2013 Open Payments Accepted Screen should be provided to the cardholder."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Default Trip", "Use_Case_Name": "Tap-On an SA Tool with Open Payments Media \u2013 Customer is eligible for multiple capping discounts", "Test_Scnario": "Verify device operation when offline", "Test_Sce_Description": "Check if the device checks the local deny list if the media is on the local deny list when it is offline. The latent transaction processor should store the tap till the device goes back online and connects to Accenture Ticketing Services."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Default Trip", "Use_Case_Name": "Tap-On an SA Tool with Open Payments Media \u2013 Customer is eligible for multiple capping discounts", "Test_Scnario": "Verify audio assist mode", "Test_Sce_Description": "Check if the device switches into audio assist mode when the customer inserts headphones into the Audio jack. Audio instructions should detail how to adjust the volume and prompt the user to tap their media."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Default Trip", "Use_Case_Name": "Tap-On an SA Tool with Open Payments Media \u2013 Customer is eligible for multiple capping discounts", "Test_Scnario": "Verify processing of full Fare-by-Zone transaction", "Test_Sce_Description": "Check if the device processes a full Fare-by-Zone transaction (both tap-on and tap-off) in case of a default O/D on the Farecard."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Default Trip", "Use_Case_Name": "Tap-On an SA Tool with Open Payments Media \u2013 Customer is eligible for multiple capping discounts", "Test_Scnario": "Verify override of Default Trip", "Test_Sce_Description": "Check if the device processes the tap as a normal tap-off when the tap-off occurs while the device is in Override mode."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Default Trip", "Use_Case_Name": "Tap-On an SA Tool with Open Payments Media \u2013 Customer is eligible for multiple capping discounts", "Test_Scnario": "Verify capping discount eligibility", "Test_Sce_Description": "Check if ATS calculates the capping discount and applies it to the fare calculation when the customer has met any capping discount criteria and capping has been configured."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Default Trip", "Use_Case_Name": "Tap-On an SA Tool with Open Payments Media \u2013 Customer is eligible for multiple capping discounts", "Test_Scnario": "Verify multiple capping discounts eligibility", "Test_Sce_Description": "Check if ATS calculates the capping discount and applies it to the fare calculation when the customer has met a combination of multiple capping criteria and capping has been configured."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Default Trip", "Use_Case_Name": "Tap-On an SA Tool with Open Payments Media \u2013 Customer is eligible for Capping discount; Device is offline and not connected to Accenture Ticketing Services", "Test_Scnario": "Offline Device with Capping Discount", "Test_Sce_Description": "Verify that the SA Tool correctly processes a tap when the device is offline and the customer is eligible for a capping discount. The device should check the local deny list, store the tap until the device goes back online, and then rate the tap in ATS. The capping rules should follow the use-case logic outlined in [R1]."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Default Trip", "Use_Case_Name": "Tap-On an SA Tool with Open Payments Media \u2013 Customer is eligible for Capping discount; Device is offline and not connected to Accenture Ticketing Services", "Test_Scnario": "Open Payments Media Fails ODA Check", "Test_Sce_Description": "Verify that the device correctly returns the appropriate feedback when an Open Payments Media fails the ODA check. The device should perform the necessary validation, determine that the Open Payments Media is unable to pass the checks, and provide the Declined \u2013 Failed ODA Check Screen to the cardholder. An error should be captured and logged in the background when this occurs to help with troubleshooting the issue."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Default Trip", "Use_Case_Name": "Tap-On an SA Tool with Open Payments Media \u2013 Customer is eligible for Capping discount; Device is offline and not connected to Accenture Ticketing Services", "Test_Scnario": "Open Payments Media Fails Expiry Check", "Test_Sce_Description": "Verify that the device correctly returns the appropriate feedback when an Open Payments Media fails the Expiry Check. The device should perform the necessary validation, determine that the Open Payments Media is unable to pass the expiry check, and provide the Declined \u2013 Card Expired Screen to the cardholder. An error should be captured and logged in the background when this occurs to help with troubleshooting the issue."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Default Trip", "Use_Case_Name": "Tap-On an SA Tool with Open Payments Media \u2013 Customer is eligible for Capping discount; Device is offline and not connected to Accenture Ticketing Services", "Test_Scnario": "Already Tapped-On Using an Online Device within Anti-Passback Window", "Test_Sce_Description": "Verify that the device correctly returns the appropriate feedback when the cardholder taps-on again at an SA Tool at the same station within the SA Tool Tap-on anti-passback Window, whereby the initial device and secondary device(s) tapped on were all online. The device should send the tap to ATS and return a response that the cardholder has already tapped on at the same station and is within the Tap-on anti-passback Window."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Default Trip", "Use_Case_Name": "Tap-On an SA Tool with Open Payments Media \u2013 Customer is eligible for Capping discount; Device is offline and not connected to Accenture Ticketing Services", "Test_Scnario": "Already Tapped-On Using an Offline Device", "Test_Sce_Description": "Verify that the device correctly returns the appropriate feedback when the cardholder taps-on again at an SA Tool at the same station within the SA Tool Tap-on anti-passback Window whereby the initial device tapped, and secondary device(s) is the same device and is offline. The device should accept the tap, check the latent transaction processor on the same device for a previous tap within the anti-passback window, and store the tap on the device till it is connected to ATS where the transactions will be reconciled."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Default Trip", "Use_Case_Name": "Tap-On an SA Tool with Open Payments Media \u2013 Customer is eligible for Capping discount; Device is offline and not connected to Accenture Ticketing Services", "Test_Scnario": "Open Payments Media is on the ATS deny list and the SA Tool is online", "Test_Sce_Description": "Verify that the device correctly returns the appropriate feedback when the Open Payments Media is on the ATS deny list and the SA Tool is online. The device should perform the necessary validation, determine that the Open Payments Media is on the deny list, and provide the Declined \u2013 Card on Deny List Screen to the cardholder. An error should be captured and logged in the background when this occurs to help with troubleshooting the issue."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Default Trip", "Use_Case_Name": "Open Payments Media fails ODA check", "Test_Scnario": "Open Payments Media fails ODA check", "Test_Sce_Description": "This scenario tests the functionality of the system when the Open Payments Media fails the ODA check. The system should perform the necessary validation, determine the failure, and provide the appropriate feedback to the cardholder. The system should also log the error in the background and in the SOTI logs for troubleshooting purposes. The declined tap should then be sent to ATS."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Default Trip", "Use_Case_Name": "Open Payments Media fails ODA check", "Test_Scnario": "Open Payments Media fails Expiry Check", "Test_Sce_Description": "This scenario tests the functionality of the system when the Open Payments Media fails the Expiry Check. The system should perform the necessary validation, determine the failure, and provide the appropriate feedback to the cardholder. The system should also log the error in the background and in the SOTI logs for troubleshooting purposes. The declined tap should then be sent to ATS."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Default Trip", "Use_Case_Name": "Open Payments Media fails ODA check", "Test_Scnario": "Open Payments Media has already tapped-on using an Online Device", "Test_Sce_Description": "This scenario tests the functionality of the system when the cardholder taps-on again at the same station within the anti-passback Window using an online device. The system should send the tap to ATS and return a response that the cardholder has already tapped on. The system should also log the error in the background and in the SOTI logs for troubleshooting purposes."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Default Trip", "Use_Case_Name": "Open Payments Media fails ODA check", "Test_Scnario": "Open Payments Media has already tapped-on using an Offline Device", "Test_Sce_Description": "This scenario tests the functionality of the system when the cardholder taps-on again at the same station within the anti-passback Window using an offline device. The system should accept the tap, check the latent transaction processor on the same device for a previous tap within the anti-passback window, and store the tap on the device till it is connected to ATS. The system should also log the error in the background and in the SOTI logs for troubleshooting purposes."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Default Trip", "Use_Case_Name": "Open Payments Media fails ODA check", "Test_Scnario": "Open Payments Media is on the ATS deny list and the SA Tool is online", "Test_Sce_Description": "This scenario tests the functionality of the system when the Open Payments Media is on the deny list and the SA Tool is online. The system should send the tap to ATS and return a response that the media is on the deny list. The system should also log the error in the background and in the SOTI logs for troubleshooting purposes."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Default Trip", "Use_Case_Name": "Open Payments Media fails ODA check", "Test_Scnario": "Open Payments Media is on the local deny list and device is offline", "Test_Sce_Description": "This scenario tests the functionality of the system when the Open Payments Media is on the local deny list and the device is offline. The system should check the local deny list and return a response that the media is denied. The system should also log the error in the background and in the SOTI logs for troubleshooting purposes."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Default Trip", "Use_Case_Name": "Open Payments Media fails ODA check", "Test_Scnario": "Multiple NFC media are presented to the device at one time", "Test_Sce_Description": "This scenario tests the functionality of the system when multiple NFC media are presented to the device at one time. The system should block all fare payment functionality and provide the appropriate feedback to the cardholder. The system should also log the error in the background and in the SOTI logs for troubleshooting purposes."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Default Trip", "Use_Case_Name": "Open Payments Media fails ODA check", "Test_Scnario": "Tap an Open Payments Media when SA Tool is in Out-of-Service state", "Test_Sce_Description": "This scenario tests the functionality of the system when the SA Tool is in Out-of-Service state and a customer attempts to tap their Open Payments Media on the card reader. The system should not detect the media and remain in Out-of-Service State."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Default Trip", "Use_Case_Name": "Open Payments Media fails ODA check", "Test_Scnario": "Customer attempts to tap on and an error has occurred", "Test_Sce_Description": "This scenario tests the functionality of the system when an error has occurred on the device that does not cover the exception cases above. The system should record the tap, provide the appropriate feedback to the cardholder, and log the error in the background and in the SOTI logs for troubleshooting purposes."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Default Trip", "Use_Case_Name": "Open Payments Media fails ODA check", "Test_Scnario": "Customer attempts to tap an Open Payments media not on the approved media list while the device is in beta mode", "Test_Sce_Description": "This scenario tests the functionality of the system when the device is in beta mode and a customer attempts to tap an Open Payments media not on the approved media list. The system should block the tap and provide the appropriate feedback to the cardholder. The system should also log the error in the background and in the SOTI logs for troubleshooting purposes."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Default Trip", "Use_Case_Name": "Open Payments Media Fails Expiry Check", "Test_Scnario": "Open Payments Media Fails Expiry Check", "Test_Sce_Description": "This scenario tests the functionality of the system when the Open Payments Media fails the expiry check. The system should perform the necessary validation and determine that the Open Payments Media is unable to pass the expiry check. The Declined \u2013 Card Expired Screen should be provided to the cardholder and the declined tap should be sent to ATS."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Default Trip", "Use_Case_Name": "Open Payments Media Fails Expiry Check", "Test_Scnario": "Open Payments Media is on the ATS deny list", "Test_Sce_Description": "This scenario tests the functionality of the system when the Open Payments Media is on the deny list. The device should send the tap to ATS and return a response that the media is on the deny list. The right to travel should not be conferred and the Declined \u2013 Unpaid Fares (Suspended: Unpaid Fares) screen should be provided to the cardholder."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Default Trip", "Use_Case_Name": "Open Payments Media Fails Expiry Check", "Test_Scnario": "Open Payments Media is on the local deny list", "Test_Sce_Description": "This scenario tests the functionality of the system when the Open Payments Media is on the local deny list. The device should check the local deny list and return a response that the media is denied. The right to travel should not be conferred and the Declined \u2013 Unpaid Fares (Suspended: Unpaid Fares) screen should be provided to the cardholder."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Default Trip", "Use_Case_Name": "Open Payments Media Fails Expiry Check", "Test_Scnario": "Multiple NFC media are presented to the device", "Test_Sce_Description": "This scenario tests the functionality of the system when multiple NFC media are presented to the device at one time. The device should block all fare payment functionality and display an error toast message."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Default Trip", "Use_Case_Name": "Open Payments Media Fails Expiry Check", "Test_Scnario": "Device is in Out-of-Service state", "Test_Sce_Description": "This scenario tests the functionality of the system when the device is in Out-of-Service state. The device should display the Not in Service screen to the cardholder and not detect the media."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Default Trip", "Use_Case_Name": "Open Payments Media Fails Expiry Check", "Test_Scnario": "Error has occurred on the device", "Test_Sce_Description": "This scenario tests the functionality of the system when an error has occurred on the device. The device should record the tap and provide the Declined \u2013 Please Contact Customer Service screen to the cardholder."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Default Trip", "Use_Case_Name": "Open Payments Media Fails Expiry Check", "Test_Scnario": "Open Payments media not on the approved media list", "Test_Sce_Description": "This scenario tests the functionality of the system when the Open Payments media is not on the approved media list. The device should perform the necessary validation and determine that the Open Payments Media is unable to pass the checks. The Declined \u2013 Failed ODA Check screen should be provided to the cardholder."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Default Trip", "Use_Case_Name": "Open Payments Media Fails Expiry Check", "Test_Scnario": "Open Payments Media has already tapped-on using an Online Device", "Test_Sce_Description": "This scenario tests the functionality of the system when the cardholder taps-on again at an SA Tool at the same station within the SA Tool Tap-on anti-passback Window. The device should send the tap to ATS and return a response that the cardholder has already tapped on at the same station and is within the Tap-on anti-passback Window."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Default Trip", "Use_Case_Name": "Open Payments Media Fails Expiry Check", "Test_Scnario": "Open Payments Media has already tapped-on using an Offline Device", "Test_Sce_Description": "This scenario tests the functionality of the system when the cardholder taps-on again at an SA Tool at the same station within the SA Tool Tap-on anti-passback Window whereby the initial device tapped, and secondary device(s) is the same device and is offline. The device should accept the tap and check the latent transaction processor on the same device for a previous tap within the anti-passback window."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Default Trip", "Use_Case_Name": "Virtual Card contains a Default O/D and the Customer Taps on at either the Origin or Destination Station", "Test_Scnario": "Virtual Card Default O/D Tap-On Success", "Test_Sce_Description": "Verify that when a customer taps on at either the origin or destination station with a Virtual Card containing a default trip, the device successfully processes the tap and displays the default trip success screen."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Default Trip", "Use_Case_Name": "Virtual Card contains a Default O/D and the Customer Taps on at either the Origin or Destination Station", "Test_Scnario": "ATS Processing of Virtual Card Default O/D Tap-On", "Test_Sce_Description": "Verify that when a customer taps on with a Virtual Card containing a default trip, the device sends the tap to ATS for processing, checks the online hotlist, completes the fare processing accounting for the virtual card\u2019s default trip, and receives the default trip success result back from ATS."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Default Trip", "Use_Case_Name": "Virtual Card contains a Default O/D and the Customer Taps on at either the Origin or Destination Station", "Test_Scnario": "Right to Travel Conferred to Cardholder", "Test_Sce_Description": "Verify that after successful processing of the tap, the right to travel is conferred to the Cardholder by updating the HMI of the SA Tool and the appropriate screen (FPS \u2013 Default Trip Tap-On Screen or FPS \u2013 Override Successful or FPS \u2013 E-Purse Tap On Screen) is provided to the cardholder."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Default Trip", "Use_Case_Name": "Virtual Card contains a Default O/D and the Customer Taps on at either the Origin or Destination Station", "Test_Scnario": "Virtual Card Default O/D Override", "Test_Sce_Description": "Verify that when a customer requests the override of a Default Trip by interacting with the Device, the device is prepared to override the Default Trip and processes the tap as a regular tap-on."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Default Trip", "Use_Case_Name": "Virtual Card contains a Default O/D and the Customer Taps on at either the Origin or Destination Station", "Test_Scnario": "Virtual Card No Default O/D Override", "Test_Sce_Description": "Verify that when a customer requests the override of a Default Trip with a Virtual Card that does not contain a Default O/D, the device processes the tap as a regular tap-on."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Default Trip", "Use_Case_Name": "Virtual Card contains a Default O/D and the Customer Taps on at either the Origin or Destination Station", "Test_Scnario": "Virtual Card Scratchpad Blocked Parameter Update", "Test_Sce_Description": "Verify that when a Virtual Card is in good standing according to ATS, but scratchpad blocked parameter needs to be updated, the device provides the appropriate feedback to the Cardholder of a successful tap, checks and resets the tap counter to 0 if it isn't already at 0, and updates the Virtual Card scratchpad to remove the block parameter."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Default Trip", "Use_Case_Name": "Virtual Card contains a Default O/D and the Customer Taps on at either the Origin or Destination Station", "Test_Scnario": "Virtual Card Authentication Check Failure", "Test_Sce_Description": "Verify that when a Virtual Card fails the Card Authentication check, the device appropriately handles the failure and provides the necessary feedback to the cardholder."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Default Trip", "Use_Case_Name": "Virtual Card contains a Default O/D and the Customer Taps on at either the Origin or Destination Station", "Test_Scnario": "Fare-by-Zone Transaction Processing for Default O/D", "Test_Sce_Description": "Verify that when a default O/D is present on the Farecard, the device processes a full Fare-by-Zone transaction (both tap-on and tap-off) and ATS deducts the Full Fare value for the station-to-station trip accounting for all Fare considerations associated to the trip."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Default Trip", "Use_Case_Name": "Virtual Card contains a Default O/D and the Customer Taps on at either the Origin or Destination Station", "Test_Scnario": "Capping Discount Eligibility Check", "Test_Sce_Description": "Verify that when capping is configured, and the customer has met any of the capping criteria (Daily, Weekly, Monthly), the device sends the tap to ATS for processing, ATS checks the online deny list, completes the fare processing, calculates the capping discount and applies it to the fare calculation."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Default Trip", "Use_Case_Name": "Virtual Card contains a Default O/D and the Customer Taps on at either the Origin or Destination Station", "Test_Scnario": "Multiple Capping Discounts Eligibility Check", "Test_Sce_Description": "Verify that when capping is configured, and the customer has met a combination of multiple capping criteria (Daily, Weekly, Monthly), ATS calculates the capping discount and applies it to the fare calculation, taking into account the highest precedence capping program set in RE."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Default Trip", "Use_Case_Name": "Virtual Card contains a Default O/D and the Customer Taps on at either the Origin or Destination Station", "Test_Scnario": "Offline Device Capping Discount Processing", "Test_Sce_Description": "Verify that when the device is offline and not connected to ATS, but the customer has met any capping discount criteria, the device checks the local deny list, stores the tap till the device goes back online and connects to ATS, and then rates the tap in ATS."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Default Trip", "Use_Case_Name": "Virtual Card contains a Default O/D and the Customer Taps on at either the Origin or Destination Station", "Test_Scnario": "Open Payments Media ODA Check Failure", "Test_Sce_Description": "Verify that when an Open Payments Media fails the ODA check, the device returns the appropriate feedback, provides the Declined \u2013 Failed ODA Check screen to the cardholder, captures and logs an error in the background and in the SOTI logs, and sends the declined tap to ATS."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Default Trip", "Use_Case_Name": "Virtual Card contains a Default O/D and the Customer Taps on at either the Origin or Destination Station", "Test_Scnario": "Open Payments Media Expiry Check Failure", "Test_Sce_Description": "Verify that when an Open Payments Media fails the Expiry Check, the device appropriately handles the failure and provides the necessary feedback to the cardholder."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Default Trip", "Use_Case_Name": "Virtual Card contains a Default O/D and the Customer Overrides the Default Trip prior to tapping-on", "Test_Scnario": "Override Default Trip", "Test_Sce_Description": "Verify that the device correctly overrides the default O/D contained on the Virtual Card when the customer requests the override of a Default Trip by interacting with the Device. The Cardholder then initiates a trip by presenting the Virtual Card to the Device CID."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Default Trip", "Use_Case_Name": "Virtual Card contains a Default O/D and the Customer Overrides the Default Trip prior to tapping-on", "Test_Scnario": "Successful Tap Feedback", "Test_Sce_Description": "Verify that the device provides the appropriate feedback to the Cardholder of a successful tap. The FPS \u2013 Virtual Card E-Purse Flat Fare Accepted Screen should be provided to the cardholder."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Default Trip", "Use_Case_Name": "Virtual Card contains a Default O/D and the Customer Overrides the Default Trip prior to tapping-on", "Test_Scnario": "Tap Counter Check", "Test_Sce_Description": "Verify that the tap counter is checked and reset to 0 if it isn't already at 0 after a successful tap."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Default Trip", "Use_Case_Name": "Virtual Card contains a Default O/D and the Customer Overrides the Default Trip prior to tapping-on", "Test_Scnario": "Scratchpad Update", "Test_Sce_Description": "Verify that the Virtual Card scratchpad is updated to remove the block parameter and prioritizes the accepted response from ATS after a successful tap."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Default Trip", "Use_Case_Name": "Virtual Card contains a Default O/D and the Customer Overrides the Default Trip prior to tapping-on", "Test_Scnario": "Card Authentication Check", "Test_Sce_Description": "Verify that the device correctly identifies when a Virtual Card Media fails the Card Authentication check."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Default Trip", "Use_Case_Name": "Virtual Card contains a Default O/D and the Customer Overrides the Default Trip prior to tapping-on", "Test_Scnario": "Fare Processing", "Test_Sce_Description": "Verify that the device sends the tap to ATS for processing. ATS should check the online hotlist and complete the fare processing accounting for the virtual card\u2019s default trip. ATS then sends the default trip success result back to the device via API."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Default Trip", "Use_Case_Name": "Virtual Card contains a Default O/D and the Customer Overrides the Default Trip prior to tapping-on", "Test_Scnario": "Capping Discount Calculation", "Test_Sce_Description": "Verify that ATS correctly calculates the capping discount and applies it to the fare calculation when the customer has met any of the capping criteria (Daily, Weekly, Monthly)."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Default Trip", "Use_Case_Name": "Virtual Card contains a Default O/D and the Customer Overrides the Default Trip prior to tapping-on", "Test_Scnario": "Multiple Capping Discounts", "Test_Sce_Description": "Verify that ATS correctly calculates the capping discount and applies it to the fare calculation when the customer has met a combination of multiple capping criteria (Daily, Weekly, Monthly). ATS should take whatever Capping program which is of highest precedence (set in RE) and apply that discount to the fare."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Default Trip", "Use_Case_Name": "Virtual Card contains a Default O/D and the Customer Overrides the Default Trip prior to tapping-on", "Test_Scnario": "Offline Device", "Test_Sce_Description": "Verify that if the SA Tool is not online and not connected to ATS, the device checks the local deny list if the media is on the local deny list. The latent transaction processor should store the tap till the device goes back online and connects to Accenture Ticketing Services. The tap is then rated in ATS."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Default Trip", "Use_Case_Name": "Virtual Card contains a Default O/D and the Customer Overrides the Default Trip prior to tapping-on", "Test_Scnario": "Open Payments Media Fails Expiry Check", "Test_Sce_Description": "Verify that the device correctly identifies when an Open Payments Media fails the expiry check and sends the declined tap to ATS."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Default Trip", "Use_Case_Name": "Virtual Card does not contain a Default O/D and the Customer Overrides the Default Trip prior to tapping-on", "Test_Scnario": "Validating Default O/D Override Functionality", "Test_Sce_Description": "Verify that the system correctly overrides the default O/D when a customer initiates a trip by presenting the Virtual Card to the Device CID. The system should process the tap as a regular tap-on."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Default Trip", "Use_Case_Name": "Virtual Card does not contain a Default O/D and the Customer Overrides the Default Trip prior to tapping-on", "Test_Scnario": "Validating Successful Tap Feedback", "Test_Sce_Description": "Verify that the system correctly updates the HMI of the SA Tool and provides the appropriate feedback to the Cardholder of a successful tap. The FPS \u2013 E-Purse Tap On Screen should be provided to the cardholder."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Default Trip", "Use_Case_Name": "Virtual Card does not contain a Default O/D and the Customer Overrides the Default Trip prior to tapping-on", "Test_Scnario": "Validating Fare Processing", "Test_Sce_Description": "Verify that the system correctly sends the tap to ATS for processing. ATS should check the online hotlist and complete the fare processing accounting for the virtual card\u2019s default trip."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Default Trip", "Use_Case_Name": "Virtual Card does not contain a Default O/D and the Customer Overrides the Default Trip prior to tapping-on", "Test_Scnario": "Validating Capping Discount Calculation", "Test_Sce_Description": "Verify that the system correctly calculates the capping discount and applies it to the fare calculation when the customer has met any of the capping criteria (Daily, Weekly, Monthly)."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Default Trip", "Use_Case_Name": "Virtual Card does not contain a Default O/D and the Customer Overrides the Default Trip prior to tapping-on", "Test_Scnario": "Validating Multiple Capping Discounts", "Test_Sce_Description": "Verify that the system correctly calculates the capping discount and applies it to the fare calculation when the customer has met a combination of multiple capping criteria (Daily, Weekly, Monthly). The system should take the Capping program of highest precedence and apply that discount to the fare."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Default Trip", "Use_Case_Name": "Virtual Card does not contain a Default O/D and the Customer Overrides the Default Trip prior to tapping-on", "Test_Scnario": "Validating Offline Device Functionality", "Test_Sce_Description": "Verify that the system correctly checks the local deny list if the media is on the local deny list when the device is offline and not connected to Accenture Ticketing Services. The latent transaction processor should store the tap till the device goes back online and connects to ATS."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Default Trip", "Use_Case_Name": "Virtual Card does not contain a Default O/D and the Customer Overrides the Default Trip prior to tapping-on", "Test_Scnario": "Validating ODA Check Failure", "Test_Sce_Description": "Verify that the system correctly returns the appropriate feedback when an Open Payments Media fails the ODA check. The Declined \u2013 Failed ODA Check screen should be provided to the cardholder."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Default Trip", "Use_Case_Name": "Virtual Card does not contain a Default O/D and the Customer Overrides the Default Trip prior to tapping-on", "Test_Scnario": "Validating Expiry Check Failure", "Test_Sce_Description": "Verify that the system correctly sends the tap like any other Open Payments Media to ATS when the Virtual Card media is a non-revenue media."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Default Trip", "Use_Case_Name": "Virtual Card does not contain a Default O/D and the Customer Overrides the Default Trip prior to tapping-on", "Test_Scnario": "Validating Default Trip Success Screen", "Test_Sce_Description": "Verify that the system correctly displays the default trip success screen when ATS returns the tap results stating that the current tap is associated with the Virtual Card\u2019s default trip."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Default Trip", "Use_Case_Name": "Virtual Card does not contain a Default O/D and the Customer Overrides the Default Trip prior to tapping-on", "Test_Scnario": "Validating Card Authentication Check Failure", "Test_Sce_Description": "Verify that the system correctly handles the scenario when a Virtual Card fails the Card Authentication check. The system should provide appropriate feedback to the cardholder."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Default Trip", "Use_Case_Name": "Tap a Virtual Card on online SA Tool where card is in good standing, but scratchpad blocked parameter needs to be updated", "Test_Scnario": "Virtual Card Tap on SA Tool", "Test_Sce_Description": "Verify that the Virtual Card is able to tap on the SA Tool successfully when the card is in good standing but the scratchpad blocked parameter needs to be updated. The device should provide appropriate feedback to the cardholder and the tap counter should be reset to 0 if it isn't already. The Virtual Card scratchpad should be updated to remove the block parameter and prioritize the accepted response from ATS."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Default Trip", "Use_Case_Name": "Tap a Virtual Card on online SA Tool where card is in good standing, but scratchpad blocked parameter needs to be updated", "Test_Scnario": "Virtual Card Media fails Card Authentication check", "Test_Sce_Description": "Verify that if the Virtual Card Media fails the Card Authentication check, the device returns the appropriate feedback. The device should perform the necessary validation and determine that the Virtual Card Media is unable to pass the checks. The Declined \u2013 Failed Card Authentication Check screen should be provided to the cardholder. An error should be captured and logged in the background when this occurs to help with troubleshooting the issue. This error should also be captured in the SOTI logs."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Default Trip", "Use_Case_Name": "Tap a Virtual Card on online SA Tool where card is in good standing, but scratchpad blocked parameter needs to be updated", "Test_Scnario": "Virtual Media has already tapped-on using an Online Device", "Test_Sce_Description": "Verify that if the cardholder taps-on again at an SA Tool at the same station within the SA Tool Tap-on anti-passback Window, whereby the initial device and secondary device tapped on were both online, the device provides the cardholder with the appropriate feedback. The device should send the tap to ATS which returns a response that the cardholder has already tapped on at the same station and is within the Tap-on anti-passback Window. The Declined \u2013 Already Tapped Screen should be provided to the cardholder."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Default Trip", "Use_Case_Name": "Tap a Virtual Card on online SA Tool where card is in good standing, but scratchpad blocked parameter needs to be updated", "Test_Scnario": "Virtual Card Media has already tapped-on using an Offline Device", "Test_Sce_Description": "Verify that if the SA Tool is not online and not connected to ATS, the device will collect offline tap details and once the device returns back online, offline taps will be sent to ATS via bulk upload. The device should check the latent transaction processor on the same device for a previous tap within the anti-passback window. The tap should be stored on the device till it is connected to ATS where the transactions will be reconciled. The Declined \u2013 Already Tapped Screen should be provided to the cardholder."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Default Trip", "Use_Case_Name": "Tap a Virtual Card on online SA Tool where card is in good standing, but scratchpad blocked parameter needs to be updated", "Test_Scnario": "Multiple NFC media are presented to the device at one time", "Test_Sce_Description": "Verify that if multiple NFC media are presented to the device at one time, the device will block all fare payment functionality. The Anti-Collision Error Screen should be provided to the cardholder."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Default Trip", "Use_Case_Name": "Tap a Virtual Card on online SA Tool where card is in good standing, but scratchpad blocked parameter needs to be updated", "Test_Scnario": "Tap a Virtual Card Media when SA Tool is in Out-of-Service state", "Test_Sce_Description": "Verify that if the Virtual Card Media is blocked, the right to travel is not conferred. The device should check the local hotlist and does not find the Virtual Card. The device should check the Virtual Card Scratchpad and determines the card blocked parameter is set to true. The Declined \u2013 Blocked Screen should be provided to the cardholder."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Default Trip", "Use_Case_Name": "Tap a Virtual Card on online SA Tool where card is in good standing, but scratchpad blocked parameter needs to be updated", "Test_Scnario": "Tap-off and Virtual Card Media\u2019s blocked parameter on the mobile wallet is enabled", "Test_Sce_Description": "Verify that if the Virtual Card Media is blocked in the wallet, there will not be an interaction with the device on an attempted tap. The device will not know a tap is attempted and will have no action."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Default Trip", "Use_Case_Name": "Tap a Virtual Card on online SA Tool where card is in good standing, but scratchpad blocked parameter needs to be updated", "Test_Scnario": "Virtual Card Media is tapped off an offline device and tap counter is greater than allowable offline taps", "Test_Sce_Description": "Verify that if the tap counter is greater than the allowable offline taps, the device should not allow the tap and provide the appropriate feedback to the cardholder."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Default Trip", "Use_Case_Name": "Virtual Card Media fails Card Authentication check", "Test_Scnario": "Virtual Card Media fails Card Authentication check", "Test_Sce_Description": "This scenario will test the functionality of the device when the Virtual Card Media fails the Card Authentication check. The device should perform the necessary validation and determine that the Virtual Card Media is unable to pass the checks. The Declined \u2013 Contact CLIENT Customer Service screen should be provided to the cardholder. An error should be captured and logged in the background when this occurs to help with troubleshooting the issue. This error should also be captured in the SOTI logs. The declined tap should be sent to ATS."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Default Trip", "Use_Case_Name": "Virtual Card Media fails Card Authentication check", "Test_Scnario": "Multiple NFC media are presented to the device at one time", "Test_Sce_Description": "This scenario will test the functionality of the device when multiple NFC media are presented at the same time. The device should block all fare payment functionality. The Anti-Collision Error Screen should be provided to the cardholder. An error should be captured and logged in the background when this occurs to help with troubleshooting the issue. This error should also be captured in the SOTI logs. The declined tap should be sent to ATS."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Default Trip", "Use_Case_Name": "Virtual Card Media fails Card Authentication check", "Test_Scnario": "Tap-off a Virtual Card Media when SA Tool is in Out-of-Service state", "Test_Sce_Description": "This scenario will test the functionality of the device when it is in Out-of-Service state. The device should display the Not in Service screen to the cardholder. The device should not detect the media and should remain in Out-of-Service State."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Default Trip", "Use_Case_Name": "Virtual Card Media fails Card Authentication check", "Test_Scnario": "Tap-off and an error has occurred", "Test_Sce_Description": "This scenario will test the functionality of the device when an error has occurred that does not cover the exception cases above. The device should record the tap. The Declined \u2013 See Customer Service Screen should be provided to the cardholder. An error should be captured and logged in the background when this occurs to help with troubleshooting the issue. This error should also be captured in the SOTI logs. The declined tap should be sent to ATS."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Default Trip", "Use_Case_Name": "Virtual Card Media fails Card Authentication check", "Test_Scnario": "Tap-off and Virtual Card Media is on the local hotlist and device is offline", "Test_Sce_Description": "This scenario will test the functionality of the device when the Virtual Card Media is on the local hotlist and the device is offline. The device should check the local hotlist and return a response that the media is denied. The right to travel should not be conferred. The Declined \u2013 Blocked Screen should be provided to the cardholder. The Device should update the blocking parameter on the Virtual Card Scratchpad to be enabled. The device should remove the Virtual Card from the hotlist. An error should be captured and logged in the background when this occurs to help with troubleshooting the issue. This error should also be captured in the SOTI logs."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Default Trip", "Use_Case_Name": "Virtual Card Media fails Card Authentication check", "Test_Scnario": "Tap-off and Virtual Card Media\u2019s blocked parameter on the scratchpad is enabled", "Test_Sce_Description": "This scenario will test the functionality of the device when the Virtual Card Media\u2019s scratchpad blocked parameter is set to enabled. The device should check the local hotlist and does not find the Virtual Card. The device should check the Virtual Card Scratchpad and determine the card blocked parameter is set to true. The right to travel should not be conferred. The Declined \u2013 Blocked Screen should be provided to the cardholder. An error should be captured and logged in the background when this occurs to help with troubleshooting the issue. This error should also be captured in the SOTI logs."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Default Trip", "Use_Case_Name": "Virtual Card Media fails Card Authentication check", "Test_Scnario": "Tap-off and Virtual Card Media\u2019s blocked parameter on the mobile wallet is enabled", "Test_Sce_Description": "This scenario will test the functionality of the device when the Virtual Card Media\u2019s mobile wallet blocked parameter is set to enabled. If the Virtual Card Media is blocked, the right to travel should not be conferred. If the Virtual Card Media is blocked in the wallet, there should not be an interaction with the device on an attempted tap. The device should not know a tap is attempted and should have no action."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Default Trip", "Use_Case_Name": "Virtual Card Media fails Card Authentication check", "Test_Scnario": "Virtual Card Media is tapped off an offline device and tap counter is greater than allowable offline taps", "Test_Sce_Description": "This scenario will test the functionality of the device when the Virtual Card Media is tapped off an offline device and tap counter is greater than the allowable offline taps. The device should not allow the tap and should display an error message."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Block/Unblock", "Use_Case_Name": "Tap-off and Virtual Card Media\u2019s blocked parameter on the mobile wallet is enabled", "Test_Scnario": "Virtual Card Media\u2019s scratchpad blocked parameter is enabled", "Test_Sce_Description": "Verify that when the Virtual Card Media\u2019s scratchpad blocked parameter is set to enabled, the right to travel is not conferred. The device should check the local hotlist and not find the Virtual Card. The device should also check the Virtual Card Scratchpad and determine the card blocked parameter is set to true. The Declined \u2013 Blocked Screen should be provided to the cardholder. An error should be captured and logged in the background when this occurs to help with troubleshooting the issue. This error should also be captured in the SOTI logs."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Block/Unblock", "Use_Case_Name": "Tap-off and Virtual Card Media\u2019s blocked parameter on the mobile wallet is enabled", "Test_Scnario": "Virtual Card Media\u2019s mobile wallet blocked parameter is enabled", "Test_Sce_Description": "Verify that when the Virtual Card Media\u2019s mobile wallet blocked parameter is set to enabled, the right to travel is not conferred. If the Virtual Card Media is blocked in the wallet, there should not be an interaction with the device on an attempted tap. The device should not know a tap is attempted and should have no action."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Block/Unblock", "Use_Case_Name": "Tap-off and Virtual Card Media\u2019s blocked parameter on the mobile wallet is enabled", "Test_Scnario": "Virtual Card Media is tapped off an offline device and tap counter is greater than allowable offline taps", "Test_Sce_Description": "Verify that when the tap counter is greater than the allowable offline taps, the right to travel is not conferred. The device should check the tap counter and if the tap counter limit has been reached, the offline device should reject the tap and the rider should not be permitted entry. An error should be captured and logged in the background when this occurs to help with troubleshooting the issue. This error should also be captured in the SOTI logs."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Block/Unblock", "Use_Case_Name": "Tap-off and Virtual Card Media\u2019s blocked parameter on the mobile wallet is enabled", "Test_Scnario": "Accepting Fare Payment from the E-Ticket", "Test_Sce_Description": "Verify that the operator can accept a fare payment from an e-Ticket. The operator should press the button on the side of the device to enable the barcode scanner. The E-Ticket holder should scan the QR Code on their E-Ticket against the SA tool\u2019s barcode reader to validate the Ticket in Fare Payment Mode. The device should perform a check to ensure that the E-Ticket meets timestamp window requirements. The device should perform a check against the local deny list and confirm that the current E-Ticket being validated is not on the deny list. The device should call the Bytemark API and receive a response that the E-Ticket is valid for travel."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Block/Unblock", "Use_Case_Name": "Tap-off and Virtual Card Media\u2019s blocked parameter on the mobile wallet is enabled", "Test_Scnario": "E-Ticket holder scans QR Code against the SA Tool reader and the SA Tool is Offline", "Test_Sce_Description": "Verify that when the device is offline, the call to the Bytemark backend will fail and be unable to retrieve details regarding the E-Ticket. The result should be cached in an offline database to be uploaded to Bytemark API when connection is resumed."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Block/Unblock", "Use_Case_Name": "Tap-off and Virtual Card Media\u2019s blocked parameter on the mobile wallet is enabled", "Test_Scnario": "E-Ticket holder scans Group QR Code at the SA Tool Barcode Reader", "Test_Sce_Description": "Verify that when an E-Ticket holder scans a Group QR Code at the SA Tool Barcode Reader, the device should be able to read and validate the Group QR Code. The device should provide the appropriate feedback to the user of a successful transaction."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Block/Unblock", "Use_Case_Name": "Virtual Card Media is tapped off an offline device and tap counter is greater than allowable offline taps", "Test_Scnario": "Offline Device Tap Counter Limit Reached", "Test_Sce_Description": "Verify that when the tap counter limit is reached on an offline device, the device rejects the tap and does not permit the rider entry. This test will involve simulating a scenario where the tap counter limit is reached and observing the device's response."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Block/Unblock", "Use_Case_Name": "Virtual Card Media is tapped off an offline device and tap counter is greater than allowable offline taps", "Test_Scnario": "Error Logging on Tap Counter Limit Reached", "Test_Sce_Description": "Verify that when the tap counter limit is reached on an offline device, an error is captured and logged in the background. This test will involve checking the error logs after the tap counter limit has been reached to ensure the error has been properly logged."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Block/Unblock", "Use_Case_Name": "Virtual Card Media is tapped off an offline device and tap counter is greater than allowable offline taps", "Test_Scnario": "SOTI Logs Update on Tap Counter Limit Reached", "Test_Sce_Description": "Verify that when the tap counter limit is reached on an offline device, the error is also captured in the SOTI logs. This test will involve checking the SOTI logs after the tap counter limit has been reached to ensure the error has been properly logged."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Block/Unblock", "Use_Case_Name": "Virtual Card Media is tapped off an offline device and tap counter is greater than allowable offline taps", "Test_Scnario": "Offline Tap Details Collection", "Test_Sce_Description": "Verify that when the SA Tool is offline and not connected to ATS, the device collects offline tap details. This test will involve simulating an offline scenario and checking if the device is collecting offline tap details."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Block/Unblock", "Use_Case_Name": "Virtual Card Media is tapped off an offline device and tap counter is greater than allowable offline taps", "Test_Scnario": "Offline Taps Bulk Upload on Return to Online", "Test_Sce_Description": "Verify that when the device returns back online, offline taps are sent to ATS via bulk upload. This test will involve simulating a return to online scenario and checking if the offline taps are being sent to ATS."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Block/Unblock", "Use_Case_Name": "Virtual Card Media is tapped off an offline device and tap counter is greater than allowable offline taps", "Test_Scnario": "Right to Travel Not Conferred on Tap Counter Limit Reached", "Test_Sce_Description": "Verify that when the tap counter limit is reached on an offline device, the right to travel is not conferred. This test will involve simulating a scenario where the tap counter limit is reached and observing if the right to travel is not conferred."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Block/Unblock", "Use_Case_Name": "Virtual Card Media is tapped off an offline device and tap counter is greater than allowable offline taps", "Test_Scnario": "Performance of Device on Tap Counter Limit Reached", "Test_Sce_Description": "Verify the performance of the device when the tap counter limit is reached. This test will involve simulating a scenario where the tap counter limit is reached and observing the performance of the device in terms of speed, response time, and efficiency."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Block/Unblock", "Use_Case_Name": "Virtual Card Media is tapped off an offline device and tap counter is greater than allowable offline taps", "Test_Scnario": "Security of Data on Tap Counter Limit Reached", "Test_Sce_Description": "Verify the security of data when the tap counter limit is reached. This test will involve simulating a scenario where the tap counter limit is reached and checking if the data is securely stored and transmitted without any breaches or leaks."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Block/Unblock", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance - Customer\u2019s Farecard is on the Deny List", "Test_Scnario": "Detecting Anonymous Farecard with Insufficient ePurse Balance", "Test_Sce_Description": "This scenario tests the functionality of the SA Tool application in detecting an anonymous Farecard with an ePurse balance less than the fare amount. The application should display a declined message to the customer and the transaction should not be conducted."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Block/Unblock", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance - Customer\u2019s Farecard is on the Deny List", "Test_Scnario": "Detecting Blocked Farecard", "Test_Sce_Description": "This scenario tests the functionality of the SA Tool application in detecting a blocked Farecard. The application should display a declined message to the customer and the transaction should not be conducted."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Block/Unblock", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance - Customer\u2019s Farecard is on the Deny List", "Test_Scnario": "Detecting Farecard on the Hotlist", "Test_Sce_Description": "This scenario tests the functionality of the SA Tool application in detecting a Farecard that is on the hotlist. The application should update the card\u2019s status to blocked and display a declined message to the customer. The transaction should not be conducted."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Block/Unblock", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance - Customer\u2019s Farecard is on the Deny List", "Test_Scnario": "Handling Low Battery Threshold During Payment", "Test_Sce_Description": "This scenario tests the functionality of the SA Tool application when the battery goes below the low battery threshold during payment. The application should switch to \u201cOut of Service\u201d mode if the low battery threshold is reached before Step 5."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Block/Unblock", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance - Customer\u2019s Farecard is on the Deny List", "Test_Scnario": "Detecting Non-Farecard", "Test_Sce_Description": "This scenario tests the functionality of the SA Tool application in detecting a card that is not a Farecard. The application should display the \u201cCard Read Error\u201d toast message for a short period of time."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Block/Unblock", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance - Customer\u2019s Farecard is on the Deny List", "Test_Scnario": "Detecting Farecard within the Anti-Passback Window", "Test_Sce_Description": "This scenario tests the functionality of the SA Tool application in detecting a Farecard that is within the Anti-Passback Window. The application should display a declined message to the customer and the transaction should not be conducted."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Block/Unblock", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance - Customer\u2019s Farecard is on the Deny List", "Test_Scnario": "Detecting Non-Activated Card", "Test_Sce_Description": "This scenario tests the functionality of the SA Tool application in detecting a non-activated card. The application should not confer the right to travel and provide the appropriate feedback to the Cardholder."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Block/Unblock", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance - Customer\u2019s Farecard is on the Deny List", "Test_Scnario": "Detecting Non-Recognizable Media", "Test_Sce_Description": "This scenario tests the functionality of the SA Tool application when a non-recognizable media is tapped on the tool. The application should display the applicable \u201cTry Another Card\u201d screen."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Block/Unblock", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance - Customer\u2019s Farecard is on the Deny List", "Test_Scnario": "Accepting Fare Payment from a Farecard using ePurse Balance", "Test_Sce_Description": "This scenario tests the functionality of the SA Tool application in accepting a fare payment from a Farecard using ePurse balance. The application should deduct the fare from the ePurse and update the Farecard accordingly."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Block/Unblock", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance - Customer\u2019s Farecard is on the Deny List", "Test_Scnario": "Handling Unreadable Farecard", "Test_Sce_Description": "This scenario tests the functionality of the SA Tool application when it detects a Farecard but fails to read it correctly. The application should indicate to the operator that the Farecard is unreadable."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Block/Unblock", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance - Customer\u2019s Farecard is on the Deny List", "Test_Scnario": "Handling Farecard with Non-Adult, Non-Child, Non-Discreet Concessions", "Test_Sce_Description": "This scenario tests the functionality of the SA Tool application when the customer\u2019s Farecard has a valid non-adult, non-child, non-discreet concession. The application should conduct the necessary validation checks and process the fare payment accordingly."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Block/Unblock", "Use_Case_Name": "Accepting Fare Payment from a Virtual Card using ePurse Balance - Battery goes below the low battery threshold during payment", "Test_Scnario": "Low battery threshold during payment", "Test_Sce_Description": "Verify that the application switches to 'Out of Service' mode when the low battery threshold is reached before Step 5 of the Main Use Case. The customer's fare payment should be processed as per Step 5 if the low battery threshold is not reached. After the payment processing, the application should switch to 'Out of Service' mode."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Block/Unblock", "Use_Case_Name": "Accepting Fare Payment from a Virtual Card using ePurse Balance - Battery goes below the low battery threshold during payment", "Test_Scnario": "Card not a Farecard", "Test_Sce_Description": "Verify that when a customer's card is not a Farecard, the SA Tool application does not respond and the device error message 'Card Read Error' is displayed for a short period of time."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Block/Unblock", "Use_Case_Name": "Accepting Fare Payment from a Virtual Card using ePurse Balance - Battery goes below the low battery threshold during payment", "Test_Scnario": "Card within the Anti-Passback Window", "Test_Sce_Description": "Verify that when a customer's card is within the Anti-Passback Window, the ATS detects that the Farecard fails the Anti-Passback checks. The SA Tool application should display a declined message to the customer and the transaction should not be conducted. The SA Tool should play the declined audio tone."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Block/Unblock", "Use_Case_Name": "Accepting Fare Payment from a Virtual Card using ePurse Balance - Battery goes below the low battery threshold during payment", "Test_Scnario": "Limited Period Pass outside of valid time while card is in overdraft", "Test_Sce_Description": "Verify that when the farecard has a valid Limited Period Pass product on it and the time at tap is occurring outside of the time limit of the Limited Period Pass Product and the farecard is in overdraft, the ATS detects that the Limited Period Pass is not valid at the current time, computes the value to be deducted from the e-Purse, and detects that farecard is in overdraft. The SA Tool application should display a declined message to the customer and the transaction should not be conducted. The SA Tool should play the declined audio tone."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Block/Unblock", "Use_Case_Name": "Accepting Fare Payment from a Virtual Card using ePurse Balance - Battery goes below the low battery threshold during payment", "Test_Scnario": "Virtual Card is Unreadable", "Test_Sce_Description": "Verify that when the SA Tool application detects the Virtual Card and fails to read it correctly, the SA Tool NFC reader detects the Virtual Card but is unable to read it. SA Tool application should indicate to the operator that the Virtual Card is unreadable."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Block/Unblock", "Use_Case_Name": "Accepting Fare Payment from a Virtual Card using ePurse Balance - Battery goes below the low battery threshold during payment", "Test_Scnario": "Concession other than Adult, Child, or Discreet Concessions on Virtual Card", "Test_Sce_Description": "Verify that when a customer's Virtual Card has a Valid Non-Adult, Non-Child, non-discreet concessions, the SA Tool shows the successful fare payment screen for non-adult concession, plays the successful fare payment audio tone for a concession other than Adult, Child, or Discreet Concessions."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Block/Unblock", "Use_Case_Name": "Accepting Fare Payment from a Virtual Card using ePurse Balance - Battery goes below the low battery threshold during payment", "Test_Scnario": "Positive ePurse Balance Less Than the Fare Amount", "Test_Sce_Description": "Verify that when a customer's ePurse balance is less than the fare amount, the device sends the tap to ATS for processing. ATS checks the online hotlist and completes the fare processing. ATS removes the fare from the Virtual Card e-Purse and puts the card into overdraft."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Block/Unblock", "Use_Case_Name": "Accepting Fare Payment from a Virtual Card using ePurse Balance - Battery goes below the low battery threshold during payment", "Test_Scnario": "Transaction within Intra-SP Transfer window", "Test_Sce_Description": "Verify that when a customer's Virtual Card has a valid transfer product, ATS will read that the Virtual Card contains a valid intra-agency transfer product and deduct $0 from the Virtual Card E-Purse."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Block/Unblock", "Use_Case_Name": "Accepting Fare Payment from a Virtual Card using ePurse Balance - Battery goes below the low battery threshold during payment", "Test_Scnario": "Transaction within Inter-SP Transfer window", "Test_Sce_Description": "Verify that when a customer's Virtual Card has a valid transfer product from other service provider and a transfer agreement between the service providers has been established, ATS will read that the Virtual Card contains a valid inter-agency transfer product and deduct $0 from the Virtual Card E-Purse."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Block/Unblock", "Use_Case_Name": "Accepting Fare Payment from a Virtual Card using ePurse Balance - Battery goes below the low battery threshold during payment", "Test_Scnario": "Customer requests Audio Messages", "Test_Sce_Description": "Verify that when a customer requests Audio Messages, the SA Tool application should be able to play the requested audio messages."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Block/Unblock", "Use_Case_Name": "Accepting Fare Payment from a Virtual Card using ePurse Balance \u2013 Customer taps a card that is not a Farecard", "Test_Scnario": "Virtual Card Unreadable", "Test_Sce_Description": "Test the scenario where the SA Tool NFC reader detects the Virtual Card but is unable to read it. The application should indicate to the operator that the Virtual Card is unreadable. The customer should be prompted to tap on the NFC reader again."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Block/Unblock", "Use_Case_Name": "Accepting Fare Payment from a Virtual Card using ePurse Balance \u2013 Customer taps a card that is not a Farecard", "Test_Scnario": "Non-Adult, Non-Child, non-discreet concessions", "Test_Sce_Description": "Test the scenario where the customer's Virtual Card has a Valid Non-Adult, Non-Child, non-discreet concessions. The SA Tool should show the successful fare payment screen for non-adult concession, and play the successful fare payment audio tone for a concession other than Adult, Child, or Discreet Concessions."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Block/Unblock", "Use_Case_Name": "Accepting Fare Payment from a Virtual Card using ePurse Balance \u2013 Customer taps a card that is not a Farecard", "Test_Scnario": "ePurse Balance Less Than the Fare Amount", "Test_Sce_Description": "Test the scenario where the customer's ePurse balance is less than the fare amount. The device should send the tap to ATS for processing. ATS should check the online hotlist and complete the fare processing. ATS should remove the fare from the Virtual Card e-Purse and put the card into overdraft."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Block/Unblock", "Use_Case_Name": "Accepting Fare Payment from a Virtual Card using ePurse Balance \u2013 Customer taps a card that is not a Farecard", "Test_Scnario": "Intra-SP Transfer window", "Test_Sce_Description": "Test the scenario where the customer's Virtual Card has a valid transfer product. ATS should read that the Virtual Card contains a valid intra-agency transfer product and deduct $0 from the Virtual Card E-Purse."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Block/Unblock", "Use_Case_Name": "Accepting Fare Payment from a Virtual Card using ePurse Balance \u2013 Customer taps a card that is not a Farecard", "Test_Scnario": "Inter-SP Transfer window", "Test_Sce_Description": "Test the scenario where the customer's Virtual Card has a valid transfer product from other service provider. ATS should read that the Virtual Card contains a valid inter-agency transfer product and deduct $0 from the Virtual Card E-Purse."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Block/Unblock", "Use_Case_Name": "Accepting Fare Payment from a Virtual Card using ePurse Balance \u2013 Customer taps a card that is not a Farecard", "Test_Scnario": "Customer requests Audio Messages", "Test_Sce_Description": "Test the scenario where the customer requests audio messages. The SA Tool should be able to provide audio messages to the customer."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Block/Unblock", "Use_Case_Name": "Accepting Fare Payment from a Virtual Card using ePurse Balance \u2013 Customer taps a card that is not a Farecard", "Test_Scnario": "Payment during Peak hours after reaching Off Peak Daily Cap outside of Transfer Window", "Test_Sce_Description": "Test the scenario where the fare payment is being made on the SA Tool during peak hours after previously reaching off peak daily cap (outside the transfer window). ATS should compute the fare and deduct the amount from the Virtual Card E-Purse."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Block/Unblock", "Use_Case_Name": "Accepting Fare Payment from a Virtual Card using ePurse Balance \u2013 Customer taps a card that is not a Farecard", "Test_Scnario": "Premium Service Route with Transfer where the Premium fare is higher than the Special Event fare", "Test_Sce_Description": "Test the scenario where a tap on a premium service route/location after previously riding on a Special Event service route (within the transfer window) results in a fare upgrade."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Block/Unblock", "Use_Case_Name": "Accepting Fare Payment from a Virtual Card using ePurse Balance \u2013 Customer taps a card that is not a Farecard", "Test_Scnario": "Premium Service Route with Transfer where the Premium fare is lower than the Special Event fare", "Test_Sce_Description": "Test the scenario where a tap on a premium service route/location after previously riding on a Special Event service route (within the transfer window) results in a free transfer."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Block/Unblock", "Use_Case_Name": "Accepting Fare Payment from a Virtual Card using ePurse Balance \u2013 Customer taps a card that is not a Farecard", "Test_Scnario": "Customer has a Valid Non-Adult Concession on their Farecard", "Test_Sce_Description": "Test the scenario where the customer's Farecard has a Valid Non-Adult concession. The SA Tool should be able to process the fare payment correctly."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Block/Unblock", "Use_Case_Name": "Accepting Fare Payment from a Virtual Card using ePurse Balance \u2013 Customer\u2019s Farecard is within the Anti-Passback Window", "Test_Scnario": "Virtual Card Unreadable", "Test_Sce_Description": "Test the scenario where the SA Tool NFC reader detects the Virtual Card but is unable to read it. The application should indicate to the operator that the Virtual Card is unreadable. The customer will tap on the NFC reader again. If the tap is successful, steps 4 \u2013 7 will be conducted. If the tap is unsuccessful, the SA Tool application will indicate to the operator that the CLIENT (Virtual) Card is unreadable."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Block/Unblock", "Use_Case_Name": "Accepting Fare Payment from a Virtual Card using ePurse Balance \u2013 Customer\u2019s Farecard is within the Anti-Passback Window", "Test_Scnario": "Non-Adult, Non-Child, non-discreet concessions", "Test_Sce_Description": "Test the scenario where the customer\u2019s Virtual Card has a Valid Non-Adult, Non-Child, non-discreet concessions. The SA Tool should show the successful fare payment screen for non-adult concession, plays the successful fare payment audio tone for a concession other than Adult, Child, or Discreet Concessions."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Block/Unblock", "Use_Case_Name": "Accepting Fare Payment from a Virtual Card using ePurse Balance \u2013 Customer\u2019s Farecard is within the Anti-Passback Window", "Test_Scnario": "ePurse balance is less than the fare amount", "Test_Sce_Description": "Test the scenario where the customer\u2019s ePurse balance is less than the fare amount. The device sends the tap to ATS for processing. ATS checks the online hotlist and completes the fare processing. ATS removes the fare from the Virtual Card e-Purse and puts the card into overdraft. The right to travel is conferred to the Cardholder by updating the Virtual Card accordingly. The device provides the appropriate feedback to the Cardholder of a successful transaction."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Block/Unblock", "Use_Case_Name": "Accepting Fare Payment from a Virtual Card using ePurse Balance \u2013 Customer\u2019s Farecard is within the Anti-Passback Window", "Test_Scnario": "Transaction is within Intra-SP Transfer window", "Test_Sce_Description": "Test the scenario where the customer\u2019s Virtual Card has a valid transfer product. ATS will read that the Virtual Card contains a valid intra-agency transfer product and deduct $0 from the Virtual Card E-Purse. The right to travel is conferred to the Cardholder by updating the Virtual Card, the device provides the appropriate feedback to the Cardholder of a successful transaction with a transfer."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Block/Unblock", "Use_Case_Name": "Accepting Fare Payment from a Virtual Card using ePurse Balance \u2013 Customer\u2019s Farecard is within the Anti-Passback Window", "Test_Scnario": "Transaction is within Inter-SP Transfer window", "Test_Sce_Description": "Test the scenario where the customer\u2019s Virtual Card has a valid transfer product from other service provider and a transfer agreement between the service providers has been established. ATS will read that the Virtual Card contains a valid inter-agency transfer product and deduct $0 from the Virtual Card E-Purse. The right to travel is conferred to the Cardholder by updating the Virtual Card; the device provides the appropriate feedback to the Cardholder of a successful transaction with a transfer."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Block/Unblock", "Use_Case_Name": "Accepting Fare Payment from a Virtual Card using ePurse Balance \u2013 Customer\u2019s Farecard is within the Anti-Passback Window", "Test_Scnario": "Payment during Peak hours after reaching Off Peak Daily Cap outside of Transfer Window", "Test_Sce_Description": "Test the scenario where the fare payment is being made on the SA Tool, Farecard has reached off peak Daily Cap Limit, Farecard has not reached Peak Daily Cap limit, Farecard is out of transfer window. ATS will compute the fare and deduct the amount from the Virtual Card E-Purse. This will be communicated back to the SA Tool."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Block/Unblock", "Use_Case_Name": "Accepting Fare Payment from a Virtual Card using ePurse Balance \u2013 Customer\u2019s Farecard is within the Anti-Passback Window", "Test_Scnario": "Premium Service Route with Transfer where the Premium fare is higher than the Special Event fare", "Test_Sce_Description": "Test the scenario where the fare payment is being made on the SA Tool, Service Class is Premium, Farecard has a valid Special Event Transfer Product, Tap is within Transfer Window. ATS will compute the fare and deduct the amount from the Virtual Card E-Purse. This will be communicated back to the SA Tool."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Block/Unblock", "Use_Case_Name": "Accepting Fare Payment from a Virtual Card using ePurse Balance \u2013 Customer\u2019s Farecard is within the Anti-Passback Window", "Test_Scnario": "Premium Service Route with Transfer where the Premium fare is lower than the Special Event fare", "Test_Sce_Description": "Test the scenario where the fare payment is being made on the SA Tool, Service Class is Premium, Farecard has a valid Special Event Transfer Product, Tap is within Transfer Window. ATS will compute the fare and deduct the amount from the Virtual Card E-Purse. This will be communicated back to the SA Tool."}, {"Function_Flow_Name": "Cardholder profile changes", "Sub_Flow_Name": "Block/Unblock", "Use_Case_Name": "Accepting Fare Payment from a Virtual Card using ePurse Balance \u2013 Customer\u2019s Farecard is within the Anti-Passback Window", "Test_Scnario": "Customer has a Valid Non-Adult Concession on their Farecard", "Test_Sce_Description": "Test the scenario where the customer\u2019s Farecard has a Valid Non-Adult concession. The SA Tool should show the successful fare payment screen for non-adult concession, plays the successful fare payment audio tone for a concession other than Adult, Child, or Discreet Concessions."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Farecard", "Use_Case_Name": "Farecard is locked", "Test_Scnario": "Farecard Locked", "Test_Sce_Description": "Verify that when the Farecard is locked, the right to travel is not conferred. The card reader should detect that the Farecard is locked and provide appropriate feedback to the Cardholder. An error should be captured and logged in the background when this occurs to help with troubleshooting the issue. This error should also be captured in the SOTI logs."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Farecard", "Use_Case_Name": "Farecard is locked", "Test_Scnario": "Non-Recognizable Media Tapped on SA Tool", "Test_Sce_Description": "Verify that when a user taps a card that is not recognizable to the reader, the SA Tool displays the applicable \u201cTry Another Card\u201d screen."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Farecard", "Use_Case_Name": "Farecard is locked", "Test_Scnario": "Cardholder Taps-Off SA Tool with Farecard", "Test_Sce_Description": "Verify that when a Cardholder ends a trip and taps the Farecard on the device Card Reader (CID), the device checks that the card is valid (i.e. able to communicate, is a Farecard, not locked, and not blocked). The device should deduct the appropriate final configured fare and provide the appropriate feedback to the Cardholder of a successful transaction and updates the Farecard accordingly."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Farecard", "Use_Case_Name": "Farecard is locked", "Test_Scnario": "Farecard in the Load Value List or Action List", "Test_Sce_Description": "Verify that if the Farecard is in the Load Value List or Action List, the Device processes the Load or Action Transaction prior to performing the Fare Validation. The device should provide the appropriate feedback to the Cardholder of a successful transaction in addition to the processing of a list item and updates the Farecard accordingly."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Farecard", "Use_Case_Name": "Farecard is locked", "Test_Scnario": "Farecard taps off on a Device after the tap-on occurred during a temporal class Supplement time", "Test_Sce_Description": "Verify that if the Farecard taps off on a Device after the tap-on occurred during a temporal class Supplement time, the right to travel is not conferred. The Device should provide the appropriate feedback to the Cardholder. An error should be captured and logged in the background when this occurs to help with troubleshooting the issue. This error should also be captured in the SOTI logs."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Farecard", "Use_Case_Name": "Farecard is locked", "Test_Scnario": "Accepting Fare Payment from a Farecard using ePurse Balance", "Test_Sce_Description": "Verify that when a customer asks to pay for the trip with their Farecard, the operator selects the payment function on the SA Tool application home screen. The SA Tool should display a prompt to tap the Farecard. The customer taps their Farecard on the NFC card reader on the SA Tool. The SA Tool should read the Farecard information and perform all the necessary validation checks. The device should compute the value to be deducted from the e-Purse and deduct the fare accordingly. The SA Tool should update the Farecard accordingly and display the successful fare payment screen. The SA Tool Device should play the successful fare payment audio tone."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Farecard", "Use_Case_Name": "Farecard is locked", "Test_Scnario": "Accepting Fare Payment from a Farecard using ePurse Balance - Customer\u2019s Farecard is Unreadable", "Test_Sce_Description": "Verify that if the SA Tool application detects the Farecard and fails to read it correctly, the SA Tool NFC reader detects the Farecard but is unable to read it. SA Tool application should indicate to the operator that the Farecard is unreadable. The customer should tap on the NFC reader again. If the tap is successful, steps 4 \u2013 9 should be conducted. If the tap is unsuccessful, the SA Tool application should indicate to the operator that the Farecard is unreadable."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Farecard", "Use_Case_Name": "Farecard is locked", "Test_Scnario": "Accepting Fare Payment from a Farecard using ePurse Balance - Customer has a Concession other than Adult, Child, or Discreet Concessions on their Farecard", "Test_Sce_Description": "Verify that if the Customer\u2019s Farecard has a Valid Non-Adult, Non-Child, non-discreet concessions, the SA Tool should handle this scenario correctly and provide appropriate feedback to the operator and the customer."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Farecard", "Use_Case_Name": "Cardholder Taps-Off on a SA Tool in a Fare-by-Zone TA with Farecard", "Test_Scnario": "Testing Non-Revenue farecard in training mode", "Test_Sce_Description": "Verify that the SA tool only accepts Non-Revenue farecard in the training mode and if the Non-Revenue card is tapped in the revenue mode, the device should display a declined HMI."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Farecard", "Use_Case_Name": "Cardholder Taps-Off on a SA Tool in a Fare-by-Zone TA with Farecard", "Test_Scnario": "Testing Farecard with Temporal Class Supplement", "Test_Sce_Description": "Verify that when a Farecard is tapped on a device during a time period that contains an associated Temporal Class Supplement, the Device should contain an HMI reflecting the Temporal Class Supplement, and process the Tap-On Transaction as a normal tap-on."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Farecard", "Use_Case_Name": "Cardholder Taps-Off on a SA Tool in a Fare-by-Zone TA with Farecard", "Test_Scnario": "Testing Farecard with Autoload Enabled", "Test_Sce_Description": "Verify that if the Fare causes the Farecard E-Purse Balance to cross the Auto-load threshold, the Farecard should have the Autoload amount automatically added to the E-Purse balance."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Farecard", "Use_Case_Name": "Cardholder Taps-Off on a SA Tool in a Fare-by-Zone TA with Farecard", "Test_Scnario": "Testing Farecard without Default O/D", "Test_Sce_Description": "Verify that if the Farecard with no Default O/D is tapped on while the device is in Override mode, the device should process the tap as a result tap-on."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Farecard", "Use_Case_Name": "Cardholder Taps-Off on a SA Tool in a Fare-by-Zone TA with Farecard", "Test_Scnario": "Testing Farecard with Audio Messages request", "Test_Sce_Description": "Verify that when a customer asks to pay for the trip with their Farecard and requests audio messages for the fare payment, the operator should enable audio mode and the corresponding audio message should be played to the customer in the default language of their Farecard."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Farecard", "Use_Case_Name": "Cardholder Taps-Off on a SA Tool in a Fare-by-Zone TA with Farecard", "Test_Scnario": "Testing Farecard validation checks at Tap-On", "Test_Sce_Description": "Verify that if the Farecard is tapped-off at the same location where tap-on occurred, the device should provide the cardholder with the appropriate feedback."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Farecard", "Use_Case_Name": "Cardholder Taps-Off on a SA Tool in a Fare-by-Zone TA with Farecard", "Test_Scnario": "Testing blocked Farecard", "Test_Sce_Description": "Verify that if the Farecard is blocked, the right to travel should not be conferred."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Farecard", "Use_Case_Name": "Cardholder Taps-Off on a SA Tool in a Fare-by-Zone TA with Farecard", "Test_Scnario": "Testing time since Tap-On Exceeds Max Travel Duration", "Test_Sce_Description": "Verify that if the time since tap-on exceeds the Max Travel Duration, then the Device should auto-settle the Underpayment and open a new trips."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Farecard", "Use_Case_Name": "Cardholder Taps-Off on a SA Tool in a Fare-by-Zone TA with Farecard", "Test_Scnario": "Testing multiple NFC media presented to the device", "Test_Sce_Description": "Verify that if multiple NFC media are presented to the device at one time, the device should block all fare payment functionality."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Farecard", "Use_Case_Name": "Cardholder Taps-Off on a SA Tool in a Fare-by-Zone TA with Farecard", "Test_Scnario": "Testing non-activated Farecard", "Test_Sce_Description": "Verify that if the Farecard is not activated and is tapped on the device, the transaction should be unsuccessful."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Farecard", "Use_Case_Name": "Cardholder Taps-Off on a SA Tool in a Fare-by-Zone TA with Farecard", "Test_Scnario": "Testing Farecard reading error", "Test_Sce_Description": "Verify that if a Cardholder taps Farecard on an SA Tool and a Card reading error occurs (e.g. Farecard is immediately removed from the card reader), the device should provide the appropriate feedback to the Cardholder."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Farecard", "Use_Case_Name": "Farecard is in the Load Value List or Action List", "Test_Scnario": "Load Value or Action Transaction Processing", "Test_Sce_Description": "Verify that the device correctly processes the Load or Action Transaction prior to continuing the validation Use Case. This includes checking if the right to travel is conferred to the Cardholder by updating the Farecard and if the device provides the appropriate feedback to the Cardholder of a successful transaction in addition to a List Item processing."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Farecard", "Use_Case_Name": "Farecard is in the Load Value List or Action List", "Test_Scnario": "Transfer Product Fare Calculation", "Test_Sce_Description": "Verify that the Tap-On Fare configured on the device as well as the Underpayment Value is correctly reduced to account for the Transfer Discount when a valid transfer product is contained on the Farecard."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Farecard", "Use_Case_Name": "Farecard is in the Load Value List or Action List", "Test_Scnario": "Default O/D Fare Processing", "Test_Sce_Description": "Verify that the Device correctly processes a full Fare-by-Zone transaction (both tap-on and tap-off) in case of a default O/D on the Farecard. This includes checking if the Device deducts the Full Fare value for the station-to-station trip accounting for all Fare considerations associated to the trip."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Farecard", "Use_Case_Name": "Farecard is in the Load Value List or Action List", "Test_Scnario": "Default O/D Override", "Test_Sce_Description": "Verify that the Device correctly overrides the default O/D contained on the Farecard and processes the tap as a regular tap-on when the customer requests the override of a Default Trip by interacting with the Device."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Farecard", "Use_Case_Name": "Farecard is in the Load Value List or Action List", "Test_Scnario": "Underpayment Deduction", "Test_Sce_Description": "Verify that the Device correctly deducts the Underpayment Value from the Farecard E-Purse prior to performing the Fare Validation when the Farecard has a value contained in the Underpayment Block."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Farecard", "Use_Case_Name": "Farecard is in the Load Value List or Action List", "Test_Scnario": "Non-Revenue Farecard Processing", "Test_Sce_Description": "Verify that the SA tool only accepts Non-Revenue farecard in the training mode and that the device displays a declined HMI when the Non-Revenue card is tapped in the revenue mode."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Farecard", "Use_Case_Name": "Farecard is in the Load Value List or Action List", "Test_Scnario": "Temporal Class Supplement Processing", "Test_Sce_Description": "Verify that the Device correctly processes the temporal class supplement in addition to the Base Fare when the Farecard is tapped on a device during a time period that contains an associated Temporal Class Supplement."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Farecard", "Use_Case_Name": "Farecard is in the Load Value List or Action List", "Test_Scnario": "Autoload Processing", "Test_Sce_Description": "Verify that the Device correctly detects that the Current E-Purse Balance \u2013 deducted Fare crosses the Autoload threshold, which triggers the Autoload amount to be added to the Farecard."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Farecard", "Use_Case_Name": "Farecard is in the Load Value List or Action List", "Test_Scnario": "Fare Type Discount Processing", "Test_Sce_Description": "Verify that the Device correctly displays the \u201cFare Payment with Fare type Discount\u201d HMI and accounts for the concession discount in the Fare when the Farecard with Fare type (either Universal or Specific) other than Default taps-off."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Farecard", "Use_Case_Name": "Farecard is in the Load Value List or Action List", "Test_Scnario": "Default Trip Override Prior to Tapping-Off", "Test_Sce_Description": "Verify that the Device correctly processes the override of the Default Trip when the customer requests the override prior to tapping-off."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Farecard", "Use_Case_Name": "Farecard taps off on a Device after the tap-on occurred during a temporal class Supplement time", "Test_Scnario": "Farecard Tapped-off at Same Location", "Test_Sce_Description": "Verify that the device provides the appropriate feedback when the Farecard is tapped-off at the same location where tap-on occurred. The device should detect that the cardholder has already tapped on at the same station and is within the Tap-on anti-passback Window. An error should be captured and logged in the background when this occurs to help with troubleshooting the issue."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Farecard", "Use_Case_Name": "Farecard taps off on a Device after the tap-on occurred during a temporal class Supplement time", "Test_Scnario": "Blocked Farecard", "Test_Sce_Description": "Verify that the right to travel is not conferred when the Farecard is blocked. The card reader should detect that the Farecard is blocked and the device should provide the appropriate feedback to the Cardholder. An error should be captured and logged in the background when this occurs to help with troubleshooting the issue."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Farecard", "Use_Case_Name": "Farecard taps off on a Device after the tap-on occurred during a temporal class Supplement time", "Test_Scnario": "Max Travel Duration Exceeded", "Test_Sce_Description": "Verify that the Device will auto-settle the Underpayment and open a new trip if the time since tap-on exceeds the Max Travel Duration. The device should determine that the Tap-On Time + Max Travel Duration < Current Time and Auto-settles the Underpayment and deducts the value from the Farecard E-Purse."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Farecard", "Use_Case_Name": "Farecard taps off on a Device after the tap-on occurred during a temporal class Supplement time", "Test_Scnario": "Multiple NFC Media Presented", "Test_Sce_Description": "Verify that the device will block all fare payment functionality if multiple NFC media are presented to the device at one time. The device should block all user functionality, presents Anti-Collision HMI to customer. An error should be captured and logged in the background when this occurs to help with troubleshooting the issue."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Farecard", "Use_Case_Name": "Farecard taps off on a Device after the tap-on occurred during a temporal class Supplement time", "Test_Scnario": "Non-Activated Farecard", "Test_Sce_Description": "Verify that the transaction is unsuccessful if the Farecard is not activated and is tapped on the device. The device should detect that the Farecard is not activated and provide feedback to the Cardholder of an unsuccessful transaction. An error should be captured and logged in the background when this occurs to help with troubleshooting the issue."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Farecard", "Use_Case_Name": "Farecard taps off on a Device after the tap-on occurred during a temporal class Supplement time", "Test_Scnario": "Card Reading Error", "Test_Sce_Description": "Verify that an error is captured and logged in the background when a Cardholder taps Farecard on an SA Tool and a Card reading error occurs (e.g. Farecard is immediately removed from the card reader)."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Farecard", "Use_Case_Name": "Farecard taps off on a Device after the tap-on occurred during a temporal class Supplement time", "Test_Scnario": "Temporal Class Supplement", "Test_Sce_Description": "Verify that the Device will contain an HMI reflecting the Temporal Class Supplement, and will process the Tap-On Transaction as a normal tap-on when Farecard is tapped on a device during a time period that contains an associated Temporal Class Supplement."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Farecard", "Use_Case_Name": "Farecard taps off on a Device after the tap-on occurred during a temporal class Supplement time", "Test_Scnario": "Autoload Enabled Farecard", "Test_Sce_Description": "Verify that the Farecard will have the Autoload amount automatically added to the E-Purse balance if the Fare causes the Farecard E-Purse Balance to cross the Auto-load threshold. The Device should detect that the Current E-Purse Balance \u2013 deducted Fare crosses the Autoload threshold, which triggers the Autoload amount to be added to the Farecard."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Farecard", "Use_Case_Name": "Farecard taps off on a Device after the tap-on occurred during a temporal class Supplement time", "Test_Scnario": "Default O/D Override", "Test_Sce_Description": "Verify that the device will process the tap as a result tap-on if the Farecard with no Default O/D is tapped on while the device is in Override mode. The device should provide the appropriate feedback to the Cardholder of a successful transaction in addition to notifying the customer that the Default Trip was overridden."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Farecard", "Use_Case_Name": "Farecard taps off on a Device after the tap-on occurred during a temporal class Supplement time", "Test_Scnario": "Audio Messages Request", "Test_Sce_Description": "Verify that the operator can enable audio mode when the customer asks to pay for the trip with their Farecard and requests audio messages for the fare payment. The operator should be able to change the volume level using the physical device buttons at the customer\u2019s discretion or proceed with the use case."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Farecard", "Use_Case_Name": "Farecard taps off on a Device after the tap-on occurred during a temporal class Supplement time", "Test_Scnario": "Farecard Validation Failure", "Test_Sce_Description": "Verify that the system handles the scenario where the Farecard fails validation checks at Tap-On. The system should provide appropriate feedback to the user and log the error for troubleshooting."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Tickets", "Use_Case_Name": "Accepting Fare Payment from a TICKET using Period Pass \u2013 Customer\u2019s TICKET Period Pass is not valid on the current date", "Test_Scnario": "Unreadable TICKET", "Test_Sce_Description": "Validate the system's behavior when the SA Tool NFC reader detects the TICKET but is unable to read it. The system should indicate to the operator that the TICKET is unreadable and log the error in the background for troubleshooting."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Tickets", "Use_Case_Name": "Accepting Fare Payment from a TICKET using Period Pass \u2013 Customer\u2019s TICKET Period Pass is not valid on the current date", "Test_Scnario": "Successful tap after unreadable TICKET", "Test_Sce_Description": "Validate the system's behavior when the customer taps the NFC reader again after an unreadable TICKET error. If the tap is successful, the system should proceed with steps 4 \u2013 9 as stated in the Main Use Case."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Tickets", "Use_Case_Name": "Accepting Fare Payment from a TICKET using Period Pass \u2013 Customer\u2019s TICKET Period Pass is not valid on the current date", "Test_Scnario": "Audio Messages Request", "Test_Sce_Description": "Validate the system's behavior when the customer requests audio messages for the fare payment. The operator should be able to enable audio mode and adjust the volume level using the physical device buttons at the customer\u2019s discretion."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Tickets", "Use_Case_Name": "Accepting Fare Payment from a TICKET using Period Pass \u2013 Customer\u2019s TICKET Period Pass is not valid on the current date", "Test_Scnario": "Premium or Special Event Service Class Route/Location on FLATFARE BASED SA Tool", "Test_Sce_Description": "Validate the system's behavior when the TICKET has a valid Period Pass and is tapped on route/location with Premium or Special Event Service Class. The system should not differentiate between service class for Tickets."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Tickets", "Use_Case_Name": "Accepting Fare Payment from a TICKET using Period Pass \u2013 Customer\u2019s TICKET Period Pass is not valid on the current date", "Test_Scnario": "Valid Child Concession on TICKET", "Test_Sce_Description": "Validate the system's behavior when the customer\u2019s TICKET has a Valid Child concession. The system should display the successful Child fare payment screen and play the successful fare payment audio tone for Child concession."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Tickets", "Use_Case_Name": "Accepting Fare Payment from a TICKET using Period Pass \u2013 Customer\u2019s TICKET Period Pass is not valid on the current date", "Test_Scnario": "Fare Payment Resulting from Failed Inspection", "Test_Sce_Description": "Validate the system's behavior when the operator inspects a customer\u2019s TICKET and determines that they have not paid a fare. The system should allow the operator to select the payment function on the SA Tool inspection results screen and record both the fare payment and inspection transactions."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Tickets", "Use_Case_Name": "Accepting Fare Payment from a TICKET using Period Pass \u2013 Customer\u2019s TICKET Period Pass is not valid on the current date", "Test_Scnario": "TICKET Period Pass is not valid on the current date", "Test_Sce_Description": "Validate the system's behavior when the customer has a period pass Ticket that is outside the validity period. The system should proceed with steps 1-7 as stated in the Main Use Case."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Tickets", "Use_Case_Name": "Accepting Fare Payment from a TICKET using Period Pass \u2013 Customer\u2019s TICKET Period Pass is not valid on the current date", "Test_Scnario": "Limited Period Pass outside of valid time with sufficient e-Purse balance", "Test_Sce_Description": "Validate the system's behavior when the Farecard has a valid Limited Period Pass and the current time is outside the time limits of the product, but the farecard has sufficient e-Purse balance to cover the transaction. The system should deduct the fare from the e-Purse."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Tickets", "Use_Case_Name": "Accepting Fare Payment from a TICKET using Period Pass \u2013 Customer\u2019s TICKET Period Pass is not valid on the current date", "Test_Scnario": "Expired Period Pass and ePurse Balance Less than the Fare Amount", "Test_Sce_Description": "Validate the system's behavior when the customer has an expired period pass and the ePurse balance is less than the fare amount. The system should display a declined message to the customer and not conduct the transaction."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Tickets", "Use_Case_Name": "Accepting Fare Payment from a TICKET using Period Pass \u2013 Customer\u2019s TICKET Period Pass is not valid on the current date", "Test_Scnario": "Blocked Virtual Card", "Test_Sce_Description": "Validate the system's behavior when the customer\u2019s Farecard is blocked. The system should display a declined message to the customer and not conduct the transaction."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Tickets", "Use_Case_Name": "Accepting Fare Payment from a TICKET using Period Pass \u2013 Customer\u2019s TICKET Period Pass is not valid on the current date", "Test_Scnario": "Virtual Card on the Deny List", "Test_Sce_Description": "Validate the system's behavior when the customer\u2019s Virtual Card is on the Deny List. The system should remove the card from the Deny List, set it to blocked, and display a declined message to the customer."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Tickets", "Use_Case_Name": "Accepting Fare Payment from a TICKET using Period Pass \u2013 Customer\u2019s TICKET Period Pass is not valid on the current date", "Test_Scnario": "Low battery threshold during payment", "Test_Sce_Description": "Validate the system's behavior when the battery goes below the low battery threshold during payment. The system should still be able to process the remote lists even after the SA Tool battery goes below the low battery threshold during a successful Farecard tap."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Tickets", "Use_Case_Name": "Accepting Fare Payment from a TICKET using Period Pass - Battery goes below the low battery threshold during payment", "Test_Scnario": "Testing Fare Payment Processing when Battery is Low", "Test_Sce_Description": "This scenario is to test if the application switches to 'Out of Service' mode when the low battery threshold is reached before Step 5. If not, the customer's fare payment should be processed as per Step 5 and then the application should switch to 'Out of Service' mode."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Tickets", "Use_Case_Name": "Accepting Fare Payment from a TICKET using Period Pass - Battery goes below the low battery threshold during payment", "Test_Scnario": "Testing Fare Payment with Non-Farecard", "Test_Sce_Description": "This scenario is to test if the SA Tool application does not respond and displays the device error message 'Card Read Error' when a customer taps a card that is not a Farecard."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Tickets", "Use_Case_Name": "Accepting Fare Payment from a TICKET using Period Pass - Battery goes below the low battery threshold during payment", "Test_Scnario": "Testing Fare Payment within Anti-Passback Window", "Test_Sce_Description": "This scenario is to test if the ATS detects that the Farecard fails the Anti-Passback checks when a customer's card is within the Anti-Passback Window. The SA Tool application should display a declined message to the customer and the transaction should not be conducted."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Tickets", "Use_Case_Name": "Accepting Fare Payment from a TICKET using Period Pass - Battery goes below the low battery threshold during payment", "Test_Scnario": "Testing Fare Payment with Limited Period Pass outside of valid time while card is in overdraft", "Test_Sce_Description": "This scenario is to test if the ATS detects that the Limited Period Pass is not valid at the current time, computes the value to be deducted from the e-Purse, and detects that farecard is in overdraft. The SA Tool application should display a declined message to the customer and the transaction should not be conducted."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Tickets", "Use_Case_Name": "Accepting Fare Payment from a TICKET using Period Pass - Battery goes below the low battery threshold during payment", "Test_Scnario": "Testing Fare Payment with Limited Period Pass within valid time", "Test_Sce_Description": "This scenario is to test if the fare payment is processed successfully when the farecard has a valid Limited Period Pass product on it and the time at tap is occurring within the time limit of the Limited Period Pass Product."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Tickets", "Use_Case_Name": "Accepting Fare Payment from a TICKET using Period Pass - Battery goes below the low battery threshold during payment", "Test_Scnario": "Testing Fare Payment with Limited Period Pass outside of valid time with sufficient e-Purse balance", "Test_Sce_Description": "This scenario is to test if the ATS detects that the Limited Period Pass is not valid at the current time, computes the value to be deducted from the e-Purse, and deducts the fare when the farecard has a valid Limited Period Pass product on it and the time at tap is occurring outside of the time limit of the Limited Period Pass Product."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Tickets", "Use_Case_Name": "Accepting Fare Payment from a TICKET using Period Pass - Battery goes below the low battery threshold during payment", "Test_Scnario": "Testing Fare Payment with Expired Period Pass and Insufficient ePurse Balance", "Test_Sce_Description": "This scenario is to test if the ATS detects the card is Anonymous and the ePurse Balance is less than the fare amount when a customer has an expired period pass and ePurse balance is less than the fare amount. The SA Tool application should display a declined message to the customer and the transaction should not be conducted."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Tickets", "Use_Case_Name": "Accepting Fare Payment from a TICKET using Period Pass - Battery goes below the low battery threshold during payment", "Test_Scnario": "Testing Fare Payment with Blocked Virtual Card", "Test_Sce_Description": "This scenario is to test if the ATS detects the card is blocked when a customer's Farecard is blocked. The SA Tool application should display a declined message to the customer and the transaction should not be conducted."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Tickets", "Use_Case_Name": "Accepting Fare Payment from a TICKET using Period Pass - Battery goes below the low battery threshold during payment", "Test_Scnario": "Testing Fare Payment with Virtual Card on the Deny List", "Test_Sce_Description": "This scenario is to test if the ATS detects the card is on the Deny List, removes the card from the Deny List and sets it to blocked. The SA Tool application should display a declined message to the customer and the transaction should not be conducted."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Tickets", "Use_Case_Name": "Accepting Fare Payment from a TICKET using Period Pass \u2013 Customer taps a card that is not CLIENT media", "Test_Scnario": "Unreadable TICKET", "Test_Sce_Description": "Verify that the SA Tool application correctly identifies and handles an unreadable TICKET. The application should indicate to the operator that the TICKET is unreadable and log the error in the background for troubleshooting."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Tickets", "Use_Case_Name": "Accepting Fare Payment from a TICKET using Period Pass \u2013 Customer taps a card that is not CLIENT media", "Test_Scnario": "Audio Messages Request", "Test_Sce_Description": "Verify that the SA Tool application correctly handles a customer's request for audio messages during fare payment. The operator should be able to enable audio mode and adjust the volume at the customer's discretion. The audio message should be played in the default language of the customer's Farecard."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Tickets", "Use_Case_Name": "Accepting Fare Payment from a TICKET using Period Pass \u2013 Customer taps a card that is not CLIENT media", "Test_Scnario": "Premium or Special Event Service Class Route/Location", "Test_Sce_Description": "Verify that the SA Tool application correctly identifies and accepts a valid Period Pass fare payment on a route/location with Premium or Special Event Service Class. The device should not differentiate between service class for Tickets."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Tickets", "Use_Case_Name": "Accepting Fare Payment from a TICKET using Period Pass \u2013 Customer taps a card that is not CLIENT media", "Test_Scnario": "Valid Child Concession", "Test_Sce_Description": "Verify that the SA Tool application correctly identifies and handles a TICKET with a Valid Child concession. The application should display the successful Child fare payment screen and play the successful fare payment audio tone for Child concession."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Tickets", "Use_Case_Name": "Accepting Fare Payment from a TICKET using Period Pass \u2013 Customer taps a card that is not CLIENT media", "Test_Scnario": "Fare Payment Resulting from Failed Inspection", "Test_Sce_Description": "Verify that the SA Tool application correctly handles a fare payment resulting from a failed inspection. The operator should be able to select the payment function on the SA Tool inspection results screen and the application should record both the fare payment and inspection transactions."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Tickets", "Use_Case_Name": "Accepting Fare Payment from a TICKET using Period Pass \u2013 Customer taps a card that is not CLIENT media", "Test_Scnario": "Invalid Period Pass", "Test_Sce_Description": "Verify that the SA Tool application correctly identifies and handles a TICKET with an invalid Period Pass. The application should display a declined message to the customer and play the declined audio tone."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Tickets", "Use_Case_Name": "Accepting Fare Payment from a TICKET using Period Pass \u2013 Customer taps a card that is not CLIENT media", "Test_Scnario": "Blocked Farecard", "Test_Sce_Description": "Verify that the SA Tool application correctly identifies and handles a blocked Farecard. The application should display a declined message to the customer and play the declined audio tone."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Tickets", "Use_Case_Name": "Accepting Fare Payment from a TICKET using Period Pass \u2013 Customer taps a card that is not CLIENT media", "Test_Scnario": "Farecard on the Hotlist", "Test_Sce_Description": "Verify that the SA Tool application correctly identifies and handles a Farecard on the hotlist. The application should update the card\u2019s status to blocked, display a declined message to the customer, and play the declined audio tone."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Tickets", "Use_Case_Name": "Accepting Fare Payment from a TICKET using Period Pass \u2013 Customer taps a card that is not CLIENT media", "Test_Scnario": "Low Battery Threshold", "Test_Sce_Description": "Verify that the SA Tool application correctly handles a situation where the battery goes below the low battery threshold during payment. The application should switch to \u201cOut of Service\u201d mode."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Tickets", "Use_Case_Name": "Accepting Fare Payment from a TICKET using Period Pass \u2013 Customer taps a card that is not CLIENT media", "Test_Scnario": "Non-Farecard Tap", "Test_Sce_Description": "Verify that the SA Tool application correctly identifies and handles a situation where a customer taps a card that is not a Farecard. The application should display the \u201cCard Read Error\u201d toast message for a short period of time."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Tickets", "Use_Case_Name": "Accepting Fare Payment from a TICKET using Period Pass \u2013 Customer taps a card that is not CLIENT media", "Test_Scnario": "Anti-Passback Window", "Test_Sce_Description": "Verify that the SA Tool application correctly identifies and handles a Farecard within the Anti-Passback Window. The application should display a declined message to the customer and play the declined audio tone."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Tickets", "Use_Case_Name": "Accepting Fare Payment from a TICKET using Period Pass \u2013 Customer taps a card that is not CLIENT media", "Test_Scnario": "Non-Activated Card", "Test_Sce_Description": "Verify that the SA Tool application correctly identifies and handles a non-activated card. The application should display a declined message to the customer and play the declined audio tone."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Tickets", "Use_Case_Name": "Accepting Fare Payment from a TICKET using Period Pass \u2013 Customer\u2019s TICKET is within the Anti-Passback Window", "Test_Scnario": "Anti-Passback Window Check", "Test_Sce_Description": "Verify that the system correctly identifies a ticket that is within the Anti-Passback Window and declines the transaction. The system should display a declined message to the customer and play a declined audio tone."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Tickets", "Use_Case_Name": "Accepting Fare Payment from a TICKET using Period Pass \u2013 Customer\u2019s TICKET is within the Anti-Passback Window", "Test_Scnario": "Non-Activated Ticket Check", "Test_Sce_Description": "Verify that the system correctly identifies a non-activated ticket and declines the transaction. The system should display a declined message to the customer and play a declined audio tone."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Tickets", "Use_Case_Name": "Accepting Fare Payment from a TICKET using Period Pass \u2013 Customer\u2019s TICKET is within the Anti-Passback Window", "Test_Scnario": "Expired Ticket Check", "Test_Sce_Description": "Verify that the system correctly identifies an expired ticket and declines the transaction. The system should display a declined message to the customer and play a declined audio tone."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Tickets", "Use_Case_Name": "Accepting Fare Payment from a TICKET using Period Pass \u2013 Customer\u2019s TICKET is within the Anti-Passback Window", "Test_Scnario": "Period Pass Validation", "Test_Sce_Description": "Verify that the system correctly identifies a ticket with a valid period pass and accepts the fare. The system should display a successful fare payment screen and play a successful fare payment audio tone."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Tickets", "Use_Case_Name": "Accepting Fare Payment from a TICKET using Period Pass \u2013 Customer\u2019s TICKET is within the Anti-Passback Window", "Test_Scnario": "Unreadable Ticket Check", "Test_Sce_Description": "Verify that the system correctly identifies an unreadable ticket and declines the transaction. The system should display a declined message to the customer and play a declined audio tone."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Tickets", "Use_Case_Name": "Accepting Fare Payment from a TICKET using Period Pass \u2013 Customer\u2019s TICKET is within the Anti-Passback Window", "Test_Scnario": "Limited Period Pass Time Validation", "Test_Sce_Description": "Verify that the system correctly identifies a ticket with a valid Limited Period Pass product on it and the current time is outside the time limits of the product, but the farecard has sufficient e-Purse balance to cover the transaction. The system should deduct the fare from the e-Purse and display a successful fare payment screen."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Tickets", "Use_Case_Name": "Accepting Fare Payment from a TICKET using Period Pass \u2013 Customer\u2019s TICKET is within the Anti-Passback Window", "Test_Scnario": "Expired Period Pass and Insufficient ePurse Balance Check", "Test_Sce_Description": "Verify that the system correctly identifies a ticket with an expired period pass and ePurse balance less than the fare amount. The system should decline the transaction and display a declined message to the customer."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Tickets", "Use_Case_Name": "Accepting Fare Payment from a TICKET using Period Pass \u2013 Customer\u2019s TICKET is within the Anti-Passback Window", "Test_Scnario": "Blocked Farecard Check", "Test_Sce_Description": "Verify that the system correctly identifies a blocked farecard and declines the transaction. The system should display a declined message to the customer and play a declined audio tone."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Tickets", "Use_Case_Name": "Accepting Fare Payment from a TICKET using Period Pass \u2013 Customer\u2019s TICKET is within the Anti-Passback Window", "Test_Scnario": "Deny List Check", "Test_Sce_Description": "Verify that the system correctly identifies a farecard on the Deny List, removes it from the list, sets it to blocked, and declines the transaction. The system should display a declined message to the customer and play a declined audio tone."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Tickets", "Use_Case_Name": "Accepting Fare Payment from a TICKET using Period Pass \u2013 Customer\u2019s TICKET is within the Anti-Passback Window", "Test_Scnario": "Low Battery Threshold Check", "Test_Sce_Description": "Verify that the system correctly identifies when the battery goes below the low battery threshold during a successful Farecard tap and still processes the remote lists. The system should display a successful fare payment screen and play a successful fare payment audio tone."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Tickets", "Use_Case_Name": "Accepting Fare Payment from a TICKET using Period Pass \u2013 Customer taps a non-activated CLIENT Ticket", "Test_Scnario": "Accepting Fare Payment from a TICKET using Period Pass \u2013 Customer taps a non-activated CLIENT Ticket", "Test_Sce_Description": "This scenario tests the functionality of the SA Tool when a customer taps a non-activated CLIENT Ticket. The SA Tool should detect that the TICKET is not activated and display a declined message to the customer. The transaction should not be conducted and the SA Tool should play the declined audio tone. After a configurable timeout, the app should return to the SA Tool application Tap Card screen."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Tickets", "Use_Case_Name": "Accepting Fare Payment from a TICKET using Period Pass \u2013 Customer taps a non-activated CLIENT Ticket", "Test_Scnario": "Accepting Fare Payment from a TICKET using Period Pass \u2013 Customer\u2019s TICKET Period Pass is not valid on the current date", "Test_Sce_Description": "This scenario tests the functionality of the SA Tool when a customer has a period pass Ticket that is outside the validity period. The SA Tool should detect that the TICKET Period Pass is not valid on the current date and display a declined message to the customer. The transaction should not be conducted and the SA Tool should play the declined audio tone. After a configurable timeout, the app should return to the SA Tool application Tap Card screen."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Tickets", "Use_Case_Name": "Accepting Fare Payment from a TICKET using Period Pass \u2013 Customer taps a non-activated CLIENT Ticket", "Test_Scnario": "Accepting Fare Payment from a TICKET using Period Pass - Battery goes below the low battery threshold during payment", "Test_Sce_Description": "This scenario tests the functionality of the SA Tool when the device battery goes below the low battery threshold during a successful TICKET tap. If the low battery threshold is reached before Step 5, the application should switch to \u201cOut of Service\u201d mode. Else, the customers fare payment should be processed as per Step 5. The application should then switch to \u201cOut of Service\u201d mode."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Tickets", "Use_Case_Name": "Accepting Fare Payment from a TICKET using Period Pass \u2013 Customer taps a non-activated CLIENT Ticket", "Test_Scnario": "Accepting Fare Payment from a TICKET using Period Pass \u2013 Customer taps a card that is not CLIENT media", "Test_Sce_Description": "This scenario tests the functionality of the SA Tool when a customer\u2019s card is not CLIENT media. The SA Tool application should not respond, but the device error message \u201cCard Read Error\u201d should be displayed for a short period of time."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Tickets", "Use_Case_Name": "Accepting Fare Payment from a TICKET using Period Pass \u2013 Customer taps a non-activated CLIENT Ticket", "Test_Scnario": "Accepting Fare Payment from a TICKET using Period Pass \u2013 Customer\u2019s TICKET is within the Anti-Passback Window", "Test_Sce_Description": "This scenario tests the functionality of the SA Tool when a customer\u2019s card is within the Anti-Passback Window. The device should detect that the TICKET fails the Anti-Passback checks and display a declined message the customer. The transaction should not be conducted and the SA Tool should play the declined audio tone. After a configurable timeout, the app should return to the SA Tool application Tap Card screen."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Tickets", "Use_Case_Name": "Accepting Fare Payment from a TICKET using Period Pass \u2013 Customer taps a non-activated CLIENT Ticket", "Test_Scnario": "Accepting Fare Payment from a TICKET using Period Pass \u2013 Customer taps an expired Ticket", "Test_Sce_Description": "This scenario tests the functionality of the SA Tool when a customer\u2019s Ticket is expired. The device should detect that the TICKET is expired and display a declined message the customer. The transaction should not be conducted and the SA Tool should play the declined audio tone. After a configurable timeout, the app should return to the SA Tool application Tap Card screen."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Tickets", "Use_Case_Name": "Accepting Fare Payment from a TICKET using Period Pass \u2013 Customer taps an expired Ticket", "Test_Scnario": "Accepting Fare Payment with Valid Limited Period Pass", "Test_Sce_Description": "This scenario tests the functionality of the system when a fare payment is made with a valid Limited Period Pass. The system should successfully accept the payment and deduct the fare from the pass."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Tickets", "Use_Case_Name": "Accepting Fare Payment from a TICKET using Period Pass \u2013 Customer taps an expired Ticket", "Test_Scnario": "Accepting Fare Payment with Limited Period Pass Outside Valid Time", "Test_Sce_Description": "This scenario tests the system's ability to handle fare payments made with a Limited Period Pass that is outside its valid time. The system should detect the invalidity of the pass and deduct the fare from the e-Purse balance instead."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Tickets", "Use_Case_Name": "Accepting Fare Payment from a TICKET using Period Pass \u2013 Customer taps an expired Ticket", "Test_Scnario": "Fare Payment with Expired Period Pass and Insufficient ePurse Balance", "Test_Sce_Description": "This scenario tests the system's response when a fare payment is attempted with an expired period pass and the ePurse balance is less than the fare amount. The system should decline the transaction and display a declined message to the customer."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Tickets", "Use_Case_Name": "Accepting Fare Payment from a TICKET using Period Pass \u2013 Customer taps an expired Ticket", "Test_Scnario": "Fare Payment with Blocked Virtual Card", "Test_Sce_Description": "This scenario tests the system's response when a fare payment is attempted with a blocked virtual card. The system should detect the blocked status of the card, decline the transaction, and display a declined message to the customer."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Tickets", "Use_Case_Name": "Accepting Fare Payment from a TICKET using Period Pass \u2013 Customer taps an expired Ticket", "Test_Scnario": "Fare Payment with Virtual Card on Deny List", "Test_Sce_Description": "This scenario tests the system's response when a fare payment is attempted with a virtual card that is on the Deny List. The system should remove the card from the Deny List, set it to blocked, decline the transaction, and display a declined message to the customer."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Tickets", "Use_Case_Name": "Accepting Fare Payment from a TICKET using Period Pass \u2013 Customer taps an expired Ticket", "Test_Scnario": "Fare Payment During Low Battery", "Test_Sce_Description": "This scenario tests the system's ability to handle fare payments when the battery goes below the low battery threshold during payment. The system should switch to 'Out of Service' mode after processing the fare payment."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Tickets", "Use_Case_Name": "Accepting Fare Payment from a TICKET using Period Pass \u2013 Customer taps an expired Ticket", "Test_Scnario": "Fare Payment with Non-Activated Card", "Test_Sce_Description": "This scenario tests the system's response when a fare payment is attempted with a non-activated card. The system should display a 'Card Read Error' message."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Tickets", "Use_Case_Name": "Accepting Fare Payment from a TICKET using Period Pass \u2013 Customer taps an expired Ticket", "Test_Scnario": "Fare Payment with Card in Anti-Passback Window", "Test_Sce_Description": "This scenario tests the system's response when a fare payment is attempted with a card that is within the Anti-Passback Window. The system should decline the transaction and display a declined message to the customer."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Tickets", "Use_Case_Name": "Accepting Fare Payment from a TICKET using Period Pass - Customer\u2019s TICKET is Unreadable", "Test_Scnario": "Unreadable TICKET detection", "Test_Sce_Description": "Verify that the SA Tool application correctly detects an unreadable TICKET and displays an appropriate error message to the operator."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Tickets", "Use_Case_Name": "Accepting Fare Payment from a TICKET using Period Pass - Customer\u2019s TICKET is Unreadable", "Test_Scnario": "Error logging for unreadable TICKET", "Test_Sce_Description": "Verify that when a TICKET is unreadable, an error is captured and logged in the background to aid in troubleshooting. This error should also be captured in the SOTI logs."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Tickets", "Use_Case_Name": "Accepting Fare Payment from a TICKET using Period Pass - Customer\u2019s TICKET is Unreadable", "Test_Scnario": "Successful tap after unreadable TICKET", "Test_Sce_Description": "Verify that if a customer taps their TICKET again after an unreadable TICKET error, and the tap is successful, steps 4 \u2013 9 of the Main Use Case are conducted."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Tickets", "Use_Case_Name": "Accepting Fare Payment from a TICKET using Period Pass - Customer\u2019s TICKET is Unreadable", "Test_Scnario": "Audio messages request handling", "Test_Sce_Description": "Verify that when a customer requests audio messages for the fare payment, the operator can enable audio mode and adjust the volume level using the physical device buttons at the customer\u2019s discretion."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Tickets", "Use_Case_Name": "Accepting Fare Payment from a TICKET using Period Pass - Customer\u2019s TICKET is Unreadable", "Test_Scnario": "Audio message language selection", "Test_Sce_Description": "Verify that the audio message is played to the customer in the default language of their Farecard."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Tickets", "Use_Case_Name": "Accepting Fare Payment from a TICKET using Period Pass - Customer\u2019s TICKET is Unreadable", "Test_Scnario": "Handling of valid Period Pass on Premium or Special Event Service Class Route/Location", "Test_Sce_Description": "Verify that the SA Tool correctly identifies that the customer\u2019s Period Pass is valid and accepts the period pass fare payment on a Premium or Special Event Service Class Route/Location."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Tickets", "Use_Case_Name": "Accepting Fare Payment from a TICKET using Period Pass - Customer\u2019s TICKET is Unreadable", "Test_Scnario": "Handling of Valid Child Concession", "Test_Sce_Description": "Verify that when a Valid Child Concession is found on a customer\u2019s TICKET, the SA Tool displays the successful Child fare payment screen and plays the successful fare payment audio tone for Child concession."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Tickets", "Use_Case_Name": "Accepting Fare Payment from a TICKET using Period Pass - Customer\u2019s TICKET is Unreadable", "Test_Scnario": "Fare Payment Resulting from Failed Inspection", "Test_Sce_Description": "Verify that when the operator inspects a customer\u2019s TICKET and determines that they have not paid a fare, the SA Tool records both the fare payment and inspection transactions."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Tickets", "Use_Case_Name": "Accepting Fare Payment from a TICKET using Period Pass - Customer\u2019s TICKET is Unreadable", "Test_Scnario": "Handling of TICKET Period Pass not valid on the current date", "Test_Sce_Description": "Verify that when a customer has a period pass TICKET that is outside the validity period, the SA Tool correctly identifies this and handles it according to the specified process."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Tickets", "Use_Case_Name": "Accepting Fare Payment from a TICKET using Period Pass - Customer\u2019s TICKET is Unreadable", "Test_Scnario": "Performance of SA Tool with multiple TICKET taps", "Test_Sce_Description": "Verify that the SA Tool application maintains its performance and does not crash or slow down significantly when multiple TICKET taps are performed in quick succession."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Tickets", "Use_Case_Name": "Accepting Fare Payment from a TICKET using Period Pass - Customer\u2019s TICKET is Unreadable", "Test_Scnario": "Security of SA Tool application", "Test_Sce_Description": "Verify that the SA Tool application has robust security measures in place to prevent unauthorized access or manipulation of fare payment data."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Tickets", "Use_Case_Name": "Accepting Fare Payment from a TICKET using Period Pass \u2013 Customer requests Audio Messages", "Test_Scnario": "Audio Messages Request", "Test_Sce_Description": "Verify that when a customer requests audio messages for fare payment, the system correctly enables audio mode and plays the corresponding audio message in the default language of their Farecard."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Tickets", "Use_Case_Name": "Accepting Fare Payment from a TICKET using Period Pass \u2013 Customer requests Audio Messages", "Test_Scnario": "Volume Adjustment", "Test_Sce_Description": "Verify that the operator can adjust the volume level using the physical device buttons at the customer\u2019s discretion. Ensure that a volume adjustment bar appears while the volume is being adjusted and times out automatically."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Tickets", "Use_Case_Name": "Accepting Fare Payment from a TICKET using Period Pass \u2013 Customer requests Audio Messages", "Test_Scnario": "Volume Level Reset", "Test_Sce_Description": "Verify that the volume level returns to the device default after the use case is completed."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Tickets", "Use_Case_Name": "Accepting Fare Payment from a TICKET using Period Pass \u2013 Customer requests Audio Messages", "Test_Scnario": "Screen Display After Audio Ends", "Test_Sce_Description": "Verify that after the audio message ends, the screen returns to the application Tap Card screen."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Tickets", "Use_Case_Name": "Accepting Fare Payment from a TICKET using Period Pass \u2013 Customer requests Audio Messages", "Test_Scnario": "Fare Payment with Period Pass", "Test_Sce_Description": "Verify that the system correctly computes and deducts the Upgrade fare when the Farecard has a valid Period Pass where the Service class fare value is lower than the current route/location Service Class fare value."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Tickets", "Use_Case_Name": "Accepting Fare Payment from a TICKET using Period Pass \u2013 Customer requests Audio Messages", "Test_Scnario": "Fare Payment with Higher Value Period Pass", "Test_Sce_Description": "Verify that the system correctly identifies that the customer\u2019s Period Pass is valid and accepts the period pass fare payment when the Farecard has a valid Period Pass where the Service class fare value is greater than the current route/location Service Class fare value."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Tickets", "Use_Case_Name": "Accepting Fare Payment from a TICKET using Period Pass \u2013 Customer requests Audio Messages", "Test_Scnario": "Fare Payment with Limited Period Pass", "Test_Sce_Description": "Verify that the system correctly accepts the fare payment when the farecard has a valid Limited Period Pass product on it and the time at tap is occurring within the time limit of the Limited Period Pass Product."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Tickets", "Use_Case_Name": "Accepting Fare Payment from a TICKET using Period Pass \u2013 Customer requests Audio Messages", "Test_Scnario": "Fare Payment with Limited Period Pass Outside Valid Time", "Test_Sce_Description": "Verify that the system correctly computes and deducts the fare from the e-Purse balance when the farecard has a valid Limited Period Pass product on it and the time at tap is occurring outside of the time limit of the Limited Period Pass Product."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Tickets", "Use_Case_Name": "Accepting Fare Payment from a TICKET using Period Pass \u2013 Customer requests Audio Messages", "Test_Scnario": "Fare Payment from Unreadable TICKET", "Test_Sce_Description": "Verify that the system correctly indicates to the operator that the TICKET is unreadable when the SA Tool application detects the TICKET and fails to read it correctly."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Tickets", "Use_Case_Name": "Accepting Fare Payment from a TICKET using Period Pass \u2013 Customer requests Audio Messages", "Test_Scnario": "Fare Payment from TICKET with Invalid Period Pass", "Test_Sce_Description": "Verify that the system correctly indicates to the operator that the TICKET Period Pass is not valid when the customer has a period pass Ticket that is outside the validity period."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Tickets", "Use_Case_Name": "Accepting Fare Payment from a TICKET using Period Pass \u2013 Premium or Special Event Service Class Route/Location on FLATFARE BASED SA Tool", "Test_Scnario": "Fare Payment on FLATFARE BASED SA Tool", "Test_Sce_Description": "Verify that the fare payment is being made on the FLATFARE BASED SA Tool with a valid Transfer Product and within the Transfer Window. The Service Class should be Premium or Special Event."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Tickets", "Use_Case_Name": "Accepting Fare Payment from a TICKET using Period Pass \u2013 Premium or Special Event Service Class Route/Location on FLATFARE BASED SA Tool", "Test_Scnario": "Valid Child Concession on TICKET", "Test_Sce_Description": "Verify that the SA Tool correctly identifies a valid Child Concession on the customer's TICKET and displays the successful Child fare payment screen along with the successful fare payment audio tone for Child concession."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Tickets", "Use_Case_Name": "Accepting Fare Payment from a TICKET using Period Pass \u2013 Premium or Special Event Service Class Route/Location on FLATFARE BASED SA Tool", "Test_Scnario": "Fare Payment Resulting from Failed Inspection", "Test_Sce_Description": "Verify that when the operator inspects a customer\u2019s TICKET and determines that they have not paid a fare, the operator can select the payment function on the SA Tool inspection results screen. The SA Tool should record both the fare payment and inspection transactions."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Tickets", "Use_Case_Name": "Accepting Fare Payment from a TICKET using Period Pass \u2013 Premium or Special Event Service Class Route/Location on FLATFARE BASED SA Tool", "Test_Scnario": "TICKET with no Ride Balance", "Test_Sce_Description": "Verify that when the customer\u2019s ride balance is empty, the SA Tool detects the Ride Balance is empty and displays a declined message to the customer. The transaction should not be conducted."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Tickets", "Use_Case_Name": "Accepting Fare Payment from a TICKET using Period Pass \u2013 Premium or Special Event Service Class Route/Location on FLATFARE BASED SA Tool", "Test_Scnario": "Low Battery Threshold during Payment", "Test_Sce_Description": "Verify that if the low battery threshold is reached before Step 5, the application switches to \u201cOut of Service\u201d mode. If not, the customers fare payment is processed as per Step 5 and then the application switches to \u201cOut of Service\u201d mode."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Tickets", "Use_Case_Name": "Accepting Fare Payment from a TICKET using Period Pass \u2013 Premium or Special Event Service Class Route/Location on FLATFARE BASED SA Tool", "Test_Scnario": "Non-CLIENT Media Card Tap", "Test_Sce_Description": "Verify that when a customer taps a card that is not CLIENT media, the SA Tool application does not respond, but the device error message \u201cCard Read Error\u201d is displayed for a short period of time."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Tickets", "Use_Case_Name": "Accepting Fare Payment from a TICKET using Period Pass \u2013 Premium or Special Event Service Class Route/Location on FLATFARE BASED SA Tool", "Test_Scnario": "TICKET within the Anti-Passback Window", "Test_Sce_Description": "Verify that when the customer\u2019s Ticket is within the Anti-Passback Window, the device detects that the TICKET fails the Anti-Passback checks and displays a declined message to the customer. The transaction should not be conducted."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Tickets", "Use_Case_Name": "Accepting Fare Payment from a TICKET using Period Pass \u2013 Premium or Special Event Service Class Route/Location on FLATFARE BASED SA Tool", "Test_Scnario": "Non-Activated Ticket Tap", "Test_Sce_Description": "Verify that when a customer taps a non-activated Ticket, the SA Tool application does not respond, but the device error message \u201cCard Read Error\u201d is displayed for a short period of time."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Tickets", "Use_Case_Name": "Accepting Fare Payment from a TICKET using Period Pass \u2013 Premium or Special Event Service Class Route/Location on FLATFARE BASED SA Tool", "Test_Scnario": "Fare Payment with Period Pass", "Test_Sce_Description": "Verify that when the fare payment is being made on the SA Tool with a valid Period Pass where the Service class fare value is greater than the current route/location Service Class fare value, the SA Tool identifies that the customer\u2019s Period Pass is valid and accepts the period pass fare payment."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Tickets", "Use_Case_Name": "Accepting Fare Payment from a TICKET using Period Pass \u2013 Premium or Special Event Service Class Route/Location on FLATFARE BASED SA Tool", "Test_Scnario": "Limited Period Pass", "Test_Sce_Description": "Verify that when the farecard has a valid Limited Period Pass product on it and the time at tap is occurring within the time limit of the Limited Period Pass Product, the SA Tool accepts the fare payment."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Tickets", "Use_Case_Name": "Accepting Fare Payment from a TICKET using Period Pass \u2013 Premium or Special Event Service Class Route/Location on FLATFARE BASED SA Tool", "Test_Scnario": "Limited Period Pass outside of valid time with sufficient e-Purse balance", "Test_Sce_Description": "Verify that when the farecard has a valid Limited Period Pass product on it and the time at tap is occurring outside of the time limit of the Limited Period Pass Product, the SA Tool detects that the Limited Period Pass is not valid at the current time, computes the value to be deducted from the e-Purse, and deducts the fare."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Tickets", "Use_Case_Name": "Accepting Fare Payment from a TICKET using Period Pass \u2013 Premium or Special Event Service Class Route/Location on FLATFARE BASED SA Tool", "Test_Scnario": "Blocked Farecard", "Test_Sce_Description": "Verify that when the customer\u2019s Farecard is blocked, the SA Tool application does not respond, but the device error message \u201cCard Read Error\u201d is displayed for a short period of time."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Tickets", "Use_Case_Name": "Accepting Fare Payment from a TICKET using Period Pass - Customer has a Valid Child Concession on their CLIENT Ticket", "Test_Scnario": "Validating Non-Adult, Non-Child Concession", "Test_Sce_Description": "Verify that the SA Tool correctly identifies and processes a valid Non-Adult, Non-Child concession on the customer's TICKET. The tool should play the successful fare payment audio tone for a concession other than Adult or Child."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Tickets", "Use_Case_Name": "Accepting Fare Payment from a TICKET using Period Pass - Customer has a Valid Child Concession on their CLIENT Ticket", "Test_Scnario": "Validating Transfer Product", "Test_Sce_Description": "Verify that the SA Tool correctly identifies a valid transfer product on the customer's TICKET and computes the free transfer. The tool should follow the Transfer Product Processing rules as stated in [R6]."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Tickets", "Use_Case_Name": "Accepting Fare Payment from a TICKET using Period Pass - Customer has a Valid Child Concession on their CLIENT Ticket", "Test_Scnario": "Audio Messages Request", "Test_Sce_Description": "Verify that the SA Tool correctly handles a customer's request for audio messages during fare payment. The operator should be able to enable audio mode and adjust the volume level using the physical device buttons. The audio message should be played in the default language of the customer's Farecard."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Tickets", "Use_Case_Name": "Accepting Fare Payment from a TICKET using Period Pass - Customer has a Valid Child Concession on their CLIENT Ticket", "Test_Scnario": "Premium Service or Special Route/Location on FLATFARE BASED SA Tool", "Test_Sce_Description": "Verify that the SA Tool correctly processes a Fixed Ride Ticket tap on a premium service or special route/location, resulting in a regular ride balance fare payment and Transfer Product creation. The device should not differentiate between service class for CLIENT Ticket."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Tickets", "Use_Case_Name": "Accepting Fare Payment from a TICKET using Period Pass - Customer has a Valid Child Concession on their CLIENT Ticket", "Test_Scnario": "Premium Service or Special Route/Location with Fare Upgrade on FLATFARE BASED SA Tool", "Test_Sce_Description": "Verify that the SA Tool correctly processes a Ticket tap on a premium service or special event route/location after previously riding on a regular, premium, or special event route, resulting in a free transfer. The device should not differentiate between service class for CLIENT Ticket."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Tickets", "Use_Case_Name": "Accepting Fare Payment from a TICKET using Period Pass - Customer has a Valid Child Concession on their CLIENT Ticket", "Test_Scnario": "Valid Child Concession on CLIENT Ticket", "Test_Sce_Description": "Verify that the SA Tool correctly identifies and processes a Valid Child concession on the customer's CLIENT Ticket."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Tickets", "Use_Case_Name": "Accepting Fare Payment from a TICKET using Period Pass - Customer has a Valid Child Concession on their CLIENT Ticket", "Test_Scnario": "Period Pass with Higher Service Class Fare Value", "Test_Sce_Description": "Verify that the SA Tool correctly identifies and accepts the period pass fare payment when the Farecard has a valid Period Pass where the Service class fare value is greater than the current route/location Service Class fare value."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Tickets", "Use_Case_Name": "Accepting Fare Payment from a TICKET using Period Pass - Customer has a Valid Child Concession on their CLIENT Ticket", "Test_Scnario": "Limited Period Pass", "Test_Sce_Description": "Verify that the SA Tool correctly identifies and processes a fare payment when the farecard has a valid Limited Period Pass product on it and the current time is within the time limit of the Limited Period Pass Product."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Tickets", "Use_Case_Name": "Accepting Fare Payment from a TICKET using Period Pass - Customer has a Valid Child Concession on their CLIENT Ticket", "Test_Scnario": "Limited Period Pass outside of valid time with sufficient e-Purse balance", "Test_Sce_Description": "Verify that the SA Tool correctly identifies that the Limited Period Pass is not valid at the current time, computes the value to be deducted from the e-Purse, and deducts the fare when the farecard has a valid Limited Period Pass product on it and the current time is outside the time limit of the Limited Period Pass Product."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Tickets", "Use_Case_Name": "Accepting Fare Payment from a TICKET using Period Pass - Customer has a Valid Child Concession on their CLIENT Ticket", "Test_Scnario": "Valid Child Concession on Farecard", "Test_Sce_Description": "Verify that the SA Tool correctly identifies and processes a Valid Child concession on the customer's Farecard. The tool should display the successful Child Transit Pass fare payment screen and play the successful fare payment audio tone for Child concession."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Tickets", "Use_Case_Name": "Accepting Fare Payment from a TICKET using Period Pass - Customer has a Valid Child Concession on their CLIENT Ticket", "Test_Scnario": "Fare Payment Resulting from Failed Inspection", "Test_Sce_Description": "Verify that the SA Tool correctly handles a fare payment resulting from a failed inspection. The operator should be able to select the payment function on the SA Tool inspection results screen and the tool should record both the fare payment and inspection transactions."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Tickets", "Use_Case_Name": "Accepting Fare Payment from a TICKET using Period Pass - Customer has a Valid Child Concession on their CLIENT Ticket", "Test_Scnario": "Expired Period Pass and ePurse Balance Less than the Fare Amount", "Test_Sce_Description": "Verify that the SA Tool correctly identifies that the Card is Anonymous and the ePurse Balance is less than the fare amount when the customer has an expired period pass. The tool should display a declined message to the customer and the transaction should not be conducted."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Tickets", "Use_Case_Name": "Accepting Fare Payment from a TICKET using Period Pass - Customer has a Valid Child Concession on their CLIENT Ticket", "Test_Scnario": "Blocked Farecard", "Test_Sce_Description": "Verify that the SA Tool correctly identifies and handles a blocked Farecard. The tool should not allow any transactions to be conducted with a blocked Farecard."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Tickets", "Use_Case_Name": "Accepting Fare Payment from a TICKET using Period Pass \u2013 Fare Payment Resulting from Failed Inspection", "Test_Scnario": "Fare Payment with Unpaid Ticket", "Test_Sce_Description": "Verify that the system correctly identifies a customer's ticket that has not paid a fare. The operator should be able to select the payment function on the SA Tool inspection results screen and the system should record both the fare payment and inspection transactions."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Tickets", "Use_Case_Name": "Accepting Fare Payment from a TICKET using Period Pass \u2013 Fare Payment Resulting from Failed Inspection", "Test_Scnario": "Fare Payment with Invalid Period Pass", "Test_Sce_Description": "Verify that the system correctly identifies a customer's ticket with a period pass that is not valid on the current date. The system should display a declined message to the customer and the transaction should not be conducted."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Tickets", "Use_Case_Name": "Accepting Fare Payment from a TICKET using Period Pass \u2013 Fare Payment Resulting from Failed Inspection", "Test_Scnario": "Fare Payment with Low Battery", "Test_Sce_Description": "Verify that the system correctly handles a situation where the device battery goes below the low battery threshold during a successful ticket tap. The system should switch to 'Out of Service' mode after processing the fare payment."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Tickets", "Use_Case_Name": "Accepting Fare Payment from a TICKET using Period Pass \u2013 Fare Payment Resulting from Failed Inspection", "Test_Scnario": "Fare Payment with Non-CLIENT Media", "Test_Sce_Description": "Verify that the system correctly handles a situation where a customer taps a card that is not CLIENT media. The system should not respond and a 'Card Read Error' message should be displayed."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Tickets", "Use_Case_Name": "Accepting Fare Payment from a TICKET using Period Pass \u2013 Fare Payment Resulting from Failed Inspection", "Test_Scnario": "Fare Payment within Anti-Passback Window", "Test_Sce_Description": "Verify that the system correctly identifies a customer's ticket that is within the Anti-Passback Window. The system should display a declined message to the customer and the transaction should not be conducted."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Tickets", "Use_Case_Name": "Accepting Fare Payment from a TICKET using Period Pass \u2013 Fare Payment Resulting from Failed Inspection", "Test_Scnario": "Fare Payment with Non-Activated Ticket", "Test_Sce_Description": "Verify that the system correctly identifies a customer's ticket that is not activated. The system should display a declined message to the customer and the transaction should not be conducted."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Tickets", "Use_Case_Name": "Accepting Fare Payment from a TICKET using Period Pass \u2013 Fare Payment Resulting from Failed Inspection", "Test_Scnario": "Fare Payment with Expired Ticket", "Test_Sce_Description": "Verify that the system correctly identifies a customer's ticket that is expired. The system should display a declined message to the customer and the transaction should not be conducted."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Tickets", "Use_Case_Name": "Accepting Fare Payment from a TICKET using Period Pass \u2013 Fare Payment Resulting from Failed Inspection", "Test_Scnario": "Fare Payment with Unreadable Ticket", "Test_Sce_Description": "Verify that the system correctly handles a situation where a customer's ticket is unreadable. The system should indicate to the operator that the ticket is unreadable and ask the customer to tap on the NFC reader again."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Tickets", "Use_Case_Name": "Accepting Fare Payment from a TICKET using Period Pass \u2013 Fare Payment Resulting from Failed Inspection", "Test_Scnario": "Fare Payment with Audio Messages", "Test_Sce_Description": "Verify that the system correctly handles a situation where a customer requests audio messages for the fare payment. The operator should be able to enable audio mode and change the volume level using the physical device buttons at the customer's discretion."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Tickets", "Use_Case_Name": "Accepting Fare Payment from a TICKET using Period Pass \u2013 Fare Payment Resulting from Failed Inspection", "Test_Scnario": "Fare Payment on Premium or Special Event Service Class Route", "Test_Sce_Description": "Verify that the system correctly handles a situation where a customer's ticket with a valid Period Pass is tapped on a route/location with Premium or Special Event Service Class. The system should identify that the customer's Period Pass is valid and accept the period pass fare payment."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "e-Tickets", "Use_Case_Name": "E-Ticket fails validation checks", "Test_Scnario": "E-Ticket fails validation checks", "Test_Sce_Description": "Validate the system's response when an E-Ticket fails the necessary validation checks. The device should return the appropriate feedback, and the right to travel should not be conferred."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "e-Tickets", "Use_Case_Name": "E-Ticket fails validation checks", "Test_Scnario": "Offline device handling", "Test_Sce_Description": "Verify the system's behavior when the device is offline and unable to retrieve details regarding the E-Ticket from the Bytemark backend. The result should be cached in an offline database to be uploaded to Bytemark API when connection is resumed."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "e-Tickets", "Use_Case_Name": "E-Ticket fails validation checks", "Test_Scnario": "Group QR Code validation", "Test_Sce_Description": "Check the system's response when a Group QR Code is scanned at the SA Tool Barcode Reader. The device should check each ticket within the group against the deny list to determine if E-Ticket is valid for travel."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "e-Tickets", "Use_Case_Name": "E-Ticket fails validation checks", "Test_Scnario": "Pass holder E-Ticket validation", "Test_Sce_Description": "Validate the system's response when a pass type E-ticket is scanned at the SA Tool barcode reader. The device should check that the E-Ticket pass is valid for travel."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "e-Tickets", "Use_Case_Name": "E-Ticket fails validation checks", "Test_Scnario": "Scanner withdrawal logic", "Test_Sce_Description": "Verify the withdrawal logic of the scanner when the pass-holder does not remove the QR code from view of the scanner after the initial scan. The scanner should not respond to the scan if the same E-Ticket ID is scanned within 3 seconds."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "e-Tickets", "Use_Case_Name": "E-Ticket fails validation checks", "Test_Scnario": "Child E-Ticket validation", "Test_Sce_Description": "Check the system's response when a Child E-Ticket is scanned at the SA Tool Barcode Reader. The right to travel should be conferred to the E-Ticket holder, and the device should provide the appropriate feedback."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "e-Tickets", "Use_Case_Name": "E-Ticket fails validation checks", "Test_Scnario": "E-Ticket QR Code timestamp validation", "Test_Sce_Description": "Validate the system's response when the timestamp of the QR code does not meet the timestamp validation requirements. The user\u2019s E-Ticket should not be valid for travel."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "e-Tickets", "Use_Case_Name": "E-Ticket fails validation checks", "Test_Scnario": "E-Ticket QR Code deny list validation", "Test_Sce_Description": "Check the system's behavior when the E-Ticket ID is on the current deny list. The device should provide the appropriate decline feedback to the E-Ticket holder."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "e-Tickets", "Use_Case_Name": "E-Ticket fails validation checks", "Test_Scnario": "E-Ticket QR Code API validation", "Test_Sce_Description": "Verify the system's response when the device calls the Bytemark API and receives a response that determines that the E-Ticket is not valid for travel."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "e-Tickets", "Use_Case_Name": "E-Ticket fails validation checks", "Test_Scnario": "E-Ticket QR Code scan failure", "Test_Sce_Description": "Validate the system's behavior when the device fails to decrypt a scanned E-ticket QR code. An invalid ticket screen should be displayed."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "e-Tickets", "Use_Case_Name": "E-Ticket fails validation checks", "Test_Scnario": "Bytemark API call error handling", "Test_Sce_Description": "Check the system's response when the API call to Bytemark returns an error code. The device should renew authentication token and retry API call."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "e-Tickets", "Use_Case_Name": "E-Ticket fails validation checks", "Test_Scnario": "Bytemark API call HTTP error handling", "Test_Sce_Description": "Verify the system's behavior when the API call to Bytemark returns an HTTP error code. The device should move to offline validation steps."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "e-Tickets", "Use_Case_Name": "E-Ticket holder scans Group QR Code at the SA Tool Barcode Reader", "Test_Scnario": "E-Ticket Validation", "Test_Sce_Description": "Verify that the device correctly validates the E-Ticket by checking each ticket within the group against the deny list to determine if E-Ticket is valid for travel."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "e-Tickets", "Use_Case_Name": "E-Ticket holder scans Group QR Code at the SA Tool Barcode Reader", "Test_Scnario": "Group QR Code Validation", "Test_Sce_Description": "Verify that the device correctly validates the Group QR Code by sending and receiving a response from Bytemark API and checks that the Group QR Code is valid for travel."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "e-Tickets", "Use_Case_Name": "E-Ticket holder scans Group QR Code at the SA Tool Barcode Reader", "Test_Scnario": "Feedback on Successful Transaction", "Test_Sce_Description": "Verify that the device provides the appropriate feedback to the user of a successful transaction when the right to travel is conferred to the E-Ticket holder."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "e-Tickets", "Use_Case_Name": "E-Ticket holder scans Group QR Code at the SA Tool Barcode Reader", "Test_Scnario": "Pass Type E-ticket Validation", "Test_Sce_Description": "Verify that the device correctly validates the pass type E-ticket by sending and receiving a response from Bytemark API and checks that the E-Ticket pass is valid for travel."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "e-Tickets", "Use_Case_Name": "E-Ticket holder scans Group QR Code at the SA Tool Barcode Reader", "Test_Scnario": "Concession Determination", "Test_Sce_Description": "Verify that the device correctly determines the concession by using the first word of the barcode label name."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "e-Tickets", "Use_Case_Name": "E-Ticket holder scans Group QR Code at the SA Tool Barcode Reader", "Test_Scnario": "Withdrawal Logic Application", "Test_Sce_Description": "Verify that the device correctly applies the withdrawal logic when the pass-holder does not remove the QR code from view of the scanner after the initial scan."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "e-Tickets", "Use_Case_Name": "E-Ticket holder scans Group QR Code at the SA Tool Barcode Reader", "Test_Scnario": "Child E-Ticket Validation", "Test_Sce_Description": "Verify that the device correctly validates the Child E-Ticket and provides the appropriate feedback to the user of a successful Child E-Ticket transaction."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "e-Tickets", "Use_Case_Name": "E-Ticket holder scans Group QR Code at the SA Tool Barcode Reader", "Test_Scnario": "Timestamp Validation", "Test_Sce_Description": "Verify that the device correctly validates the timestamp of the QR code against the maximum allowable time window in the device config to determine if the E-Ticket is valid for travel."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "e-Tickets", "Use_Case_Name": "E-Ticket holder scans Group QR Code at the SA Tool Barcode Reader", "Test_Scnario": "Deny List Validation", "Test_Sce_Description": "Verify that the device correctly validates the E-Ticket by performing a check against the local deny list and confirms that the E-Ticket ID is on the current deny list."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "e-Tickets", "Use_Case_Name": "E-Ticket holder scans Group QR Code at the SA Tool Barcode Reader", "Test_Scnario": "API Response Validation", "Test_Sce_Description": "Verify that the device correctly validates the E-Ticket by calling the Bytemark API and receives a response that determines that the E-Ticket is not valid for travel."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "e-Tickets", "Use_Case_Name": "E-Ticket holder scans Group QR Code at the SA Tool Barcode Reader", "Test_Scnario": "QR Code Scan Failure", "Test_Sce_Description": "Verify that the device correctly handles the situation when it fails to decrypt a scanned E-ticket QR code or any QR code using the Bytemark key."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "e-Tickets", "Use_Case_Name": "E-Ticket holder scans Group QR Code at the SA Tool Barcode Reader", "Test_Scnario": "API Call Error Handling", "Test_Sce_Description": "Verify that the device correctly handles the situation when the API call to Bytemark fails and an error code is returned to the device that made the call."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "e-Tickets", "Use_Case_Name": "Pass holder E-Ticket is scanned at the SA Tool Barcode Reader", "Test_Scnario": "Validate Pass holder E-Ticket", "Test_Sce_Description": "Verify that the SA Tool Barcode Reader correctly validates a pass holder E-Ticket. The device should send and receive a response from Bytemark API and check that the E-Ticket pass is valid for travel. The first word of the barcode label name should be used as the concession."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "e-Tickets", "Use_Case_Name": "Pass holder E-Ticket is scanned at the SA Tool Barcode Reader", "Test_Scnario": "Validate Group QR Code", "Test_Sce_Description": "Verify that the SA Tool Barcode Reader correctly validates a Group QR Code. The device should check each ticket within the group against the deny list to determine if E-Ticket is valid for travel. The device should send and receive a response from Bytemark API and check that the Group QR Code is valid for travel."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "e-Tickets", "Use_Case_Name": "Pass holder E-Ticket is scanned at the SA Tool Barcode Reader", "Test_Scnario": "Validate Child E-Ticket", "Test_Sce_Description": "Verify that the SA Tool Barcode Reader correctly validates a Child E-Ticket. The device should provide the appropriate feedback to the user of a successful Child E-Ticket transaction."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "e-Tickets", "Use_Case_Name": "Pass holder E-Ticket is scanned at the SA Tool Barcode Reader", "Test_Scnario": "Validate E-Ticket QR Code fails timestamp validation", "Test_Sce_Description": "Verify that the device correctly handles a E-Ticket QR Code that fails timestamp validation. The device should check the timestamp of the QR code against the maximum allowable time window in the device config to determine if the E-Ticket is valid for travel. If the timestamp of the QR code does not meet the timestamp validation requirements, the user\u2019s E-Ticket should not be valid for travel."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "e-Tickets", "Use_Case_Name": "Pass holder E-Ticket is scanned at the SA Tool Barcode Reader", "Test_Scnario": "Validate E-Ticket QR Code fails deny list validation", "Test_Sce_Description": "Verify that the device correctly handles a E-Ticket QR Code that fails deny list validation. The device should perform a check against the local deny list and confirm that the E-Ticket ID is on the current deny list."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "e-Tickets", "Use_Case_Name": "Pass holder E-Ticket is scanned at the SA Tool Barcode Reader", "Test_Scnario": "Validate E-Ticket QR Code fails validation (response from API)", "Test_Sce_Description": "Verify that the device correctly handles a E-Ticket QR Code that fails validation (response from API). The device should call the Bytemark API and receive a response that determines that the E-Ticket is not valid for travel."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "e-Tickets", "Use_Case_Name": "Pass holder E-Ticket is scanned at the SA Tool Barcode Reader", "Test_Scnario": "Validate E-Ticket QR Code fails to scan", "Test_Sce_Description": "Verify that the device correctly handles a E-Ticket QR Code that fails to scan. The device should attempt to decrypt a scanned E-ticket QR code or any QR code using the Bytemark key. In the event of a failure an invalid ticket screen should be displayed."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "e-Tickets", "Use_Case_Name": "Pass holder E-Ticket is scanned at the SA Tool Barcode Reader", "Test_Scnario": "Validate Bytemark API call returns error code \u201c401 Unauthorized User\u201d or Bytemark error code 50032 (unauthorized access)", "Test_Sce_Description": "Verify that the device correctly handles a Bytemark API call that returns error code \u201c401 Unauthorized User\u201d or Bytemark error code 50032 (unauthorized access). The device should renew authentication token and retry API call. If API call is successful, will follow Step 4 as stated in Main Use Case, else will act as if it is offline again."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "e-Tickets", "Use_Case_Name": "Pass holder E-Ticket is scanned at the SA Tool Barcode Reader", "Test_Scnario": "Validate Bytemark API call returns other HTTP error code", "Test_Sce_Description": "Verify that the device correctly handles a Bytemark API call that returns other HTTP error code. The device should handle the error code appropriately and provide the user with the appropriate feedback."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "e-Tickets", "Use_Case_Name": "Scanner does not scan E-Ticket QR Code multiple times in a row", "Test_Scnario": "E-Ticket QR Code Validation", "Test_Sce_Description": "Verify that the E-Ticket QR code is validated correctly when scanned by the SA Tool Barcode Reader. The system should check the validity of the E-Ticket and confer the right to travel if the ticket is valid."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "e-Tickets", "Use_Case_Name": "Scanner does not scan E-Ticket QR Code multiple times in a row", "Test_Scnario": "Group QR Code Validation", "Test_Sce_Description": "Verify that the Group QR Code on the E-Ticket is validated correctly when scanned by the SA Tool Barcode Reader. The system should check the validity of each ticket within the group and confer the right to travel if the tickets are valid."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "e-Tickets", "Use_Case_Name": "Scanner does not scan E-Ticket QR Code multiple times in a row", "Test_Scnario": "Pass Holder E-Ticket Validation", "Test_Sce_Description": "Verify that the Pass Holder E-Ticket is validated correctly when scanned by the SA Tool Barcode Reader. The system should check the validity of the pass and confer the right to travel if the pass is valid."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "e-Tickets", "Use_Case_Name": "Scanner does not scan E-Ticket QR Code multiple times in a row", "Test_Scnario": "Child E-Ticket Validation", "Test_Sce_Description": "Verify that the Child E-Ticket is validated correctly when scanned by the SA Tool Barcode Reader. The system should check the validity of the Child E-Ticket and confer the right to travel if the ticket is valid."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "e-Tickets", "Use_Case_Name": "Scanner does not scan E-Ticket QR Code multiple times in a row", "Test_Scnario": "E-Ticket QR Code Timestamp Validation", "Test_Sce_Description": "Verify that the timestamp of the E-Ticket QR code is validated correctly. The system should check the timestamp of the QR code against the maximum allowable time window in the device config to determine if the E-Ticket is valid for travel."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "e-Tickets", "Use_Case_Name": "Scanner does not scan E-Ticket QR Code multiple times in a row", "Test_Scnario": "E-Ticket QR Code Deny List Validation", "Test_Sce_Description": "Verify that the E-Ticket QR code is validated against the local deny list correctly. The system should check if the E-Ticket ID is on the current deny list and decline the right to travel if it is."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "e-Tickets", "Use_Case_Name": "Scanner does not scan E-Ticket QR Code multiple times in a row", "Test_Scnario": "E-Ticket QR Code API Response Validation", "Test_Sce_Description": "Verify that the E-Ticket QR code is validated correctly based on the response from the Bytemark API. The system should check the API response to determine if the E-Ticket is valid for travel."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "e-Tickets", "Use_Case_Name": "Scanner does not scan E-Ticket QR Code multiple times in a row", "Test_Scnario": "E-Ticket QR Code Scan Failure", "Test_Sce_Description": "Verify that the system handles a failure to scan the E-Ticket QR code correctly. The system should attempt to decrypt the scanned QR code and display an invalid ticket screen in the event of a failure."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "e-Tickets", "Use_Case_Name": "Scanner does not scan E-Ticket QR Code multiple times in a row", "Test_Scnario": "Bytemark API Error Code Handling", "Test_Sce_Description": "Verify that the system handles Bytemark API error codes correctly. The system should read and log the error code, renew the authentication token, retry the API call, and move to offline validation steps if necessary."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "e-Tickets", "Use_Case_Name": "Scanner does not scan E-Ticket QR Code multiple times in a row", "Test_Scnario": "E-Ticket QR Code Multiple Scans", "Test_Sce_Description": "Verify that the system correctly handles multiple scans of the same E-Ticket QR code in a row. The system should apply withdrawal logic to prevent multiple responses to the same scan."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "e-Tickets", "Use_Case_Name": "Child E-Ticket is scanned at the SA Tool Barcode Reader", "Test_Scnario": "Successful Child E-Ticket Transaction", "Test_Sce_Description": "Verify that when a Child E-Ticket is scanned at the SA Tool Barcode Reader, the right to travel is conferred to the E-Ticket holder and the device provides the appropriate feedback to the user of a successful Child E-Ticket transaction."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "e-Tickets", "Use_Case_Name": "Child E-Ticket is scanned at the SA Tool Barcode Reader", "Test_Scnario": "E-Ticket QR Code Fails Timestamp Validation", "Test_Sce_Description": "Verify that when the timestamp of the QR code does not meet the timestamp validation requirements, the user\u2019s E-Ticket is not valid for travel and the device provides the appropriate decline feedback to the E-Ticket holder."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "e-Tickets", "Use_Case_Name": "Child E-Ticket is scanned at the SA Tool Barcode Reader", "Test_Scnario": "E-Ticket QR Code Fails Deny List Validation", "Test_Sce_Description": "Verify that when the device performs a check against the local deny list and confirms that the E-Ticket ID is on the current deny list, the E-Ticket is not valid for travel and the device provides the appropriate decline feedback to the E-Ticket holder."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "e-Tickets", "Use_Case_Name": "Child E-Ticket is scanned at the SA Tool Barcode Reader", "Test_Scnario": "E-Ticket QR Code Fails Validation (Response from API)", "Test_Sce_Description": "Verify that when the device calls the Bytemark API and receives a response that determines that the E-Ticket is not valid for travel, the device provides the appropriate feedback to the E-Ticket holder."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "e-Tickets", "Use_Case_Name": "Child E-Ticket is scanned at the SA Tool Barcode Reader", "Test_Scnario": "E-Ticket QR Code Fails to Scan", "Test_Sce_Description": "Verify that when the device fails to decrypt a scanned E-ticket QR code or any QR code using the Bytemark key, an invalid ticket screen is displayed."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "e-Tickets", "Use_Case_Name": "Child E-Ticket is scanned at the SA Tool Barcode Reader", "Test_Scnario": "Bytemark API Call Returns Error Code", "Test_Sce_Description": "Verify that when the call to the Bytemark API returns 401, or Bytemark error code 50032 the device reads/logs the error code and begins error handling process, renews authentication token and retries API call."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "e-Tickets", "Use_Case_Name": "Child E-Ticket is scanned at the SA Tool Barcode Reader", "Test_Scnario": "Bytemark API Call Returns Other HTTP Error Code", "Test_Sce_Description": "Verify that when the device is offline, the call to the Bytemark backend fails and is unable to retrieve details regarding the E-Ticket, and the result is cached in an offline database to be uploaded to Bytemark API when connection is resumed."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "e-Tickets", "Use_Case_Name": "Child E-Ticket is scanned at the SA Tool Barcode Reader", "Test_Scnario": "E-Ticket Holder Scans Group QR Code", "Test_Sce_Description": "Verify that when the E-Ticket holder scans the Group QR Code on their E-Ticket against the SA Tool\u2019s barcode reader to validate the Ticket in Fare Payment Mode, the device checks each ticket within the group against the deny list to determine if E-Ticket is valid for travel."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "e-Tickets", "Use_Case_Name": "Child E-Ticket is scanned at the SA Tool Barcode Reader", "Test_Scnario": "Pass Holder E-Ticket is Scanned", "Test_Sce_Description": "Verify that when a pass type E-ticket is scanned at the SA Tool barcode reader to validate the pass, the device sends and receives a response from Bytemark API and checks that the E-Ticket pass is valid for travel."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "e-Tickets", "Use_Case_Name": "Child E-Ticket is scanned at the SA Tool Barcode Reader", "Test_Scnario": "Scanner Does Not Scan E-Ticket QR Code Multiple Times in a Row", "Test_Sce_Description": "Verify that if the pass-holder does not remove the QR code from view of the scanner after the initial scan, withdrawal logic applies and the scanner does not respond to the scan."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "e-Tickets", "Use_Case_Name": "E-Ticket QR Code fails timestamp validation", "Test_Scnario": "E-Ticket QR Code fails timestamp validation", "Test_Sce_Description": "This scenario will test the functionality of the system when the E-Ticket QR code fails the timestamp validation. The system should return the appropriate feedback and the right to travel should not be conferred. The device should check the timestamp of the QR code against the maximum allowable time window in the device config to determine if the E-Ticket is valid for travel. If the timestamp of the QR code does not meet the timestamp validation requirements, the user\u2019s E-Ticket will not be valid for travel."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "e-Tickets", "Use_Case_Name": "E-Ticket QR Code fails timestamp validation", "Test_Scnario": "E-Ticket QR Code fails deny list validation", "Test_Sce_Description": "This scenario will test the functionality of the system when the E-Ticket QR code fails the deny list validation. The system should return the appropriate feedback and the right to travel should not be conferred. The device should perform a check against the local deny list and confirm that the E-Ticket ID is on the current deny list."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "e-Tickets", "Use_Case_Name": "E-Ticket QR Code fails timestamp validation", "Test_Scnario": "E-Ticket QR Code fails validation (response from API)", "Test_Sce_Description": "This scenario will test the functionality of the system when the E-Ticket QR code fails the validation from the API response. The system should return the appropriate feedback and the right to travel should not be conferred. The device should call the Bytemark API and receive a response that determines that the E-Ticket is not valid for travel."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "e-Tickets", "Use_Case_Name": "E-Ticket QR Code fails timestamp validation", "Test_Scnario": "E-Ticket QR Code fails to scan", "Test_Sce_Description": "This scenario will test the functionality of the system when the E-Ticket QR code fails to scan. The system should return the appropriate feedback and the right to travel should not be conferred. The device should attempt to decrypt a scanned E-ticket QR code or any QR code using the Bytemark key. In the event of a failure an invalid ticket screen should be displayed."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "e-Tickets", "Use_Case_Name": "E-Ticket QR Code fails timestamp validation", "Test_Scnario": "Bytemark API call returns error code \u201c401 Unauthorized User\u201d or Bytemark error code 50032 (unauthorized access)", "Test_Sce_Description": "This scenario will test the functionality of the system when the API call to Bytemark returns an error code. The system should return the appropriate feedback and the right to travel should not be conferred. If the HTTP code is \u201c401\u201d or Bytemark error code 50032\u201d the device should read/log the error code and begin error handling process. The device should renew authentication token and will retry API call."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "e-Tickets", "Use_Case_Name": "E-Ticket QR Code fails timestamp validation", "Test_Scnario": "Bytemark API call returns other HTTP error code", "Test_Sce_Description": "This scenario will test the functionality of the system when the API call to Bytemark returns other HTTP error codes. The system should return the appropriate feedback and the right to travel should not be conferred. The device should handle the error appropriately and provide the necessary feedback to the user."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "e-Tickets", "Use_Case_Name": "E-Ticket QR Code fails deny list validation", "Test_Scnario": "E-Ticket QR Code fails deny list validation", "Test_Sce_Description": "This scenario will test the functionality of the device when an E-Ticket QR code fails the deny list validation. The device should correctly identify the E-Ticket as invalid and provide the appropriate decline feedback to the E-Ticket holder."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "e-Tickets", "Use_Case_Name": "E-Ticket QR Code fails deny list validation", "Test_Scnario": "E-Ticket QR Code fails timestamp validation", "Test_Sce_Description": "This scenario will test the functionality of the device when an E-Ticket QR code fails the timestamp validation. The device should correctly identify the E-Ticket as invalid and provide the appropriate decline feedback to the E-Ticket holder."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "e-Tickets", "Use_Case_Name": "E-Ticket QR Code fails deny list validation", "Test_Scnario": "E-Ticket QR Code fails validation (response from API)", "Test_Sce_Description": "This scenario will test the functionality of the device when an E-Ticket QR code fails the validation from the response of the Bytemark API. The device should correctly identify the E-Ticket as invalid and provide the appropriate decline feedback to the E-Ticket holder."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "e-Tickets", "Use_Case_Name": "E-Ticket QR Code fails deny list validation", "Test_Scnario": "E-Ticket QR Code fails to scan", "Test_Sce_Description": "This scenario will test the functionality of the device when an E-Ticket QR code fails to scan. The device should correctly identify the E-Ticket as invalid and provide the appropriate decline feedback to the E-Ticket holder."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "e-Tickets", "Use_Case_Name": "E-Ticket QR Code fails deny list validation", "Test_Scnario": "Bytemark API call returns error code \u201c401 Unauthorized User\u201d or Bytemark error code 50032 (unauthorized access)", "Test_Sce_Description": "This scenario will test the functionality of the device when the Bytemark API call returns an error code \u201c401 Unauthorized User\u201d or Bytemark error code 50032 (unauthorized access). The device should correctly identify the error and begin the error handling process."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "e-Tickets", "Use_Case_Name": "E-Ticket QR Code fails deny list validation", "Test_Scnario": "Bytemark API call returns other HTTP error code", "Test_Sce_Description": "This scenario will test the functionality of the device when the Bytemark API call returns other HTTP error codes. The device should correctly identify the error and begin the error handling process."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "e-Tickets", "Use_Case_Name": "E-Ticket QR Code fails deny list validation", "Test_Scnario": "Performance of the device during peak hours", "Test_Sce_Description": "This scenario will test the performance of the device during peak hours. The device should be able to handle multiple E-Ticket scans and validations without any delay or errors."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "e-Tickets", "Use_Case_Name": "E-Ticket QR Code fails deny list validation", "Test_Scnario": "Security of the device", "Test_Sce_Description": "This scenario will test the security of the device. The device should be able to securely store and handle sensitive data such as E-Ticket details and deny list."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "e-Tickets", "Use_Case_Name": "E-Ticket QR Code fails deny list validation", "Test_Scnario": "Offline functionality of the device", "Test_Sce_Description": "This scenario will test the offline functionality of the device. The device should be able to validate E-Tickets and provide appropriate feedback even when it is offline."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "e-Tickets", "Use_Case_Name": "E-Ticket QR Code fails deny list validation", "Test_Scnario": "Group QR Code validation", "Test_Sce_Description": "This scenario will test the functionality of the device when a Group QR Code is scanned. The device should correctly validate all the E-Tickets within the group and provide appropriate feedback."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "e-Tickets", "Use_Case_Name": "E-Ticket QR Code fails validation (response from API)", "Test_Scnario": "E-Ticket QR Code fails validation (response from API)", "Test_Sce_Description": "This scenario will test the functionality of the system when the E-Ticket QR code fails validation. The system should return the appropriate feedback and the right to travel should not be conferred. The system should call the Bytemark API and receive a response that determines that the E-Ticket is not valid for travel. The system should then provide the appropriate feedback to the E-Ticket holder."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "e-Tickets", "Use_Case_Name": "E-Ticket QR Code fails validation (response from API)", "Test_Scnario": "E-Ticket QR Code fails timestamp validation", "Test_Sce_Description": "This scenario will test the functionality of the system when the E-Ticket QR code fails timestamp validation. The system should check the timestamp of the QR code against the maximum allowable time window in the device config to determine if the E-Ticket is valid for travel. If the timestamp of the QR code does not meet the timestamp validation requirements, the user\u2019s E-Ticket should not be valid for travel and the system should provide the appropriate decline feedback to the E-Ticket holder."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "e-Tickets", "Use_Case_Name": "E-Ticket QR Code fails validation (response from API)", "Test_Scnario": "E-Ticket QR Code fails deny list validation", "Test_Sce_Description": "This scenario will test the functionality of the system when the E-Ticket QR code fails deny list validation. The system should perform a check against the local deny list and confirm that the E-Ticket ID is on the current deny list. The system should then provide the appropriate decline feedback to the E-Ticket holder."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "e-Tickets", "Use_Case_Name": "E-Ticket QR Code fails validation (response from API)", "Test_Scnario": "Bytemark API call returns error code \u201c401 Unauthorized User\u201d or Bytemark error code 50032 (unauthorized access)", "Test_Sce_Description": "This scenario will test the functionality of the system when the API call to Bytemark returns an error code. The system should read/log the error code and begin the error handling process. The system should renew the authentication token and retry the API call. If the API call is successful, the system should follow the normal process, else it should act as if it is offline again and move to offline validation steps."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "e-Tickets", "Use_Case_Name": "E-Ticket QR Code fails validation (response from API)", "Test_Scnario": "Bytemark API call returns other HTTP error code", "Test_Sce_Description": "This scenario will test the functionality of the system when the API call to Bytemark returns other HTTP error codes. The system should handle the error appropriately and provide the necessary feedback to the user."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "e-Tickets", "Use_Case_Name": "E-Ticket QR Code fails validation (response from API)", "Test_Scnario": "Scanner does not scan E-Ticket QR Code multiple times in a row", "Test_Sce_Description": "This scenario will test the functionality of the system when the scanner does not scan the E-Ticket QR code multiple times in a row. The system should apply withdrawal logic and check the last scanned E-Ticket ID against the next scanned E-Ticket ID and if the same, it should not respond to the scan. This logic should be implemented for 3 seconds after the initial scan, after this period the scanner should then be able to re-scan the initial E-ticket as normal."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "e-Tickets", "Use_Case_Name": "E-Ticket QR Code fails validation (response from API)", "Test_Scnario": "E-Ticket QR Code fails to scan", "Test_Sce_Description": "This scenario will test the functionality of the system when the E-Ticket QR code fails to scan. The system should attempt to decrypt a scanned E-ticket QR code or any QR code using the Bytemark key. In the event of a failure, an invalid ticket screen should be displayed."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "e-Tickets", "Use_Case_Name": "E-Ticket QR Code fails to scan", "Test_Scnario": "E-Ticket QR Code fails timestamp validation", "Test_Sce_Description": "This scenario will test the functionality of the device when the E-Ticket QR code fails the timestamp validation. The device should check the timestamp of the QR code against the maximum allowable time window in the device config to determine if the E-Ticket is valid for travel. If the timestamp of the QR code does not meet the timestamp validation requirements, the user\u2019s E-Ticket will not be valid for travel and the device should provide the appropriate decline feedback to the E-Ticket holder."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "e-Tickets", "Use_Case_Name": "E-Ticket QR Code fails to scan", "Test_Scnario": "E-Ticket QR Code fails deny list validation", "Test_Sce_Description": "This scenario will test the functionality of the device when the E-Ticket QR code fails the deny list validation. The device should perform a check against the local deny list and confirm that the E-Ticket ID is on the current deny list. If the E-Ticket ID is on the deny list, the device should provide the appropriate decline feedback to the E-Ticket holder."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "e-Tickets", "Use_Case_Name": "E-Ticket QR Code fails to scan", "Test_Scnario": "E-Ticket QR Code fails validation (response from API)", "Test_Sce_Description": "This scenario will test the functionality of the device when the E-Ticket QR code fails the validation from the API response. The device should call the Bytemark API and receive a response that determines that the E-Ticket is not valid for travel. If the E-Ticket is not valid for travel, the device should provide the appropriate feedback to the E-Ticket holder."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "e-Tickets", "Use_Case_Name": "E-Ticket QR Code fails to scan", "Test_Scnario": "E-Ticket QR Code fails to scan", "Test_Sce_Description": "This scenario will test the functionality of the device when the E-Ticket QR code fails to scan. The device should attempt to decrypt a scanned E-ticket QR code or any QR code using the Bytemark key. In the event of a failure, an invalid ticket screen should be displayed."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "e-Tickets", "Use_Case_Name": "E-Ticket QR Code fails to scan", "Test_Scnario": "Bytemark API call returns error code \u201c401 Unauthorized User\u201d or Bytemark error code 50032 (unauthorized access)", "Test_Sce_Description": "This scenario will test the functionality of the device when the API call to Bytemark returns an error code. If the HTTP code is \u201c401\u201d or Bytemark error code 50032, the device should read/log the error code and begin the error handling process. The device should renew the authentication token and retry the API call. If the API call is successful, it should follow the normal process, else it should act as if it is offline again and move to offline validation steps."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "e-Tickets", "Use_Case_Name": "E-Ticket QR Code fails to scan", "Test_Scnario": "Bytemark API call returns other HTTP error code", "Test_Sce_Description": "This scenario will test the functionality of the device when the API call to Bytemark returns other HTTP error codes. The device should handle the error appropriately and provide the necessary feedback to the user."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "e-Tickets", "Use_Case_Name": "Bytemark API call returns error code \u201c401 Unauthorized User\u201d or Bytemark error code 50032 (unauthorized access)", "Test_Scnario": "Bytemark API call returns error code \u201c401 Unauthorized User\u201d", "Test_Sce_Description": "This scenario tests the functionality of the system when the Bytemark API call returns an error code \u201c401 Unauthorized User\u201d. The system should log the error code and begin the error handling process. The device should renew the authentication token and retry the API call. If the API call is successful, it should follow the main use case, else it should act as if it is offline and move to offline validation steps."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "e-Tickets", "Use_Case_Name": "Bytemark API call returns error code \u201c401 Unauthorized User\u201d or Bytemark error code 50032 (unauthorized access)", "Test_Scnario": "Bytemark API call returns error code 50032 (unauthorized access)", "Test_Sce_Description": "This scenario tests the functionality of the system when the Bytemark API call returns an error code 50032 (unauthorized access). The system should log the error code and begin the error handling process. The device should renew the authentication token and retry the API call. If the API call is successful, it should follow the main use case, else it should act as if it is offline and move to offline validation steps."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "e-Tickets", "Use_Case_Name": "Bytemark API call returns error code \u201c401 Unauthorized User\u201d or Bytemark error code 50032 (unauthorized access)", "Test_Scnario": "Bytemark API call returns other HTTP error code", "Test_Sce_Description": "This scenario tests the functionality of the system when the Bytemark API call returns any other HTTP error code. The system should act as if it is offline, log the error and move to offline validation steps."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "e-Tickets", "Use_Case_Name": "Bytemark API call returns error code \u201c401 Unauthorized User\u201d or Bytemark error code 50032 (unauthorized access)", "Test_Scnario": "Bytemark API call is successful but response contains internal error code", "Test_Sce_Description": "This scenario tests the functionality of the system when the Bytemark API call is successful but the response contains an internal error code. The system should log the error, act as if it is offline and move to offline validation steps."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "e-Tickets", "Use_Case_Name": "Bytemark API call returns error code \u201c401 Unauthorized User\u201d or Bytemark error code 50032 (unauthorized access)", "Test_Scnario": "Bytemark API call is successful but response contains error code (200001) for \u201cWrong Transit Agency\u201d", "Test_Sce_Description": "This scenario tests the functionality of the system when the Bytemark API call is successful but the response contains an error code 200001 for \u201cWrong Transit Agency\u201d. The system should treat this error code as an invalid result and the E-Ticket will be deemed invalid for travel. The device should provide the appropriate feedback to the E-Ticket holder."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "e-Tickets", "Use_Case_Name": "Bytemark API call returns error code \u201c401 Unauthorized User\u201d or Bytemark error code 50032 (unauthorized access)", "Test_Scnario": "Bytemark API Call is unsuccessful due to Timeout", "Test_Sce_Description": "This scenario tests the functionality of the system when the Bytemark API call is unsuccessful due to a response timeout. The system should log the error, act as if it is offline and move to offline validation steps."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "e-Tickets", "Use_Case_Name": "Bytemark API call returns error code \u201c401 Unauthorized User\u201d or Bytemark error code 50032 (unauthorized access)", "Test_Scnario": "Transaction Reversal", "Test_Sce_Description": "This scenario tests the functionality of the system when a transaction reversal is requested. The system should process the fare reversal and update the customer\u2019s Farecard to reflect the fare reversal. The device should display successful fare reversal screen to the operator and customer and play the successful fare reversal audio tone."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "e-Tickets", "Use_Case_Name": "Bytemark API call returns error code \u201c401 Unauthorized User\u201d or Bytemark error code 50032 (unauthorized access)", "Test_Scnario": "Transaction Reversal - Customer\u2019s Farecard is Unreadable", "Test_Sce_Description": "This scenario tests the functionality of the system when the customer\u2019s Farecard is unreadable during a transaction reversal. The system should indicate to the operator that the Farecard is unreadable."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "e-Tickets", "Use_Case_Name": "Bytemark API call returns error code \u201c401 Unauthorized User\u201d or Bytemark error code 50032 (unauthorized access)", "Test_Scnario": "Transaction Reversal - Customer Requests Audio Messages", "Test_Sce_Description": "This scenario tests the functionality of the system when the customer requests audio messages for fare reversal. The system should play the corresponding audio message to the customer in the default language of their Farecard."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "e-Tickets", "Use_Case_Name": "Bytemark API call returns other HTTP error code", "Test_Scnario": "Bytemark API call returns HTTP error code 401 or 50032", "Test_Sce_Description": "This scenario will test the functionality of the device when the Bytemark API call returns HTTP error code 401 or 50032. The device should log the error code and begin the error handling process. It should renew the authentication token and retry the API call. If the API call is successful, it should follow the main use case. If not, it should act as if it is offline and move to offline validation steps."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "e-Tickets", "Use_Case_Name": "Bytemark API call returns other HTTP error code", "Test_Scnario": "Bytemark API call returns other HTTP error code", "Test_Sce_Description": "This scenario will test the functionality of the device when the Bytemark API call returns any other HTTP error code. The device should act as if it is offline, log the error, and move to offline validation steps."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "e-Tickets", "Use_Case_Name": "Bytemark API call returns other HTTP error code", "Test_Scnario": "Bytemark API call is successful but response contains internal error code", "Test_Sce_Description": "This scenario will test the functionality of the device when the Bytemark API call is successful but the response contains an internal error code. The device should log the error, act as if it is offline, and move to offline validation steps."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "e-Tickets", "Use_Case_Name": "Bytemark API call returns other HTTP error code", "Test_Scnario": "Bytemark API call is successful but response contains error code for Wrong Transit Agency", "Test_Sce_Description": "This scenario will test the functionality of the device when the Bytemark API call is successful but the response contains an error code for Wrong Transit Agency. The device should treat this error code as an invalid result and deem the E-Ticket invalid for travel. It should provide the appropriate feedback to the E-Ticket holder."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "e-Tickets", "Use_Case_Name": "Bytemark API call returns other HTTP error code", "Test_Scnario": "Bytemark API Call is unsuccessful due to Timeout", "Test_Sce_Description": "This scenario will test the functionality of the device when the Bytemark API call is unsuccessful due to a response timeout. The device should display a wait screen after the request has been sent and is waiting for a response. If the API call times out, the device should log the error, act as if it is offline, and move to offline validation steps."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "e-Tickets", "Use_Case_Name": "Bytemark API call returns other HTTP error code", "Test_Scnario": "Transaction Reversal - Customer\u2019s Farecard is Unreadable", "Test_Sce_Description": "This scenario will test the functionality of the SA Tool when the customer's Farecard is unreadable. The SA Tool should detect the Farecard but indicate to the operator that it is unreadable. The customer should tap on the NFC reader again. If the tap is successful, the SA Tool should conduct the main use case. If not, it should indicate to the operator that the Farecard is unreadable."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "e-Tickets", "Use_Case_Name": "Bytemark API call returns other HTTP error code", "Test_Scnario": "Transaction Reversal - Customer Requests Audio Messages", "Test_Sce_Description": "This scenario will test the functionality of the SA Tool when the customer requests audio messages for fare reversal. The operator should enable audio mode and adjust the volume level at the customer's discretion. The SA Tool should display the fare reversal screen to the operator and customer for the duration of the audio message and play the corresponding audio message in the default language of the customer's Farecard."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "With/Without audio messages", "Use_Case_Name": "Tap on a SA Tool with Open Payments Media \u2013 Device is offline and not connected to Accenture Ticketing Services", "Test_Scnario": "Offline Device Tap Processing", "Test_Sce_Description": "Verify that the SA Tool correctly stores the tap when the device is offline and not connected to Accenture Ticketing Services. Once the device goes back online and connects to ATS, the tap should be rated in ATS."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "With/Without audio messages", "Use_Case_Name": "Tap on a SA Tool with Open Payments Media \u2013 Device is offline and not connected to Accenture Ticketing Services", "Test_Scnario": "Audio Messages for Fare Payment Reversal", "Test_Sce_Description": "Verify that the SA Tool correctly enables audio mode when the customer requests audio messages for fare payment reversal. The operator should be able to change the volume level using the physical device buttons at the customer\u2019s discretion."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "With/Without audio messages", "Use_Case_Name": "Tap on a SA Tool with Open Payments Media \u2013 Device is offline and not connected to Accenture Ticketing Services", "Test_Scnario": "Open Payments Media Fails ODA Check", "Test_Sce_Description": "Verify that the SA Tool correctly returns the appropriate feedback when an Open Payments Media fails the ODA check. The Declined \u2013 Try Another Card (Failed ODA Check) screen should be provided to the cardholder."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "With/Without audio messages", "Use_Case_Name": "Tap on a SA Tool with Open Payments Media \u2013 Device is offline and not connected to Accenture Ticketing Services", "Test_Scnario": "Open Payments Media Fails Expiry Check", "Test_Sce_Description": "Verify that the SA Tool correctly returns the appropriate feedback when an Open Payments Media fails the Expiry Check. The Declined \u2013 Card Expired Screen should be provided to the cardholder."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "With/Without audio messages", "Use_Case_Name": "Tap on a SA Tool with Open Payments Media \u2013 Device is offline and not connected to Accenture Ticketing Services", "Test_Scnario": "Multiple NFC Media Presented at Once", "Test_Sce_Description": "Verify that the SA Tool correctly blocks all fare payment functionality when multiple NFC media are presented to the device at one time. The device should display an error toast message."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "With/Without audio messages", "Use_Case_Name": "Tap on a SA Tool with Open Payments Media \u2013 Device is offline and not connected to Accenture Ticketing Services", "Test_Scnario": "SA Tool in Out-of-Service State", "Test_Sce_Description": "Verify that the SA Tool correctly remains in Out-of-Service state when a customer attempts to tap their Open Payments Media on the card reader. The Not In Service Screen should be provided to the cardholder."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "With/Without audio messages", "Use_Case_Name": "Tap on a SA Tool with Open Payments Media \u2013 Device is offline and not connected to Accenture Ticketing Services", "Test_Scnario": "SA Tool Configured for Farecard Reversals Only", "Test_Sce_Description": "Verify that the SA Tool correctly checks the local deny list if the media is on the local deny list when the device is configured for only farecard reversals. The latent transaction processor should store the tap till the device goes back online and connects to ATS."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "With/Without audio messages", "Use_Case_Name": "Tap on a SA Tool with Open Payments Media \u2013 Device is offline and not connected to Accenture Ticketing Services", "Test_Scnario": "Customer Uses Audio Jack to Hear Instructions", "Test_Sce_Description": "Verify that the SA Tool correctly switches the device into audio assist mode when the customer inserts headphones into the Audio jack. Audio instructions should detail how to adjust the volume by pressing the volume button and then prompt the user to tap their media."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "With/Without audio messages", "Use_Case_Name": "Tap on a SA Tool with Open Payments Media \u2013 Device is offline and not connected to Accenture Ticketing Services", "Test_Scnario": "Customer Overrides the Default Trip", "Test_Sce_Description": "Verify that the SA Tool correctly processes the tap as a normal tap-off when the tap-off occurs while the device is in Override mode. The Cardholder should present Farecard to the Device CID."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "With/Without audio messages", "Use_Case_Name": "Tap on a SA Tool with Open Payments Media \u2013 Device is offline and not connected to Accenture Ticketing Services", "Test_Scnario": "Customer Eligible for Capping Discount", "Test_Sce_Description": "Verify that the SA Tool correctly sends the tap to ATS for processing when capping is configured, and the customer has met any of the capping criteria. ATS should calculate the capping discount and apply to the fare calculation."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "With/Without audio messages", "Use_Case_Name": "Tap on a SA Tool with Open Payments Media \u2013 Device is offline and not connected to Accenture Ticketing Services", "Test_Scnario": "Customer Eligible for Multiple Capping Discounts", "Test_Sce_Description": "Verify that the SA Tool correctly sends the tap to ATS for processing when capping is configured, and the customer has met a combination of multiple capping criteria. ATS should calculate the capping discount and apply to the fare calculation."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "With/Without audio messages", "Use_Case_Name": "Tap on a SA Tool with Open Payments Media \u2013 Device is offline and not connected to Accenture Ticketing Services", "Test_Scnario": "Offline Device with Capping Discount", "Test_Sce_Description": "Verify that the SA Tool correctly stores the tap when the device is offline and not connected to ATS, and the customer has met any capping discount criteria. Once the device goes back online and connects to ATS, the tap should be rated in ATS."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "With/Without audio messages", "Use_Case_Name": "Tap on SA Tool with Open Payments Media \u2013 Customer requests audio messages", "Test_Scnario": "Offline Device and ATS Connection", "Test_Sce_Description": "Verify that when the SA Tool is offline and not connected to ATS, the device checks the local deny list and stores the tap until the device goes back online and connects to ATS. The tap should then be rated in ATS."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "With/Without audio messages", "Use_Case_Name": "Tap on SA Tool with Open Payments Media \u2013 Customer requests audio messages", "Test_Scnario": "Audio Messages Request", "Test_Sce_Description": "Verify that when a customer requests audio messages for fare payment, the operator enables audio mode and can change the volume level using the physical device buttons at the customer\u2019s discretion."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "With/Without audio messages", "Use_Case_Name": "Tap on SA Tool with Open Payments Media \u2013 Customer requests audio messages", "Test_Scnario": "Volume Adjustment Bar Timeout", "Test_Sce_Description": "Verify that while the volume is being adjusted, a volume adjustment bar appears and times out automatically to indicate the volume level. The volume should return to the device default after the use case is completed."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "With/Without audio messages", "Use_Case_Name": "Tap on SA Tool with Open Payments Media \u2013 Customer requests audio messages", "Test_Scnario": "Language Preference for Audio Messages", "Test_Sce_Description": "Verify that the language preference on the media dictates which language the audio message will be played in. If the card language tag is EN or FR-CA, the appropriate language should be used. Otherwise, English should be used as the default language."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "With/Without audio messages", "Use_Case_Name": "Tap on SA Tool with Open Payments Media \u2013 Customer requests audio messages", "Test_Scnario": "Failed Inspection Resulting in Fare Payment", "Test_Sce_Description": "Verify that when the operator inspects a customer\u2019s OP card and determines that they have not paid a fare, the operator selects the payment function on the SA Tool inspection results screen. The SA Tool should record both the fare payment and inspection transactions."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "With/Without audio messages", "Use_Case_Name": "Tap on SA Tool with Open Payments Media \u2013 Customer requests audio messages", "Test_Scnario": "Open Payments Media Fails ODA Check", "Test_Sce_Description": "Verify that if an Open Payments Media fails the ODA check, the device returns the appropriate feedback and the Declined \u2013 Try Another Card (Failed ODA Check) screen is provided to the cardholder."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "With/Without audio messages", "Use_Case_Name": "Tap on SA Tool with Open Payments Media \u2013 Customer requests audio messages", "Test_Scnario": "Open Payments Media Fails Expiry Check", "Test_Sce_Description": "Verify that if an Open Payments Media fails the Expiry Check, the device returns the appropriate feedback and the Declined \u2013 Card Expired Screen is provided to the cardholder."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "With/Without audio messages", "Use_Case_Name": "Tap on SA Tool with Open Payments Media \u2013 Customer requests audio messages", "Test_Scnario": "Open Payments Media on ATS Deny List", "Test_Sce_Description": "Verify that if the Open Payments Media is on the ATS deny list and the SA Tool is online, the device checks the deny list and provides the appropriate feedback."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "With/Without audio messages", "Use_Case_Name": "Tap on SA Tool with Open Payments Media \u2013 Customer requests audio messages", "Test_Scnario": "Audio Jack Instructions", "Test_Sce_Description": "Verify that when a customer inserts headphones into the Audio jack, the device automatically switches into audio assist mode and provides audio instructions detailing how to adjust the volume and prompt the user to tap their media."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "With/Without audio messages", "Use_Case_Name": "Tap on SA Tool with Open Payments Media \u2013 Customer requests audio messages", "Test_Scnario": "Default O/D Processing", "Test_Sce_Description": "Verify that when the Open Payments Media contains a Default O/D, the device processes a full Fare-by-Zone transaction (both tap-on and tap-off) and ATS deducts the Full Fare value for the station-to-station trip accounting for all Fare considerations associated to the trip."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "With/Without audio messages", "Use_Case_Name": "Accepting Fare Payment with Open Payments Media \u2013 Fare Payment Resulting from Failed Inspection", "Test_Scnario": "Open Payments Media on Deny List", "Test_Sce_Description": "Verify that when the Open Payments Media is on the deny list, the right to travel is not conferred. The device should send the tap to ATS and return a response that the media is on the deny list. The Declined \u2013 Suspended: Unpaid Fares Screen or Declined \u2013 Suspended: Other Screen should be provided to the cardholder."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "With/Without audio messages", "Use_Case_Name": "Accepting Fare Payment with Open Payments Media \u2013 Fare Payment Resulting from Failed Inspection", "Test_Scnario": "Open Payments Media on Local Deny List", "Test_Sce_Description": "Verify that when the Open Payments Media is on the local deny list, the right to travel is not conferred. The device should check the local deny list and return a response that the media is denied. The Declined \u2013 Suspended: Unpaid Fares Screen or Declined \u2013 Suspended: Other Screen should be provided to the cardholder."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "With/Without audio messages", "Use_Case_Name": "Accepting Fare Payment with Open Payments Media \u2013 Fare Payment Resulting from Failed Inspection", "Test_Scnario": "Multiple NFC Media Presentation", "Test_Sce_Description": "Verify that when multiple NFC media are presented to the device at one time, the device blocks all fare payment functionality. The Anti-Collision Error Screen should be provided to the cardholder."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "With/Without audio messages", "Use_Case_Name": "Accepting Fare Payment with Open Payments Media \u2013 Fare Payment Resulting from Failed Inspection", "Test_Scnario": "Device in Out-of-Service State", "Test_Sce_Description": "Verify that when the device is in Out-of-Service state, the Not In Service Screen is provided to the cardholder and the device does not detect the media."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "With/Without audio messages", "Use_Case_Name": "Accepting Fare Payment with Open Payments Media \u2013 Fare Payment Resulting from Failed Inspection", "Test_Scnario": "Error Occurrence", "Test_Sce_Description": "Verify that when an error occurs on the device that does not cover the exception cases, the device records the tap and the Declined \u2013 See Customer Service Screen is provided to the cardholder."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "With/Without audio messages", "Use_Case_Name": "Accepting Fare Payment with Open Payments Media \u2013 Fare Payment Resulting from Failed Inspection", "Test_Scnario": "Open Payments Media Not on Approved List", "Test_Sce_Description": "Verify that when a customer attempts to tap an Open Payments media not on the approved media list while the device is in beta mode, the device performs the necessary validation and determines that the Open Payments Media is unable to pass the expiry check. The Declined \u2013 Card Expired Screen should be provided to the cardholder."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "With/Without audio messages", "Use_Case_Name": "Accepting Fare Payment with Open Payments Media \u2013 Fare Payment Resulting from Failed Inspection", "Test_Scnario": "Open Payments Media on ATS Deny List", "Test_Sce_Description": "Verify that when the Open Payments Media is on the ATS deny list, the right to travel is not conferred. The device should send the tap to ATS and return a response that the media is on the deny list. The Declined \u2013 Unpaid Fares (Suspended: Unpaid Fares) screen or the Declined \u2013 Try Another Card (Suspended: Other) screen should be provided to the cardholder."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "With/Without audio messages", "Use_Case_Name": "Accepting Fare Payment with Open Payments Media \u2013 Fare Payment Resulting from Failed Inspection", "Test_Scnario": "Open Payments Media on Local Deny List and Device Offline", "Test_Sce_Description": "Verify that when the Open Payments Media is on the local deny list and the device is offline, the right to travel is not conferred. The device should check the local deny list and return a response that the media is denied. The Declined \u2013 Unpaid Fares (Suspended: Unpaid Fares) screen or the Declined \u2013 Try Another Card (Suspended: Other) screen should be provided to the cardholder."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "With/Without audio messages", "Use_Case_Name": "Accepting Fare Payment with Open Payments Media \u2013 Fare Payment Resulting from Failed Inspection", "Test_Scnario": "Multiple NFC Media Presentation in Fare Payment Mode", "Test_Sce_Description": "Verify that when multiple NFC media are presented to the device at one time in Fare Payment mode, the device blocks all fare payment functionality and displays an error toast message."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "With/Without audio messages", "Use_Case_Name": "Accepting Fare Payment with Open Payments Media \u2013 Fare Payment Resulting from Failed Inspection", "Test_Scnario": "Device in Out-of-Service State in Fare Payment Mode", "Test_Sce_Description": "Verify that when the device is in Out-of-Service state in Fare Payment mode, the device displays the Not in Service screen to the cardholder and does not detect the media."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "With/Without audio messages", "Use_Case_Name": "Accepting Fare Payment with Open Payments Media \u2013 Fare Payment Resulting from Failed Inspection", "Test_Scnario": "Error Occurrence in Fare Payment Mode", "Test_Sce_Description": "Verify that when an error occurs on the device in Fare Payment mode that does not cover the exception cases, the device records the tap and the Declined \u2013 Please Contact Customer Service screen is provided to the cardholder."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "With/Without audio messages", "Use_Case_Name": "Accepting Fare Payment with Open Payments Media \u2013 Fare Payment Resulting from Failed Inspection", "Test_Scnario": "Open Payments Media Not on Approved List in Pilot Mode", "Test_Sce_Description": "Verify that when a customer attempts to tap an Open Payments media not on the approved media list while the device is in Pilot mode, the device performs the necessary validation and determines that the Open Payments Media is unable to pass the expiry check. The Declined \u2013 Card Expired Screen should be provided to the cardholder."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "With/Without audio messages", "Use_Case_Name": "Open Payments Media Fails Expiry Check during Fare Payment", "Test_Scnario": "Open Payments Media Fails Expiry Check", "Test_Sce_Description": "This scenario tests the functionality of the system when the Open Payments Media fails the expiry check. The system should perform the necessary validation and determine that the Open Payments Media is unable to pass the expiry check. The Declined \u2013 Card Expired Screen should be provided to the cardholder and the declined tap should be sent to ATS."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "With/Without audio messages", "Use_Case_Name": "Open Payments Media Fails Expiry Check during Fare Payment", "Test_Scnario": "Open Payments Media is on the ATS deny list and the SA Tool is online", "Test_Sce_Description": "This scenario tests the functionality of the system when the Open Payments Media is on the deny list and the SA Tool is online. The device should send the tap to ATS and return a response that the media is on the deny list. The right to travel should not be conferred and the Declined \u2013 Unpaid Fares (Suspended: Unpaid Fares) screen should be provided to the cardholder."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "With/Without audio messages", "Use_Case_Name": "Open Payments Media Fails Expiry Check during Fare Payment", "Test_Scnario": "Open Payments Media is on the local deny list and the SA Tool is offline", "Test_Sce_Description": "This scenario tests the functionality of the system when the Open Payments Media is on the local deny list and the SA Tool is offline. The device should check the local deny list and return a response that the media is denied. The right to travel should not be conferred and the Declined \u2013 Unpaid Fares (Suspended: Unpaid Fares) screen should be provided to the cardholder."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "With/Without audio messages", "Use_Case_Name": "Open Payments Media Fails Expiry Check during Fare Payment", "Test_Scnario": "Multiple NFC media are presented to the device at one time in Fare Payment mode", "Test_Sce_Description": "This scenario tests the functionality of the system when multiple NFC media are presented to the device at one time. The device should block all fare payment functionality and display an error toast message."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "With/Without audio messages", "Use_Case_Name": "Open Payments Media Fails Expiry Check during Fare Payment", "Test_Scnario": "Tap an Open Payments Media when SA Tool is in Out-of-Service state", "Test_Sce_Description": "This scenario tests the functionality of the system when the SA Tool is in Out-of-Service state. The device should display the Not in Service screen to the cardholder and not detect the media."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "With/Without audio messages", "Use_Case_Name": "Open Payments Media Fails Expiry Check during Fare Payment", "Test_Scnario": "Customer attempts to tap on and an error has occurred", "Test_Sce_Description": "This scenario tests the functionality of the system when an error has occurred on the device. The device should record the tap and the Declined \u2013 Please Contact Customer Service screen should be provided to the cardholder."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "With/Without audio messages", "Use_Case_Name": "Open Payments Media Fails Expiry Check during Fare Payment", "Test_Scnario": "Customer attempts to tap an Open Payments media not on the approved media list while the device is in Pilot mode", "Test_Sce_Description": "This scenario tests the functionality of the system when the Open Payments Media is not on the approved media list and the device is in Pilot mode. The device should perform the necessary validation and determine that the Open Payments Media is unable to pass the checks. The Declined \u2013 Failed ODA Check screen should be provided to the cardholder."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "With/Without audio messages", "Use_Case_Name": "Open Payments Media Fails Expiry Check during Fare Payment", "Test_Scnario": "Open Payments Media has already tapped-on using an Online Device", "Test_Sce_Description": "This scenario tests the functionality of the system when the cardholder taps-on again at an SA Tool at the same station within the SA Tool Tap-on anti-passback Window, whereby the initial device and secondary device tapped on were both online. The device should send the tap to ATS and return a response that the cardholder has already tapped on at the same station and is within the Tap-on anti-passback Window."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "With/Without audio messages", "Use_Case_Name": "Open Payments Media Fails Expiry Check during Fare Payment", "Test_Scnario": "Open Payments Media has already tapped-on using an Offline Device (Anti-passback)", "Test_Sce_Description": "This scenario tests the functionality of the system when the cardholder taps-on again at an SA Tool at the same station within the SA Tool Tap-on anti-passback Window whereby the initial device tapped, and secondary device(s) is the same device and is offline. The device should accept the tap and check the latent transaction processor on the same device for a previous tap within the anti-passback window."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "With/Without audio messages", "Use_Case_Name": "Open Payments Media is on the ATS deny list and the SA Tool is online", "Test_Scnario": "Verify Open Payments Media on ATS deny list", "Test_Sce_Description": "This scenario is to verify that when the Open Payments Media is on the ATS deny list, the right to travel is not conferred. The device should send the tap to ATS and return a response that the media is on the deny list. The Declined \u2013 Suspended: Unpaid Fares Screen or Declined \u2013 Suspended: Other Screen should be provided to the cardholder. An error should be captured and logged in the background when this occurs to help with troubleshooting the issue. This error should also be captured in the SOTI logs."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "With/Without audio messages", "Use_Case_Name": "Open Payments Media is on the ATS deny list and the SA Tool is online", "Test_Scnario": "Verify Open Payments Media on local deny list", "Test_Sce_Description": "This scenario is to verify that when the Open Payments Media is on the local deny list, the right to travel is not conferred. The device should check the local deny list and return a response that the media is denied. The Declined \u2013 Suspended: Unpaid Fares Screen or Declined \u2013 Suspended: Other Screen should be provided to the cardholder. An error should be captured and logged in the background when this occurs to help with troubleshooting the issue. This error should also be captured in the SOTI logs. The declined tap should be sent to ATS."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "With/Without audio messages", "Use_Case_Name": "Open Payments Media is on the ATS deny list and the SA Tool is online", "Test_Scnario": "Verify multiple NFC media presented to device", "Test_Sce_Description": "This scenario is to verify that when multiple NFC media are presented to the device at one time, the device blocks all fare payment functionality. The Anti-Collision Error Screen should be provided to the cardholder. An error should be captured and logged in the background when this occurs to help with troubleshooting the issue. This error should also be captured in the SOTI logs. The declined tap should be sent to ATS."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "With/Without audio messages", "Use_Case_Name": "Open Payments Media is on the ATS deny list and the SA Tool is online", "Test_Scnario": "Verify device in Out-of-Service state", "Test_Sce_Description": "This scenario is to verify that when the device is in Out-of-Service state, the Not In Service Screen is provided to the cardholder and the device does not detect the media. The device should remain in Out-of-Service State."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "With/Without audio messages", "Use_Case_Name": "Open Payments Media is on the ATS deny list and the SA Tool is online", "Test_Scnario": "Verify error occurrence on device", "Test_Sce_Description": "This scenario is to verify that when an error has occurred on the device that does not cover the exception cases above, the device records the tap. The Declined \u2013 See Customer Service Screen should be provided to the cardholder. An error should be captured and logged in the background when this occurs to help with troubleshooting the issue. This error should also be captured in the SOTI logs. The declined tap should be sent to ATS."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "With/Without audio messages", "Use_Case_Name": "Open Payments Media is on the ATS deny list and the SA Tool is online", "Test_Scnario": "Verify Open Payments media not on approved list in beta mode", "Test_Sce_Description": "This scenario is to verify that when a customer attempts to tap an Open Payments media not on the approved media list while the device is in beta mode, the right to travel is not conferred. The device should send the tap to ATS and return a response that the media is on the deny list. The Declined \u2013 Suspended: Unpaid Fares Screen or the Declined \u2013 Suspended: Other Screen should be provided to the cardholder. An error should be captured and logged in the background when this occurs to help with troubleshooting the issue. This error should also be captured in the SOTI logs."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "With/Without audio messages", "Use_Case_Name": "Open Payments Media is on the ATS deny list and the SA Tool is online", "Test_Scnario": "Verify anti-passback functionality when device is online", "Test_Sce_Description": "This scenario is to verify that when a customer attempts to tap-on immediately after tapping-off at the same station and the device is online, the device sends the tap to ATS and returns a response that the cardholder has already tapped on at the same station and is within the Tap-on anti-passback Window. The Declined \u2013 Already Tapped Screen should be provided to the cardholder. An error should be captured and logged in the background when this occurs to help with troubleshooting the issue. This error should also be captured in the SOTI logs."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "With/Without audio messages", "Use_Case_Name": "Open Payments Media is on the ATS deny list and the SA Tool is online", "Test_Scnario": "Verify anti-passback functionality when device is offline", "Test_Sce_Description": "This scenario is to verify that when a customer attempts to tap-on immediately after tapping-off at the same station and the device is offline, the device should not allow the tap and should provide the appropriate feedback to the cardholder."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "With/Without audio messages", "Use_Case_Name": "Adjust Audio Tone Volume", "Test_Scnario": "Adjusting Audio Tone Volume", "Test_Sce_Description": "This scenario tests the functionality of adjusting the audio tone volume of the SA Tool application. The operator will open the Settings screen from the More options menu and adjust the audio tone volume to the desired level. The application should play the accepted tone at the newly selected volume. If the operator presses the back button on the settings screen, the application should revert to the last saved configuration. If the operator selects done, the desired volume should be saved for the shift. The volume should reset to default volume when the operator signs out or a new operator signs in."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "With/Without audio messages", "Use_Case_Name": "Adjust Audio Tone Volume", "Test_Scnario": "Configuring Vibration Control", "Test_Sce_Description": "This scenario tests the process for an operator to configure vibration control on the SA Tool. The operator will select the Settings option on SA Tool and configure vibration control by selecting the desired vibration level. If the operator presses the back button on the settings screen, the application should revert to the last saved configuration. If the operator selects Apply, the desired vibration control should be saved for the shift. The default haptic feedback should be reset when the operator signs out or a new operator signs in."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "With/Without audio messages", "Use_Case_Name": "Adjust Audio Tone Volume", "Test_Scnario": "Selecting Route Parameters", "Test_Sce_Description": "This scenario tests the process for an operator selecting desired route/lines for inspection purposes on the SA Tool. The operator will select the Settings option on the SA Tool, select Inspection Parameters, and select Rail or Bus depending on their inspection location. The operator will then select the desired current route/line and enter the Vehicle Id if applicable. If there is a cross boundary relationship for the flat fare TA, the Operator will also select region. The next/apply button should not be enabled until all fields are entered."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "With/Without audio messages", "Use_Case_Name": "Adjust Audio Tone Volume", "Test_Scnario": "Transaction Reversal with No Valid Fare", "Test_Sce_Description": "This scenario tests the exception flow when there is no valid fare to be reversed. If no valid fare to be reversed is found, the application should display a declined message to the customer and the transaction should not be conducted. The SA Tool application should play a declined audio tone."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "With/Without audio messages", "Use_Case_Name": "Adjust Audio Tone Volume", "Test_Scnario": "Transaction Reversal with Blocked Farecard", "Test_Sce_Description": "This scenario tests the exception flow when the customer's Farecard is blocked. The device should send the request to ATS for processing and ATS should detect the card is blocked. ATS should return a declined/error result back to the SA Tool. The SA Tool application should display a declined message to the customer and the transaction should not be conducted. The SA Tool should play the declined audio tone. The Scratchpad should be updated accordingly."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "With/Without audio messages", "Use_Case_Name": "Adjust Audio Tone Volume", "Test_Scnario": "Transaction Reversal with Farecard on Deny List", "Test_Sce_Description": "This scenario tests the exception flow when the customer's Farecard is on the Deny List. ATS should detect the Virtual Card is on the Deny List, move the card to blocked and remove it from the Deny List. ATS should return a declined/error result back to SA Tool. The SA Tool application should display a declined message to the customer and the transaction should not be conducted. The SA Tool should play the declined audio tone. The Scratchpad should be updated accordingly."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "With/Without audio messages", "Use_Case_Name": "Adjust Audio Tone Volume", "Test_Scnario": "Transaction Reversal with Low Battery", "Test_Sce_Description": "This scenario tests the exception flow when the battery goes below the low battery threshold during reversal. If the low battery threshold is reached before the transaction is reversed, the application should switch to \u201cOut of Service\u201d mode. If the low battery threshold is reached after the transaction is reversed, the application should still switch to \u201cOut of Service\u201d mode."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "With/Without audio messages", "Use_Case_Name": "Adjust Audio Tone Volume", "Test_Scnario": "Transaction Reversal with Non-Farecard", "Test_Sce_Description": "This scenario tests the exception flow when the customer taps a card that is not a Farecard. The SA Tool application should not respond, but the device error message \u201cCard Read Error\u201d should be displayed for a short period of time."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "With/Without audio messages", "Use_Case_Name": "Operator Configures Vibration Control", "Test_Scnario": "Verify the functionality of vibration control adjustment", "Test_Sce_Description": "This scenario is to test whether the operator is able to adjust the vibration control on the SA Tool. The operator should be able to select the desired vibration level and the changes should be saved for the shift. The default haptic feedback should be reset when the operator signs out or a new operator signs in."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "With/Without audio messages", "Use_Case_Name": "Operator Configures Vibration Control", "Test_Scnario": "Verify the functionality of back button on settings screen", "Test_Sce_Description": "This scenario is to test whether the application reverts to the last saved configuration when the operator presses the back button on the settings screen. The operator should be able to make changes to the vibration control, but these changes should not be saved if the back button is pressed before selecting Apply."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "With/Without audio messages", "Use_Case_Name": "Operator Configures Vibration Control", "Test_Scnario": "Verify the functionality of Apply button on settings screen", "Test_Sce_Description": "This scenario is to test whether the desired vibration control is saved for the shift when the operator selects Apply on the settings screen. The operator should be able to make changes to the vibration control and these changes should be saved when the Apply button is selected."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "With/Without audio messages", "Use_Case_Name": "Operator Configures Vibration Control", "Test_Scnario": "Verify the functionality of vibration control reset", "Test_Sce_Description": "This scenario is to test whether the default haptic feedback is reset when the operator signs out or a new operator signs in. The vibration control should revert to the default settings when the operator signs out or when a new operator signs in."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "With/Without audio messages", "Use_Case_Name": "Operator Configures Vibration Control", "Test_Scnario": "Verify the performance of vibration control adjustment", "Test_Sce_Description": "This scenario is to test the performance of the vibration control adjustment feature. The application should not lag or crash when the operator is adjusting the vibration control. The changes should be saved quickly and efficiently when the Apply button is selected."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "With/Without audio messages", "Use_Case_Name": "Operator Configures Vibration Control", "Test_Scnario": "Verify the security of vibration control adjustment", "Test_Sce_Description": "This scenario is to test the security of the vibration control adjustment feature. Unauthorized users should not be able to access or make changes to the vibration control settings. The operator should be required to sign in before being able to adjust the vibration control."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "With/Without audio messages", "Use_Case_Name": "Operator selects new Route/Line", "Test_Scnario": "Operator selects new Line but doesn\u2019t select a trip", "Test_Sce_Description": "Verify that when the operator selects a new line but doesn't select a trip, the application resets the trip and stop selection. The apply button should be greyed out and the operator should not be able to save the current inspection parameters."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "With/Without audio messages", "Use_Case_Name": "Operator selects new Route/Line", "Test_Scnario": "Operator selects the desired trip and stop", "Test_Sce_Description": "Verify that the operator can select the desired trip and stop. In case of a bus, the operator should also be able to enter the vehicle id. If the operator doesn\u2019t select a stop, the application should auto-select the first stop/station as the inspection location."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "With/Without audio messages", "Use_Case_Name": "Operator selects new Route/Line", "Test_Scnario": "FLATFARE BASED SA Tool operator selects new route parameters", "Test_Sce_Description": "Verify that the FLATFARE BASED SA Tool operator can select new route parameters. The operator should be able to select the Additional Options menu on the SA Tool, select Route Parameters, and select Surface (Bus / Streetcar) or Subway toggle. The option to save/apply the selection should not be enabled until all of the mandatory fields are filled in."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "With/Without audio messages", "Use_Case_Name": "Operator selects new Route/Line", "Test_Scnario": "Operator enables auto-positioning for current location", "Test_Sce_Description": "Verify that the operator can enable auto-location for route parameters on the SA Tool. The SA Tool should automatically compute the current inspection location and the auto location signal quality indicator on the home screen should start reflecting the auto location signal quality."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "With/Without audio messages", "Use_Case_Name": "Operator selects new Route/Line", "Test_Scnario": "GPS functionality is remotely enabled/disabled on the SA Tool", "Test_Sce_Description": "Verify that the SA Tool application can receive remote configuration and enable/disable the auto location functionality based on the new configuration in the background. If the operator had auto location enabled, and the feature was remotely disabled, a greyed out icon should be shown."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "With/Without audio messages", "Use_Case_Name": "Operator selects new Route/Line", "Test_Scnario": "Operator disables auto-location functionality", "Test_Sce_Description": "Verify that the operator can disable the auto-location functionality on the SA Tool. The operator should be able to select the Additional Options menu on the SA Tool, select Route Parameters, and turn off automatic location."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "With/Without audio messages", "Use_Case_Name": "Operator selects new Route/Line", "Test_Scnario": "Operator Switches Device Mode for Current SP (DISTANCE BASED TRANSIT and GO Only)", "Test_Sce_Description": "Verify that the operator can change device mode between DISTANCE BASED TRANSIT and GO. The operator should be able to select SP (DISTANCE BASED TRANSIT/GO) on the Login screen, enter their login credentials and select \u201clogin\u201d. The SA Tool application should validate credentials and the operator should be successfully logged in."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "With/Without audio messages", "Use_Case_Name": "Operator selects new Route/Line", "Test_Scnario": "SP Switching is disabled", "Test_Sce_Description": "Verify that when SP Switching is disabled, the operator is displayed a toast message notification notifying SP switching is disabled. The application should enable / disable the SP switching functionality only if no operator is logged in."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Written warning", "Use_Case_Name": "Device is turned off after the operator confirms that they would like to sign-out", "Test_Scnario": "Sign In with New Operator ID and Passcode", "Test_Sce_Description": "Verify that a new operator can sign in to the SA Tool using their own user ID and passcode. The system should display a message indicating that the current operator is already signed in and ask if the new operator wants to sign in anyway. Upon selecting 'Yes', the current operator should be signed off from the SA Tool."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Written warning", "Use_Case_Name": "Device is turned off after the operator confirms that they would like to sign-out", "Test_Scnario": "Shut Down SA Tool via Physical Device Button", "Test_Sce_Description": "Verify that the operator can manually shut down the SA Tool by pressing and holding the physical power button. The system should display a confirmation message with the options 'Power off' and other standard functions. Upon selecting 'Power off' and confirming shut-down, the device should turn off."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Written warning", "Use_Case_Name": "Device is turned off after the operator confirms that they would like to sign-out", "Test_Scnario": "Reboot SA Tool", "Test_Sce_Description": "Verify that the operator can manually reboot the SA Tool at any time by pressing and holding the physical power button. The system should display a confirmation message with the options 'Power off' and other standard functions. Upon selecting the 'Restart' option, the device should restart by turning off and powering on."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Written warning", "Use_Case_Name": "Device is turned off after the operator confirms that they would like to sign-out", "Test_Scnario": "Out-of-Service State", "Test_Sce_Description": "Verify that when the SA Tool is in 'Out-of-Service' state, it is unable to accept a Farecard for any kind of functionality and may require maintenance to restore out-of-order components. If an operator is signed-in and the device goes into out-of-service state, the SA Tool application should not close the operator\u2019s shift unless the operator has requested to sign-off."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Written warning", "Use_Case_Name": "Device is turned off after the operator confirms that they would like to sign-out", "Test_Scnario": "Standby State", "Test_Sce_Description": "Verify that the SA Tool can switch into a Standby state where the screen will turn off after a configurable period of inactivity. In this state, the SA Tool should disconnect from all peripherals to conserve battery life. An operator should be able to bring the device back into In-Service state by pressing the physical power button and signing in to the device lock screen."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Written warning", "Use_Case_Name": "Device is turned off after the operator confirms that they would like to sign-out", "Test_Scnario": "Revenue Mode", "Test_Sce_Description": "Verify that upon logon, the operator can select the Revenue Mode which allows them to interact with customers. In this mode, the operator should be able to perform inspection, fare payments, sales, refunds/reversals, farecard queries, and other customer service gestures. The SA Tool should only have access to the EPT in the revenue mode and accept credit and debit payments."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Written warning", "Use_Case_Name": "Device is turned off after the operator confirms that they would like to sign-out", "Test_Scnario": "Training Mode", "Test_Sce_Description": "Verify that the Training Mode allows the SA Tool operator to mimic all functionality available within Sales Mode without accepting payment, and only sending non-revenue transactions. Only non-revenue Farecard should be accepted in Training Mode. All paper tickets printed from the SA Tool should indicate that they were printed while in training mode."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Written warning", "Use_Case_Name": "Device is turned off after the operator confirms that they would like to sign-out", "Test_Scnario": "User Access and Functionality", "Test_Sce_Description": "Verify that different users have access to different functionalities as per their roles. For example, SA Tool Operators should have access to Revenue Mode, Sales, Fare Payment, Inspection, SA Tool Remote Access, Unblock Farecard, and Modify Card Concession. However, Training users should not have access to these functionalities."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Written warning", "Use_Case_Name": "Device is turned off after the operator confirms that they would like to sign-out", "Test_Scnario": "Device Parameter Tool Configurations", "Test_Sce_Description": "Verify that the configurations for the SA Tool introduced under the Open Payments release in the Device Parameter Tool are working as expected."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Written warning", "Use_Case_Name": "Operator Signs-Off while the SA Tool is Offline", "Test_Scnario": "Verify the functionality of SA Tool in Out-of-Service state", "Test_Sce_Description": "Check if the SA Tool is unable to accept a Farecard for any kind of functionality when it is in \u201cOut-of-Service\u201d state and may require maintenance to restore out-of-order components."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Written warning", "Use_Case_Name": "Operator Signs-Off while the SA Tool is Offline", "Test_Scnario": "Verify the operator's shift status when device goes into out-of-service state", "Test_Sce_Description": "Check if the SA Tool application does not close the operator\u2019s shift unless the operator has requested to sign-off when the device goes into out-of-service state."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Written warning", "Use_Case_Name": "Operator Signs-Off while the SA Tool is Offline", "Test_Scnario": "Verify the functionality of SA Tool in Standby state", "Test_Sce_Description": "Check if the operator can temporarily suspend all SA Tool functionality while in Standby state and if the SA Tool switches into a Standby state where the screen will turn off after remaining inactive for a configurable period of time."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Written warning", "Use_Case_Name": "Operator Signs-Off while the SA Tool is Offline", "Test_Scnario": "Verify the disconnection of peripherals in Standby state", "Test_Sce_Description": "Check if the SA tool disconnects from all the peripherals i.e. the card reader, PIN pad and the printer to conserve battery life when it is in the standby mode."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Written warning", "Use_Case_Name": "Operator Signs-Off while the SA Tool is Offline", "Test_Scnario": "Verify the functionality of SA Tool application running in the background", "Test_Sce_Description": "Check if the SA Tool device allows the operator to use authorized third-party applications as needed and if the SA Tool application is in Standby State when it is running but is not in the foreground."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Written warning", "Use_Case_Name": "Operator Signs-Off while the SA Tool is Offline", "Test_Scnario": "Verify the functionality of SA Tool in Revenue mode", "Test_Sce_Description": "Check if the Revenue Mode allows the SA Tool operator to interact with customers and perform inspection, fare payments, sales, refunds/reversals, farecard queries, and other customer service gestures."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Written warning", "Use_Case_Name": "Operator Signs-Off while the SA Tool is Offline", "Test_Scnario": "Verify the functionality of SA Tool in Training mode", "Test_Sce_Description": "Check if the Training Mode allows the SA Tool operator to mimic all functionality available within Sales Mode without accepting payment, and only sending non-revenue transactions."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Written warning", "Use_Case_Name": "Operator Signs-Off while the SA Tool is Offline", "Test_Scnario": "Verify the functionality of Shut-Down SA Tool via Physical Device Button", "Test_Sce_Description": "Check if the operator can manually shut down the SA Tool by pressing and holding the physical power button on the SA Tool and if the SA Tool displays a confirmation message with the following options: Power off, Other options."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Written warning", "Use_Case_Name": "Operator Signs-Off while the SA Tool is Offline", "Test_Scnario": "Verify the functionality of Reboot SA Tool", "Test_Sce_Description": "Check if the operator can manually reboot the SA Tool at any time by pressing and holding the physical power button on the SA Tool and if the SA Tool displays a confirmation message with the following options: Power off, Other options."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Written warning", "Use_Case_Name": "New operator signs into current operator\u2019s shift", "Test_Scnario": "New Operator Sign In", "Test_Sce_Description": "Verify that a new operator can sign in to the SA Tool successfully. The new operator should be able to enter their user ID and passcode, and upon selecting 'Sign In', a message should indicate that the current operator is signed in and ask if the new operator wants to sign in anyway. Upon selecting 'Yes', the current operator should be signed off from the SA Tool."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Written warning", "Use_Case_Name": "New operator signs into current operator\u2019s shift", "Test_Scnario": "SA Tool Offline Sign-Off", "Test_Sce_Description": "Verify that the SA Tool application can close the current shift and generate the shift statistics email when the device is offline. The email should be stored on the device and sent once the SA Tool is powered on and re-establishes connection to the network."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Written warning", "Use_Case_Name": "New operator signs into current operator\u2019s shift", "Test_Scnario": "SA Tool Low Battery Sign-Out", "Test_Sce_Description": "Verify that the SA Tool turns off after the operator confirms that they would like to sign out when the battery level reaches 1%. The application should close off the current shift and generate the inspection shift statistics email that is stored on the device. The email should be sent once the SA Tool is powered on and re-establishes connection to the network."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Written warning", "Use_Case_Name": "New operator signs into current operator\u2019s shift", "Test_Scnario": "First Time Sign-In with Temporary Passcode and No Network", "Test_Sce_Description": "Verify that when the network is unavailable, the SA Tool application displays a message to the operator requesting them to sign in when network is available. The operator should not be signed in."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Written warning", "Use_Case_Name": "New operator signs into current operator\u2019s shift", "Test_Scnario": "Maximum Number of Login Attempts", "Test_Sce_Description": "Verify that the SA Tool application records a cumulative number of unsuccessful sign on attempts for a single valid operator badge ID on a SA Tool. When the number of unsuccessful sign-in attempts reaches the maximum number of sign-on attempts, the SA Tool application should deny access to that operator until the operator badge ID is unlocked by the CLIENT Operations user or automatically unlocked after a configurable amount of time."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Written warning", "Use_Case_Name": "New operator signs into current operator\u2019s shift", "Test_Scnario": "New Passcode is Same as Temporary Passcode", "Test_Sce_Description": "Verify that the SA Tool application detects that the new passcode is the same as the temporary passcode in the Subsystem. The SA Tool Device should inform the user of the error and clear the new passcode fields."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Written warning", "Use_Case_Name": "New operator signs into current operator\u2019s shift", "Test_Scnario": "New Passcode Length Does Not Meet Pre-Defined Criteria", "Test_Sce_Description": "Verify that the SA Tool will not enable the submit button until the passcode entered is the correct length."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Written warning", "Use_Case_Name": "Shut-Down SA Tool via Physical Device Button", "Test_Scnario": "Shut-Down SA Tool via Physical Device Button", "Test_Sce_Description": "Verify that the operator is able to shut down the SA Tool by pressing and holding the physical power button. The tool should display a confirmation message with options including 'Power off'. Upon selecting 'Power off' and confirming shut-down, the device should turn off."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Written warning", "Use_Case_Name": "Shut-Down SA Tool via Physical Device Button", "Test_Scnario": "Confirmation Message Display", "Test_Sce_Description": "Verify that upon pressing and holding the physical power button, the SA Tool displays a confirmation message with the following options: Power off, Reset, Airplane Mode, etc. These options should be standard functions from the device\u2019s operating system and cannot be modified."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Written warning", "Use_Case_Name": "Shut-Down SA Tool via Physical Device Button", "Test_Scnario": "Operator Shift Closure on Shut-Down", "Test_Sce_Description": "Verify that if the operator shift is open when the device is shut down, the operator shift will not be closed."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Written warning", "Use_Case_Name": "Shut-Down SA Tool via Physical Device Button", "Test_Scnario": "Reboot SA Tool", "Test_Sce_Description": "Verify that the operator is able to reboot the SA Tool by pressing and holding the physical power button. The tool should display a confirmation message with options including 'Restart'. Upon selecting 'Restart', the device should turn off and power on again."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Written warning", "Use_Case_Name": "Shut-Down SA Tool via Physical Device Button", "Test_Scnario": "Airplane Mode Functionality", "Test_Sce_Description": "Verify that selecting 'Airplane Mode' from the power options disables the network communications. The device should not be able to perform any inspections, counters and queries. An airplane icon should be displayed in the top notification bar when this mode is enabled."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Written warning", "Use_Case_Name": "Shut-Down SA Tool via Physical Device Button", "Test_Scnario": "Sound Level Adjustment", "Test_Sce_Description": "Verify that the device sound levels can be adjusted using the side buttons on the SA Tool. The minimum limit for volume should be configurable."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Written warning", "Use_Case_Name": "Shut-Down SA Tool via Physical Device Button", "Test_Scnario": "Out-of-Service State Functionality", "Test_Sce_Description": "Verify that when the SA Tool is in 'Out-of-Service' state, it is unable to accept a Farecard for any kind of functionality and may require maintenance to restore out-of-order components. If an operator is signed-in and the device goes into out-of-service state, the SA Tool application should not close the operator\u2019s shift unless the operator has requested to sign-off."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Written warning", "Use_Case_Name": "Shut-Down SA Tool via Physical Device Button", "Test_Scnario": "Standby State Functionality", "Test_Sce_Description": "Verify that the SA Tool switches into a Standby state where the screen will turn off after remaining inactive for a configurable period of time. In this state, the SA tool should disconnect from all the peripherals i.e. the card reader, PIN pad and the printer to conserve battery life."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Written warning", "Use_Case_Name": "Shut-Down SA Tool via Physical Device Button", "Test_Scnario": "Revenue Mode Functionality", "Test_Sce_Description": "Verify that in Revenue Mode, the SA Tool operator can interact with customers, perform inspection, fare payments, sales, refunds/reversals, farecard queries, and other customer service gestures. The tool should only have access to the EPT in the revenue mode and should accept the credit and debit payments."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Written warning", "Use_Case_Name": "Shut-Down SA Tool via Physical Device Button", "Test_Scnario": "Training Mode Functionality", "Test_Sce_Description": "Verify that in Training Mode, the SA Tool operator can mimic all functionality available within Sales Mode without accepting payment, and only sending non-revenue transactions. Only non-revenue Farecard should be accepted in Training Mode. Payment by credit /debit should not be enabled. All paper tickets printed from the SA Tool should indicate that they were printed while in training mode."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Written warning", "Use_Case_Name": "Reboot SA Tool", "Test_Scnario": "Reboot SA Tool - Successful Restart", "Test_Sce_Description": "Verify that the SA Tool successfully restarts when the operator selects the restart option. The device should turn off and then power on again."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Written warning", "Use_Case_Name": "Reboot SA Tool", "Test_Scnario": "Reboot SA Tool - Airplane Mode Disabled", "Test_Sce_Description": "Verify that when the operator selects the 'Airplane Mode' option, the device's network communications are disabled. The device should not be able to perform any inspections, counters, and queries. An airplane icon should be displayed in the top notification bar when this mode is enabled."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Written warning", "Use_Case_Name": "Reboot SA Tool", "Test_Scnario": "Reboot SA Tool - Airplane Mode Enabled", "Test_Sce_Description": "Verify that the operator can disable the 'Airplane Mode' by pressing and holding the power button, and selecting the airplane mode option. The airplane icon should disappear from the top notification bar when this mode is disabled."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Written warning", "Use_Case_Name": "Reboot SA Tool", "Test_Scnario": "Reboot SA Tool - Sound Levels", "Test_Sce_Description": "Verify that the device's sound levels can be adjusted using the side buttons on the SA Tool. The minimum limit for volume should be configurable."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Written warning", "Use_Case_Name": "Reboot SA Tool", "Test_Scnario": "Reboot SA Tool - Unsuccessful Restart", "Test_Sce_Description": "Verify that the SA Tool displays an error message when the restart operation fails."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Written warning", "Use_Case_Name": "Reboot SA Tool", "Test_Scnario": "Reboot SA Tool - Network Connection", "Test_Sce_Description": "Verify that the SA Tool can operate in offline mode when the device is unable to connect to a network. The 'Forget passcode' and 'passcode change' functionalities should be unavailable when the device is offline."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Written warning", "Use_Case_Name": "Reboot SA Tool", "Test_Scnario": "Reboot SA Tool - Storage, Battery or Secure Element Failure", "Test_Sce_Description": "Verify that the SA Tool goes to out-of-service state when the continuous self-diagnostics for storage, battery or secure element find errors or failures in any of these elements. A critical event should be sent to SOTI Mobicontrol and CSM."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Written warning", "Use_Case_Name": "Reboot SA Tool", "Test_Scnario": "Reboot SA Tool - Switching between Applications", "Test_Sce_Description": "Verify that the operator can switch between the SA Tool Application and the whitelisted third-party applications on the device. The operator should be able to navigate to the list of whitelisted third-party applications by tapping on the home button present on the android navigation bar."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Written warning", "Use_Case_Name": "Reboot SA Tool", "Test_Scnario": "Reboot SA Tool - Launching Already Open Application", "Test_Sce_Description": "Verify that the operator can launch an application that is already running in the device background. The operator should be able to navigate through the list of open applications until they find the desired application."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Pay Fare", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance - Customer Has an Anonymous Farecard with an ePurse Balance Less than the Fare Amount", "Test_Scnario": "Inspection of customer's farecard", "Test_Sce_Description": "Verify that the operator is able to inspect the customer's farecard and determine whether they have paid a fare or not."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Pay Fare", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance - Customer Has an Anonymous Farecard with an ePurse Balance Less than the Fare Amount", "Test_Scnario": "Selection of payment function", "Test_Sce_Description": "Verify that the operator is able to select the payment function on the SA Tool inspection results screen."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Pay Fare", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance - Customer Has an Anonymous Farecard with an ePurse Balance Less than the Fare Amount", "Test_Scnario": "Recording of fare payment and inspection transactions", "Test_Sce_Description": "Verify that the SA Tool is able to record both the fare payment and inspection transactions."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Pay Fare", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance - Customer Has an Anonymous Farecard with an ePurse Balance Less than the Fare Amount", "Test_Scnario": "Display of toast notification", "Test_Sce_Description": "Verify that the SA Tool application returns to the Tap Card screen and a toast notification is displayed of the corresponding inspection action."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Pay Fare", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance - Customer Has an Anonymous Farecard with an ePurse Balance Less than the Fare Amount", "Test_Scnario": "Handling of anonymous Farecard with insufficient ePurse Balance", "Test_Sce_Description": "Verify that the SA Tool detects when the Card is Anonymous and the ePurse Balance is less than the fare amount, and appropriately displays a declined message to the customer."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Pay Fare", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance - Customer Has an Anonymous Farecard with an ePurse Balance Less than the Fare Amount", "Test_Scnario": "Handling of Farecard in overdraft", "Test_Sce_Description": "Verify that the SA Tool application detects when the Farecard is in overdraft, and appropriately displays a declined message to the customer."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Pay Fare", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance - Customer Has an Anonymous Farecard with an ePurse Balance Less than the Fare Amount", "Test_Scnario": "Handling of blocked Farecard", "Test_Sce_Description": "Verify that the SA Tool application detects when the Farecard is blocked, and appropriately displays a declined message to the customer."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Pay Fare", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance - Customer Has an Anonymous Farecard with an ePurse Balance Less than the Fare Amount", "Test_Scnario": "Handling of Farecard on the hotlist", "Test_Sce_Description": "Verify that the SA Tool application detects when the Farecard is on the hotlist, updates the card\u2019s status to blocked, and appropriately displays a declined message to the customer."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Pay Fare", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance - Customer Has an Anonymous Farecard with an ePurse Balance Less than the Fare Amount", "Test_Scnario": "Handling of low battery threshold during payment", "Test_Sce_Description": "Verify that if the low battery threshold is reached before Step 5, the application switches to \u201cOut of Service\u201d mode. Else, the customers fare payment is processed as per Step 5. The application then switches to \u201cOut of Service\u201d mode."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Pay Fare", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance - Customer Has an Anonymous Farecard with an ePurse Balance Less than the Fare Amount", "Test_Scnario": "Handling of non-Farecard tap", "Test_Sce_Description": "Verify that if a customer taps a card that is not a Farecard, the SA Tool displays the \u201cCard Read Error\u201d toast message for a short period of time."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Pay Fare", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance - Customer Has an Anonymous Farecard with an ePurse Balance Less than the Fare Amount", "Test_Scnario": "Handling of Farecard within the Anti-Passback Window", "Test_Sce_Description": "Verify that if a customer\u2019s card is within the Anti-Passback Window, the device detects that the Farecard fails the Anti-Passback checks and the SA Tool application will display a declined message the customer."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Pay Fare", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance - Customer Has an Anonymous Farecard with an ePurse Balance Less than the Fare Amount", "Test_Scnario": "Handling of non-activated card", "Test_Sce_Description": "Verify that if a customer taps a non-activated card, the SA Tool application will display a declined message the customer."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Pay Fare", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance - Customer has an Overdraft on their Registered Farecard", "Test_Scnario": "Overdraft Detection", "Test_Sce_Description": "Verify that the SA Tool application correctly detects and displays a negative balance when a customer's Farecard is in overdraft."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Pay Fare", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance - Customer has an Overdraft on their Registered Farecard", "Test_Scnario": "Overdraft Alert", "Test_Sce_Description": "Verify that the SA Tool application shows the Overdraft Full Screen Alert when an operator attempts to sell a Farecard product while the card is in overdraft."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Pay Fare", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance - Customer has an Overdraft on their Registered Farecard", "Test_Scnario": "Overdraft Dismissal", "Test_Sce_Description": "Verify that the operator can dismiss the overdraft notice if the customer did not intend to load products, and that the SA Tool returns to the Sell screen after dismissal."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Pay Fare", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance - Customer has an Overdraft on their Registered Farecard", "Test_Scnario": "Overdraft Handling", "Test_Sce_Description": "Verify that the SA Tool correctly adds the overdraft amount to the shopping cart as an e-purse load when the operator selects 'continue' after an overdraft notice."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Pay Fare", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance - Customer has an Overdraft on their Registered Farecard", "Test_Scnario": "Overdraft Payment", "Test_Sce_Description": "Verify that the SA Tool correctly processes payment and transaction when a customer is loading an e-purse and pays the overdraft amount, and that the correct amount is loaded onto the e-purse."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Pay Fare", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance - Customer has an Overdraft on their Registered Farecard", "Test_Scnario": "Overdraft Clearance", "Test_Sce_Description": "Verify that the SA Tool correctly clears the overdraft amount when a customer is loading products that do not include e-purse and pays the overdraft amount."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Pay Fare", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance - Customer has an Overdraft on their Registered Farecard", "Test_Scnario": "Overdraft Fee Handling", "Test_Sce_Description": "Verify that the SA Tool correctly adds an overdraft fee to the shopping cart when the TA has configured an overdraft fee in the EOD, and that the operator can choose to waive the fee."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Pay Fare", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance - Customer has an Overdraft on their Registered Farecard", "Test_Scnario": "Overdraft Fee Payment", "Test_Sce_Description": "Verify that the SA Tool correctly processes payment and transaction when a customer is loading an e-purse and pays the overdraft amount plus the fee, and that the correct amount is loaded onto the e-purse."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Pay Fare", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance - Customer has an Overdraft on their Registered Farecard", "Test_Scnario": "Overdraft Fee Clearance", "Test_Sce_Description": "Verify that the SA Tool correctly clears the overdraft amount and fee when a customer is loading products that do not include e-purse and pays the overdraft amount plus the fee."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Pay Fare", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance - Customer has an Overdraft on their Registered Farecard", "Test_Scnario": "Overdraft Fee Waiver", "Test_Sce_Description": "Verify that the SA Tool correctly processes the transaction when the operator chooses to waive the overdraft fee, and that the overdraft amount is correctly cleared."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Pay Fare", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance - Customer\u2019s Farecard is Blocked", "Test_Scnario": "Detecting Blocked Farecard", "Test_Sce_Description": "Verify that the SA Tool application correctly detects when a customer's Farecard is blocked. The application should display a declined message to the customer and the transaction should not be conducted."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Pay Fare", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance - Customer\u2019s Farecard is Blocked", "Test_Scnario": "Declined Audio Tone for Blocked Farecard", "Test_Sce_Description": "Verify that the SA Tool plays the declined audio tone when a customer's Farecard is blocked. The audio tone should be clear and audible."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Pay Fare", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance - Customer\u2019s Farecard is Blocked", "Test_Scnario": "Timeout Functionality for Blocked Farecard", "Test_Sce_Description": "Verify that the SA Tool application returns to the Tap Card screen after a configurable timeout when a customer's Farecard is blocked. The timeout should be consistent and the transition back to the Tap Card screen should be smooth."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Pay Fare", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance - Customer\u2019s Farecard is Blocked", "Test_Scnario": "Detecting Non-Adult, Non-Child, Non-Discreet Concessions", "Test_Sce_Description": "Verify that the SA Tool application correctly detects when a customer's Farecard has a valid Non-Adult, Non-Child, non-discreet concession. The application should display a declined message to the customer and the transaction should not be conducted."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Pay Fare", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance - Customer\u2019s Farecard is Blocked", "Test_Scnario": "Declined Audio Tone for Non-Adult, Non-Child, Non-Discreet Concessions", "Test_Sce_Description": "Verify that the SA Tool plays the declined audio tone when a customer's Farecard has a valid Non-Adult, Non-Child, non-discreet concession. The audio tone should be clear and audible."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Pay Fare", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance - Customer\u2019s Farecard is Blocked", "Test_Scnario": "Timeout Functionality for Non-Adult, Non-Child, Non-Discreet Concessions", "Test_Sce_Description": "Verify that the SA Tool application returns to the Tap Card screen after a configurable timeout when a customer's Farecard has a valid Non-Adult, Non-Child, non-discreet concession. The timeout should be consistent and the transition back to the Tap Card screen should be smooth."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Pay Fare", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance - Customer\u2019s Farecard is Blocked", "Test_Scnario": "Performance of SA Tool with Blocked Farecard", "Test_Sce_Description": "Verify the performance of the SA Tool application when a customer's Farecard is blocked. The application should not slow down or crash and should handle the situation efficiently."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Pay Fare", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance - Customer\u2019s Farecard is Blocked", "Test_Scnario": "Performance of SA Tool with Non-Adult, Non-Child, Non-Discreet Concessions", "Test_Sce_Description": "Verify the performance of the SA Tool application when a customer's Farecard has a valid Non-Adult, Non-Child, non-discreet concession. The application should not slow down or crash and should handle the situation efficiently."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Pay Fare", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance - Customer\u2019s Farecard is Blocked", "Test_Scnario": "Security of SA Tool with Blocked Farecard", "Test_Sce_Description": "Verify the security of the SA Tool application when a customer's Farecard is blocked. The application should not expose any sensitive customer information during this process."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Pay Fare", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance - Customer\u2019s Farecard is Blocked", "Test_Scnario": "Security of SA Tool with Non-Adult, Non-Child, Non-Discreet Concessions", "Test_Sce_Description": "Verify the security of the SA Tool application when a customer's Farecard has a valid Non-Adult, Non-Child, non-discreet concession. The application should not expose any sensitive customer information during this process."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Pay Fare", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance - Customer\u2019s Farecard is on the Hotlist", "Test_Scnario": "Fare Payment with Valid Regular Service Transfer Product", "Test_Sce_Description": "Verify that the fare payment is successfully deducted from the Virtual Card E-Purse when the farecard has a valid Regular Service Transfer Product and the tap is within the Transfer Window."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Pay Fare", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance - Customer\u2019s Farecard is on the Hotlist", "Test_Scnario": "Fare Payment after reaching Off Peak Daily Cap", "Test_Sce_Description": "Verify that the fare payment is successfully deducted from the Virtual Card E-Purse when the farecard has reached the off peak Daily Cap Limit, has not reached the Peak Daily Cap limit and is out of the transfer window."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Pay Fare", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance - Customer\u2019s Farecard is on the Hotlist", "Test_Scnario": "Fare Payment with Special Event Transfer Product", "Test_Sce_Description": "Verify that the fare payment is successfully deducted from the Virtual Card E-Purse when the farecard has a valid Special Event Transfer Product and the tap is within the Transfer Window."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Pay Fare", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance - Customer\u2019s Farecard is on the Hotlist", "Test_Scnario": "Fare Payment with Non-Adult Concession", "Test_Sce_Description": "Verify that the fare payment is successfully deducted from the Virtual Card E-Purse when the customer\u2019s Farecard has a Valid Non-Adult concession."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Pay Fare", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance - Customer\u2019s Farecard is on the Hotlist", "Test_Scnario": "Fare Payment with Farecard on Action or Load Value List", "Test_Sce_Description": "Verify that the fare payment is successfully deducted from the Virtual Card E-Purse when the customer\u2019s Farecard is on the Action or Load Value list."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Pay Fare", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance - Customer\u2019s Farecard is on the Hotlist", "Test_Scnario": "Fare Payment with Audio Messages", "Test_Sce_Description": "Verify that the fare payment is successfully deducted from the Virtual Card E-Purse when the customer requests audio messages for the fare payment."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Pay Fare", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance - Customer\u2019s Farecard is on the Hotlist", "Test_Scnario": "Fare Payment after reaching Daily Cap", "Test_Sce_Description": "Verify that no fare is deducted from the Virtual Card E-Purse when the farecard has reached the Daily Cap Limit and is out of the transfer window."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Pay Fare", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance - Customer\u2019s Farecard is on the Hotlist", "Test_Scnario": "Fare Payment on Premium or Special Event Route", "Test_Sce_Description": "Verify that the fare payment is successfully deducted from the Virtual Card E-Purse when the farecard is tapped on a premium service or special event route/location."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Pay Fare", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance - Customer\u2019s Farecard is on the Hotlist", "Test_Scnario": "Fare Payment with Fare Upgrade", "Test_Sce_Description": "Verify that the fare payment is successfully deducted from the Virtual Card E-Purse when the farecard is tapped on a premium service or special event route/location after previously riding on a regular service route and the tap is within the Transfer Window."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Pay Fare", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance - Customer\u2019s Farecard is on the Hotlist", "Test_Scnario": "Fare Payment during Peak hours after reaching Off Peak Daily Cap", "Test_Sce_Description": "Verify that the fare payment is successfully deducted from the Virtual Card E-Purse when the farecard is tapped during peak hours after previously reaching off peak daily cap and is out of the transfer window."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Pay Fare", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance - Battery goes below the low battery threshold during payment", "Test_Scnario": "Low Battery Threshold During Payment", "Test_Sce_Description": "Verify that when the low battery threshold is reached before Step 5, the application switches to \u201cOut of Service\u201d mode. If not, the customer's fare payment is processed as per Step 5. After this, the application should switch to \u201cOut of Service\u201d mode."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Pay Fare", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance - Battery goes below the low battery threshold during payment", "Test_Scnario": "Processing Fare Payment with Blocked Farecard", "Test_Sce_Description": "Verify that when a customer's Farecard is blocked, the SA Tool application detects this and displays a declined message to the customer. The transaction should not be conducted and the SA Tool should play the declined audio tone."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Pay Fare", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance - Battery goes below the low battery threshold during payment", "Test_Scnario": "Processing Fare Payment with Farecard on Hotlist", "Test_Sce_Description": "Verify that when a customer's Farecard is on the hotlist, the SA Tool application detects this, updates the card\u2019s status to blocked, and displays a declined message to the customer. The transaction should not be conducted and the SA Tool should play the declined audio tone."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Pay Fare", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance - Battery goes below the low battery threshold during payment", "Test_Scnario": "Processing Fare Payment with Non-Farecard", "Test_Sce_Description": "Verify that when a customer taps a card that is not a Farecard, the SA Tool displays the \u201cCard Read Error\u201d toast message for a short period of time."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Pay Fare", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance - Battery goes below the low battery threshold during payment", "Test_Scnario": "Processing Fare Payment with Farecard within Anti-Passback Window", "Test_Sce_Description": "Verify that when a customer's card is within the Anti-Passback Window, the device detects that the Farecard fails the Anti-Passback checks and the SA Tool application displays a declined message to the customer. The transaction should not be conducted and the SA Tool should play the declined audio tone."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Pay Fare", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance - Battery goes below the low battery threshold during payment", "Test_Scnario": "Processing Fare Payment with Non-Activated Card", "Test_Sce_Description": "Verify that when a customer taps a non-activated card, the SA Tool application detects this and displays a declined message to the customer. The transaction should not be conducted and the SA Tool should play the declined audio tone."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Pay Fare", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance - Battery goes below the low battery threshold during payment", "Test_Scnario": "Performance of SA Tool Application", "Test_Sce_Description": "Verify the performance of the SA Tool application by checking the response time when processing fare payments, switching to 'Out of Service' mode, and displaying error messages."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Pay Fare", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance - Battery goes below the low battery threshold during payment", "Test_Scnario": "Security of SA Tool Application", "Test_Sce_Description": "Verify the security of the SA Tool application by checking if it properly encrypts sensitive data such as Farecard information and transaction details."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Pay Fare", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance \u2013 Customer taps a card that is not a Farecard", "Test_Scnario": "Accepting Fare Payment from a Farecard using ePurse Balance - Unreadable Farecard", "Test_Sce_Description": "This scenario tests the functionality of the SA Tool when the Farecard is unreadable. The SA Tool should detect the Farecard but fail to read it correctly, indicating to the operator that the Farecard is unreadable. If the customer taps the NFC reader again and the tap is successful, the remaining steps should be conducted. If the tap is unsuccessful, the SA Tool should again indicate to the operator that the Farecard is unreadable."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Pay Fare", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance \u2013 Customer taps a card that is not a Farecard", "Test_Scnario": "Accepting Fare Payment from a Farecard using ePurse Balance - Non-Adult, Non-Child, non-discreet concessions", "Test_Sce_Description": "This scenario tests the functionality of the SA Tool when the customer's Farecard has a Valid Non-Adult, Non-Child, non-discreet concession. The SA Tool should successfully process the fare payment and display the successful fare payment screen for non-adult concession."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Pay Fare", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance \u2013 Customer taps a card that is not a Farecard", "Test_Scnario": "Accepting Fare Payment from a Farecard using ePurse Balance - ePurse balance less than fare amount", "Test_Sce_Description": "This scenario tests the functionality of the SA Tool when the customer's ePurse balance is less than the fare amount. The SA Tool should send the tap to ATS for processing, which should remove the fare from the Virtual Card e-Purse and put the card into overdraft. The right to travel should be conferred to the Cardholder by updating the Virtual Card accordingly."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Pay Fare", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance \u2013 Customer taps a card that is not a Farecard", "Test_Scnario": "Accepting Fare Payment from a Farecard using ePurse Balance - Valid intra-agency transfer product", "Test_Sce_Description": "This scenario tests the functionality of the SA Tool when the customer's Virtual Card contains a valid intra-agency transfer product. The SA Tool should read the Virtual Card, deduct $0 from the Virtual Card E-Purse, and confer the right to travel to the Cardholder by updating the Virtual Card."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Pay Fare", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance \u2013 Customer taps a card that is not a Farecard", "Test_Scnario": "Accepting Fare Payment from a Farecard using ePurse Balance - Valid inter-agency transfer product", "Test_Sce_Description": "This scenario tests the functionality of the SA Tool when the customer's Virtual Card contains a valid inter-agency transfer product. The SA Tool should read the Virtual Card, deduct $0 from the Virtual Card E-Purse, and confer the right to travel to the Cardholder by updating the Virtual Card."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Pay Fare", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance \u2013 Customer taps a card that is not a Farecard", "Test_Scnario": "Accepting Fare Payment from a Farecard using ePurse Balance - Locked Farecard", "Test_Sce_Description": "This scenario tests the functionality of the SA Tool when the Farecard is locked. The SA Tool should detect that the Farecard is locked and not confer the right to travel to the Cardholder."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Pay Fare", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance \u2013 Customer taps a card that is not a Farecard", "Test_Scnario": "Accepting Fare Payment from a Farecard using ePurse Balance - Non-Recognizable media", "Test_Sce_Description": "This scenario tests the functionality of the SA Tool when a non-recognizable card is tapped. The SA Tool should display the 'Try Another Card' screen."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Pay Fare", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance \u2013 Customer\u2019s Farecard is within the Anti-Passback Window", "Test_Scnario": "Fare Payment with Valid Non-Adult Concession", "Test_Sce_Description": "Verify that the system correctly accepts fare payment from a farecard with a valid non-adult concession. The system should correctly identify the concession, apply the appropriate fare, and deduct the amount from the ePurse balance."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Pay Fare", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance \u2013 Customer\u2019s Farecard is within the Anti-Passback Window", "Test_Scnario": "Fare Payment with Expired Period Pass and Insufficient ePurse Balance", "Test_Sce_Description": "Verify that the system correctly declines fare payment from a farecard with an expired period pass and an ePurse balance less than the fare amount. The system should display a declined message and not conduct the transaction."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Pay Fare", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance \u2013 Customer\u2019s Farecard is within the Anti-Passback Window", "Test_Scnario": "Fare Payment with Blocked Farecard", "Test_Sce_Description": "Verify that the system correctly declines fare payment from a blocked farecard. The system should detect the blocked status, display a declined message, and not conduct the transaction."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Pay Fare", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance \u2013 Customer\u2019s Farecard is within the Anti-Passback Window", "Test_Scnario": "Fare Payment with Farecard on Hotlist", "Test_Sce_Description": "Verify that the system correctly declines fare payment from a farecard on the hotlist. The system should detect the hotlist status, update the card's status to blocked, display a declined message, and not conduct the transaction."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Pay Fare", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance \u2013 Customer\u2019s Farecard is within the Anti-Passback Window", "Test_Scnario": "Fare Payment with Low Battery", "Test_Sce_Description": "Verify that the system correctly handles a fare payment when the battery goes below the low battery threshold during payment. The system should either switch to 'Out of Service' mode before processing the payment or process the payment and then switch to 'Out of Service' mode."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Pay Fare", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance \u2013 Customer\u2019s Farecard is within the Anti-Passback Window", "Test_Scnario": "Fare Payment with Non-Farecard", "Test_Sce_Description": "Verify that the system correctly handles a tap from a card that is not a farecard. The system should display a 'Card Read Error' message."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Pay Fare", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance \u2013 Customer\u2019s Farecard is within the Anti-Passback Window", "Test_Scnario": "Fare Payment within Anti-Passback Window", "Test_Sce_Description": "Verify that the system correctly declines fare payment from a farecard within the Anti-Passback Window. The system should detect the Anti-Passback status, display a declined message, and not conduct the transaction."}, {"Function_Flow_Name": "Inspection", "Sub_Flow_Name": "Pay Fare", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance \u2013 Customer\u2019s Farecard is within the Anti-Passback Window", "Test_Scnario": "Fare Payment with Non-Activated Card", "Test_Sce_Description": "Verify that the system correctly declines fare payment from a non-activated card. The system should detect the non-activated status, display a declined message, and not conduct the transaction."}, {"Function_Flow_Name": "Farecard Sales", "Sub_Flow_Name": "E-Purse load", "Use_Case_Name": "Payment by e-Purse", "Test_Scnario": "Testing e-Purse Payment Functionality", "Test_Sce_Description": "Verify that the customer can successfully pay for a transaction using their e-Purse balance. The operator should be able to select the e-Purse payment option, and the SA Tool should automatically detect the Farecard and initiate the identification checks. If the Farecard is valid, not on the hotlist, and has sufficient balance, the payment should be processed successfully."}, {"Function_Flow_Name": "Farecard Sales", "Sub_Flow_Name": "E-Purse load", "Use_Case_Name": "Payment by e-Purse", "Test_Scnario": "Testing Insufficient e-Purse Balance", "Test_Sce_Description": "Verify that the SA Tool correctly identifies when the e-Purse balance is insufficient to cover the payment amount. In this case, a notification should inform the operator that the e-Purse balance cannot cover the price, and the operator should be able to cancel the transaction or choose another mode of payment."}, {"Function_Flow_Name": "Farecard Sales", "Sub_Flow_Name": "E-Purse load", "Use_Case_Name": "Payment by e-Purse", "Test_Scnario": "Testing e-Purse Deduction Functionality", "Test_Sce_Description": "Verify that the SA Tool correctly deducts the payment amount from the e-Purse balance and uses it as a payment means for the transaction. If the deduction is not successful, the SA Tool should print a receipt with the corresponding error messages."}, {"Function_Flow_Name": "Farecard Sales", "Sub_Flow_Name": "E-Purse load", "Use_Case_Name": "Payment by e-Purse", "Test_Scnario": "Testing Cheque Payment Functionality", "Test_Sce_Description": "Verify that the customer can successfully pay for a transaction using a cheque. The operator should be able to select the cheque payment option, and the SA Tool should populate the full payment amount. The operator should then be able to confirm the final sale."}, {"Function_Flow_Name": "Farecard Sales", "Sub_Flow_Name": "E-Purse load", "Use_Case_Name": "Payment by e-Purse", "Test_Scnario": "Testing Fare Payment during Peak Hours", "Test_Sce_Description": "Verify that the SA Tool correctly computes the fare and deducts the amount from the Virtual Card E-Purse when a fare payment is made during peak hours after previously reaching off peak daily cap (outside the transfer window)."}, {"Function_Flow_Name": "Farecard Sales", "Sub_Flow_Name": "E-Purse load", "Use_Case_Name": "Payment by e-Purse", "Test_Scnario": "Testing Fare Payment on Premium Service Route", "Test_Sce_Description": "Verify that the SA Tool correctly computes the fare and deducts the amount from the Virtual Card E-Purse when a fare payment is made on a premium service route/location after previously riding on a Special Event service route (within the transfer window)."}, {"Function_Flow_Name": "Farecard Sales", "Sub_Flow_Name": "E-Purse load", "Use_Case_Name": "Payment by e-Purse", "Test_Scnario": "Testing Fare Payment with Valid Non-Adult Concession", "Test_Sce_Description": "Verify that the SA Tool correctly identifies when a customer's Farecard has a Valid Non-Adult concession and processes the fare payment accordingly."}, {"Function_Flow_Name": "Farecard Sales", "Sub_Flow_Name": "E-Purse load", "Use_Case_Name": "Payment by e-Purse", "Test_Scnario": "Testing Performance of SA Tool", "Test_Sce_Description": "Verify that the SA Tool performs efficiently and without delay when processing payments, reading Farecard information, and performing identification checks. The tool should also handle multiple transactions simultaneously without any performance issues."}, {"Function_Flow_Name": "Farecard Sales", "Sub_Flow_Name": "E-Purse load", "Use_Case_Name": "Payment by e-Purse", "Test_Scnario": "Testing Security of SA Tool", "Test_Sce_Description": "Verify that the SA Tool securely processes payments and protects customer information. The tool should not store sensitive information such as e-Purse balance or Farecard serial number, and all transactions should be encrypted."}, {"Function_Flow_Name": "Farecard Sales", "Sub_Flow_Name": "E-Purse load", "Use_Case_Name": "Payment by Cheque", "Test_Scnario": "Payment by Cheque - Operator proceeds to payment", "Test_Sce_Description": "Verify that the operator can proceed to payment when the customer wants to pay with a cheque. The system should allow the operator to select the cheque payment option and proceed to the next step."}, {"Function_Flow_Name": "Farecard Sales", "Sub_Flow_Name": "E-Purse load", "Use_Case_Name": "Payment by Cheque", "Test_Scnario": "Payment by Cheque - Full payment amount population", "Test_Sce_Description": "Verify that the SA Tool populates the full payment amount correctly when the customer is paying by cheque. The operator should have the option to edit the amount if the customer is making a split payment."}, {"Function_Flow_Name": "Farecard Sales", "Sub_Flow_Name": "E-Purse load", "Use_Case_Name": "Payment by Cheque", "Test_Scnario": "Payment by Cheque - Customer presents the cheque", "Test_Sce_Description": "Verify that the operator can enter the balance and confirm the final sale on the pop up when the customer presents the cheque. The system should accept the entered balance and allow the operator to confirm the sale."}, {"Function_Flow_Name": "Farecard Sales", "Sub_Flow_Name": "E-Purse load", "Use_Case_Name": "Payment by Cheque", "Test_Scnario": "Payment by Cheque - Operator receives the cheque", "Test_Sce_Description": "Verify that the operator can receive the cheque and store it with them. The system should record the receipt of the cheque and update the transaction status accordingly."}, {"Function_Flow_Name": "Farecard Sales", "Sub_Flow_Name": "E-Purse load", "Use_Case_Name": "Payment by Cheque", "Test_Scnario": "Payment by Cheque - Transaction completion", "Test_Sce_Description": "Verify that the operator can indicate the transaction is complete after receiving the cheque. The system should update the transaction status to complete and display the options to print a customer receipt or return to the main menu."}, {"Function_Flow_Name": "Farecard Sales", "Sub_Flow_Name": "E-Purse load", "Use_Case_Name": "Payment by Cheque", "Test_Scnario": "Payment by Cheque - Exception flow", "Test_Sce_Description": "Verify that the system handles exceptions correctly when the operator selects a payment amount greater than the total shopping cart amount. The system should provide an error notification and not allow the operator to proceed with the transaction."}, {"Function_Flow_Name": "Farecard Sales", "Sub_Flow_Name": "E-Purse load", "Use_Case_Name": "Payment by Cheque", "Test_Scnario": "Payment by Cheque - Alternate flow", "Test_Sce_Description": "Verify that the system handles alternate flows correctly when the operator selects a payment amount greater than the total shopping cart amount and has selected Credit Voucher, Coupon, or Warrant as part of the split payment. The system should not allow the operator to proceed with the transaction and the 'Change Due' option should not be available."}, {"Function_Flow_Name": "Farecard Sales", "Sub_Flow_Name": "Period pass load", "Use_Case_Name": "Accepting Fare Payment from a Farecard using Period Pass \u2013 Limited Period Pass", "Test_Scnario": "Valid Limited Period Pass within time limit", "Test_Sce_Description": "Verify that the system correctly accepts fare payment from a farecard with a valid Limited Period Pass within the time limit of the product."}, {"Function_Flow_Name": "Farecard Sales", "Sub_Flow_Name": "Period pass load", "Use_Case_Name": "Accepting Fare Payment from a Farecard using Period Pass \u2013 Limited Period Pass", "Test_Scnario": "Valid Limited Period Pass outside time limit with sufficient e-Purse balance", "Test_Sce_Description": "Verify that the system correctly deducts fare from the e-Purse balance when a farecard with a valid Limited Period Pass is used outside the time limit of the product."}, {"Function_Flow_Name": "Farecard Sales", "Sub_Flow_Name": "Period pass load", "Use_Case_Name": "Accepting Fare Payment from a Farecard using Period Pass \u2013 Limited Period Pass", "Test_Scnario": "Expired Period Pass with insufficient e-Purse balance", "Test_Sce_Description": "Verify that the system correctly declines the transaction when a farecard with an expired Period Pass and insufficient e-Purse balance is used."}, {"Function_Flow_Name": "Farecard Sales", "Sub_Flow_Name": "Period pass load", "Use_Case_Name": "Accepting Fare Payment from a Farecard using Period Pass \u2013 Limited Period Pass", "Test_Scnario": "Blocked Farecard", "Test_Sce_Description": "Verify that the system correctly declines the transaction when a blocked farecard is used."}, {"Function_Flow_Name": "Farecard Sales", "Sub_Flow_Name": "Period pass load", "Use_Case_Name": "Accepting Fare Payment from a Farecard using Period Pass \u2013 Limited Period Pass", "Test_Scnario": "Farecard on Deny List", "Test_Sce_Description": "Verify that the system correctly blocks the farecard and declines the transaction when a farecard on the Deny List is used."}, {"Function_Flow_Name": "Farecard Sales", "Sub_Flow_Name": "Period pass load", "Use_Case_Name": "Accepting Fare Payment from a Farecard using Period Pass \u2013 Limited Period Pass", "Test_Scnario": "Low battery during payment", "Test_Sce_Description": "Verify that the system correctly processes the remote lists even when the battery goes below the low battery threshold during a successful Farecard tap."}, {"Function_Flow_Name": "Farecard Sales", "Sub_Flow_Name": "Period pass load", "Use_Case_Name": "Accepting Fare Payment from a Farecard using Period Pass \u2013 Limited Period Pass", "Test_Scnario": "Valid Period Pass with higher Service class fare value", "Test_Sce_Description": "Verify that the system correctly accepts the period pass fare payment when the farecard has a valid Period Pass where the Service class fare value is greater than the current route/location Service Class fare value."}, {"Function_Flow_Name": "Farecard Sales", "Sub_Flow_Name": "Period pass load", "Use_Case_Name": "Accepting Fare Payment from a Farecard using Period Pass \u2013 Limited Period Pass", "Test_Scnario": "Valid Child Concession", "Test_Sce_Description": "Verify that the system correctly accepts the fare payment and plays the successful fare payment audio tone for Child concession when a farecard with a Valid Child concession is used."}, {"Function_Flow_Name": "Farecard Sales", "Sub_Flow_Name": "Period pass load", "Use_Case_Name": "Accepting Fare Payment from a Farecard using Period Pass \u2013 Limited Period Pass", "Test_Scnario": "Fare Payment Resulting from Failed Inspection", "Test_Sce_Description": "Verify that the system correctly records both the fare payment and inspection transactions when the operator inspects a customer\u2019s farecard and determines that they have not paid a fare."}, {"Function_Flow_Name": "Farecard Sales", "Sub_Flow_Name": "Period pass load", "Use_Case_Name": "Accepting Fare Payment from a Farecard using Period Pass \u2013 Limited Period Pass", "Test_Scnario": "Anonymous Farecard with Expired Period Pass and Insufficient ePurse Balance", "Test_Sce_Description": "Verify that the system correctly declines the transaction when an anonymous farecard with an expired Period Pass and insufficient ePurse balance is used."}, {"Function_Flow_Name": "Farecard Sales", "Sub_Flow_Name": "Period pass load", "Use_Case_Name": "Accepting Fare Payment from a Farecard using Period Pass \u2013 Limited Period Pass outside of valid time with sufficient e-Purse balance", "Test_Scnario": "Validating Fare Payment with Limited Period Pass within valid time", "Test_Sce_Description": "This scenario is to validate the functionality of the system when a fare payment is made using a farecard with a valid Limited Period Pass within the valid time. The system should successfully accept the fare payment."}, {"Function_Flow_Name": "Farecard Sales", "Sub_Flow_Name": "Period pass load", "Use_Case_Name": "Accepting Fare Payment from a Farecard using Period Pass \u2013 Limited Period Pass outside of valid time with sufficient e-Purse balance", "Test_Scnario": "Validating Fare Payment with Limited Period Pass outside valid time with sufficient e-Purse balance", "Test_Sce_Description": "This scenario is to validate the functionality of the system when a fare payment is made using a farecard with a valid Limited Period Pass outside the valid time but with sufficient e-Purse balance. The system should successfully accept the fare payment by deducting the fare from the e-Purse."}, {"Function_Flow_Name": "Farecard Sales", "Sub_Flow_Name": "Period pass load", "Use_Case_Name": "Accepting Fare Payment from a Farecard using Period Pass \u2013 Limited Period Pass outside of valid time with sufficient e-Purse balance", "Test_Scnario": "Validating Fare Payment with Anonymous Farecard with Expired Period Pass and Insufficient ePurse Balance", "Test_Sce_Description": "This scenario is to validate the functionality of the system when a fare payment is attempted using an anonymous farecard with an expired period pass and insufficient ePurse balance. The system should decline the transaction and display a declined message to the customer."}, {"Function_Flow_Name": "Farecard Sales", "Sub_Flow_Name": "Period pass load", "Use_Case_Name": "Accepting Fare Payment from a Farecard using Period Pass \u2013 Limited Period Pass outside of valid time with sufficient e-Purse balance", "Test_Scnario": "Validating Fare Payment with Blocked Farecard", "Test_Sce_Description": "This scenario is to validate the functionality of the system when a fare payment is attempted using a blocked farecard. The system should decline the transaction and display a declined message to the customer."}, {"Function_Flow_Name": "Farecard Sales", "Sub_Flow_Name": "Period pass load", "Use_Case_Name": "Accepting Fare Payment from a Farecard using Period Pass \u2013 Limited Period Pass outside of valid time with sufficient e-Purse balance", "Test_Scnario": "Validating Fare Payment with Farecard on Deny List", "Test_Sce_Description": "This scenario is to validate the functionality of the system when a fare payment is attempted using a farecard that is on the Deny List. The system should remove the card from the Deny List, set it to blocked, decline the transaction, and display a declined message to the customer."}, {"Function_Flow_Name": "Farecard Sales", "Sub_Flow_Name": "Period pass load", "Use_Case_Name": "Accepting Fare Payment from a Farecard using Period Pass \u2013 Limited Period Pass outside of valid time with sufficient e-Purse balance", "Test_Scnario": "Validating Fare Payment during Low Battery", "Test_Sce_Description": "This scenario is to validate the functionality of the system when the battery goes below the low battery threshold during a fare payment. The system should switch to 'Out of Service' mode after processing the fare payment if the low battery threshold is reached."}, {"Function_Flow_Name": "Farecard Sales", "Sub_Flow_Name": "Period pass load", "Use_Case_Name": "Accepting Fare Payment from a Farecard using Period Pass \u2013 Limited Period Pass outside of valid time with sufficient e-Purse balance", "Test_Scnario": "Validating Fare Payment with Non-Activated Card", "Test_Sce_Description": "This scenario is to validate the functionality of the system when a fare payment is attempted using a non-activated card. The system should display a 'Card Read Error' message."}, {"Function_Flow_Name": "Farecard Sales", "Sub_Flow_Name": "Period pass load", "Use_Case_Name": "Accepting Fare Payment from a Farecard using Period Pass \u2013 Limited Period Pass outside of valid time with sufficient e-Purse balance", "Test_Scnario": "Validating Fare Payment with Farecard within Anti-Passback Window", "Test_Sce_Description": "This scenario is to validate the functionality of the system when a fare payment is attempted using a farecard that is within the Anti-Passback Window. The system should decline the transaction and display a declined message to the customer."}, {"Function_Flow_Name": "Farecard Sales", "Sub_Flow_Name": "Period pass load", "Use_Case_Name": "Accepting Fare Payment from a Farecard using Period Pass - Customer has a Valid Child Concession on their Farecard", "Test_Scnario": "Validating Period Pass fare payment", "Test_Sce_Description": "Verify that the SA Tool correctly identifies a valid Period Pass and accepts the fare payment. The fare payment should be successful and the fare should be deducted from the Period Pass balance."}, {"Function_Flow_Name": "Farecard Sales", "Sub_Flow_Name": "Period pass load", "Use_Case_Name": "Accepting Fare Payment from a Farecard using Period Pass - Customer has a Valid Child Concession on their Farecard", "Test_Scnario": "Validating Limited Period Pass fare payment within valid time", "Test_Sce_Description": "Verify that the SA Tool correctly identifies a valid Limited Period Pass and accepts the fare payment when the tap is occurring within the time limit of the Limited Period Pass Product. The fare payment should be successful and the fare should be deducted from the Limited Period Pass balance."}, {"Function_Flow_Name": "Farecard Sales", "Sub_Flow_Name": "Period pass load", "Use_Case_Name": "Accepting Fare Payment from a Farecard using Period Pass - Customer has a Valid Child Concession on their Farecard", "Test_Scnario": "Validating Limited Period Pass fare payment outside valid time with sufficient e-Purse balance", "Test_Sce_Description": "Verify that the SA Tool correctly identifies a valid Limited Period Pass and accepts the fare payment when the tap is occurring outside the time limit of the Limited Period Pass Product but the farecard has sufficient e-Purse balance to cover the transaction. The fare payment should be successful and the fare should be deducted from the e-Purse balance."}, {"Function_Flow_Name": "Farecard Sales", "Sub_Flow_Name": "Period pass load", "Use_Case_Name": "Accepting Fare Payment from a Farecard using Period Pass - Customer has a Valid Child Concession on their Farecard", "Test_Scnario": "Validating Child Concession fare payment", "Test_Sce_Description": "Verify that the SA Tool correctly identifies a valid Child Concession on the Farecard and accepts the fare payment. The fare payment should be successful and the fare should be deducted from the Child Concession balance."}, {"Function_Flow_Name": "Farecard Sales", "Sub_Flow_Name": "Period pass load", "Use_Case_Name": "Accepting Fare Payment from a Farecard using Period Pass - Customer has a Valid Child Concession on their Farecard", "Test_Scnario": "Validating fare payment resulting from failed inspection", "Test_Sce_Description": "Verify that the SA Tool correctly identifies a failed inspection and initiates the fare payment process. The fare payment should be successful and the fare should be deducted from the Farecard balance."}, {"Function_Flow_Name": "Farecard Sales", "Sub_Flow_Name": "Period pass load", "Use_Case_Name": "Accepting Fare Payment from a Farecard using Period Pass - Customer has a Valid Child Concession on their Farecard", "Test_Scnario": "Validating fare payment with an expired Period Pass and insufficient e-Purse balance", "Test_Sce_Description": "Verify that the SA Tool correctly identifies an expired Period Pass and insufficient e-Purse balance and declines the fare payment. The fare payment should not be successful and no fare should be deducted."}, {"Function_Flow_Name": "Farecard Sales", "Sub_Flow_Name": "Period pass load", "Use_Case_Name": "Accepting Fare Payment from a Farecard using Period Pass - Customer has a Valid Child Concession on their Farecard", "Test_Scnario": "Validating fare payment with a blocked Farecard", "Test_Sce_Description": "Verify that the SA Tool correctly identifies a blocked Farecard and declines the fare payment. The fare payment should not be successful and no fare should be deducted."}, {"Function_Flow_Name": "Farecard Sales", "Sub_Flow_Name": "Period pass load", "Use_Case_Name": "Accepting Fare Payment from a Farecard using Period Pass - Customer has a Valid Child Concession on their Farecard", "Test_Scnario": "Validating fare payment with a Virtual Card outside valid time with sufficient e-Purse balance", "Test_Sce_Description": "Verify that the SA Tool correctly identifies a valid Virtual Card and accepts the fare payment when the tap is occurring outside the time limit of the Limited Period Pass Product but the farecard has sufficient e-Purse balance to cover the transaction. The fare payment should be successful and the fare should be deducted from the e-Purse balance."}, {"Function_Flow_Name": "Farecard Sales", "Sub_Flow_Name": "Period pass load", "Use_Case_Name": "Accepting Fare Payment from a Farecard using Period Pass - Customer has a Valid Child Concession on their Farecard", "Test_Scnario": "Validating fare payment with an expired Period Pass and insufficient e-Purse balance on a Virtual Card", "Test_Sce_Description": "Verify that the SA Tool correctly identifies an expired Period Pass and insufficient e-Purse balance on a Virtual Card and declines the fare payment. The fare payment should not be successful and no fare should be deducted."}, {"Function_Flow_Name": "Farecard Sales", "Sub_Flow_Name": "Period pass load", "Use_Case_Name": "Accepting Fare Payment from a Farecard using Period Pass - Customer has a Valid Child Concession on their Farecard", "Test_Scnario": "Validating fare payment with a blocked Virtual Card", "Test_Sce_Description": "Verify that the SA Tool correctly identifies a blocked Virtual Card and declines the fare payment. The fare payment should not be successful and no fare should be deducted."}, {"Function_Flow_Name": "Farecard Sales", "Sub_Flow_Name": "Period pass load", "Use_Case_Name": "Accepting Fare Payment from a Farecard using Period Pass - Customer has a Valid Child Concession on their Farecard", "Test_Scnario": "Validating fare payment with a Virtual Card on the Deny List", "Test_Sce_Description": "Verify that the SA Tool correctly identifies a Virtual Card on the Deny List and declines the fare payment. The fare payment should not be successful and no fare should be deducted."}, {"Function_Flow_Name": "Farecard Sales", "Sub_Flow_Name": "Period pass load", "Use_Case_Name": "Accepting Fare Payment from a Farecard using Period Pass - Customer has a Valid Child Concession on their Farecard", "Test_Scnario": "Validating fare payment when battery goes below the low battery threshold during payment", "Test_Sce_Description": "Verify that the SA Tool correctly identifies a low battery situation during a fare payment and processes the remote lists even after the SA Tool battery goes below the low battery threshold during a successful Farecard tap. The fare payment should be successful and the fare should be deducted."}, {"Function_Flow_Name": "Farecard Sales", "Sub_Flow_Name": "Period pass load", "Use_Case_Name": "Accepting Fare Payment from a Farecard using Period Pass \u2013 Fare Payment Resulting from Failed Inspection", "Test_Scnario": "Validating Period Pass Fare Payment", "Test_Sce_Description": "Verify that the SA Tool correctly identifies a valid Period Pass and accepts the fare payment. The farecard should have a valid Period Pass where the Service class fare value is greater than the current route/location Service Class fare value."}, {"Function_Flow_Name": "Farecard Sales", "Sub_Flow_Name": "Period pass load", "Use_Case_Name": "Accepting Fare Payment from a Farecard using Period Pass \u2013 Fare Payment Resulting from Failed Inspection", "Test_Scnario": "Validating Limited Period Pass Fare Payment", "Test_Sce_Description": "Verify that the SA Tool correctly identifies a valid Limited Period Pass and accepts the fare payment. The farecard should have a valid Limited Period Pass product on it and the time at tap should be occurring within the time limit of the Limited Period Pass Product."}, {"Function_Flow_Name": "Farecard Sales", "Sub_Flow_Name": "Period pass load", "Use_Case_Name": "Accepting Fare Payment from a Farecard using Period Pass \u2013 Fare Payment Resulting from Failed Inspection", "Test_Scnario": "Validating Limited Period Pass Fare Payment Outside Valid Time", "Test_Sce_Description": "Verify that the SA Tool correctly identifies a Limited Period Pass that is not valid at the current time, computes the value to be deducted from the e-Purse, and deducts the fare. The farecard should have a valid Limited Period Pass product on it and the time at tap should be occurring outside of the time limit of the Limited Period Pass Product."}, {"Function_Flow_Name": "Farecard Sales", "Sub_Flow_Name": "Period pass load", "Use_Case_Name": "Accepting Fare Payment from a Farecard using Period Pass \u2013 Fare Payment Resulting from Failed Inspection", "Test_Scnario": "Validating Child Concession Fare Payment", "Test_Sce_Description": "Verify that the SA Tool correctly identifies a valid Child Concession and accepts the fare payment. The customer\u2019s Farecard should have a Valid Child concession."}, {"Function_Flow_Name": "Farecard Sales", "Sub_Flow_Name": "Period pass load", "Use_Case_Name": "Accepting Fare Payment from a Farecard using Period Pass \u2013 Fare Payment Resulting from Failed Inspection", "Test_Scnario": "Validating Fare Payment Resulting from Failed Inspection", "Test_Sce_Description": "Verify that the SA Tool correctly identifies a farecard that has not paid a fare during inspection and allows the operator to select the payment function on the SA Tool inspection results screen. The SA Tool should record both the fare payment and inspection transactions."}, {"Function_Flow_Name": "Farecard Sales", "Sub_Flow_Name": "Period pass load", "Use_Case_Name": "Accepting Fare Payment from a Farecard using Period Pass \u2013 Fare Payment Resulting from Failed Inspection", "Test_Scnario": "Validating Fare Payment with Expired Period Pass and Insufficient ePurse Balance", "Test_Sce_Description": "Verify that the SA Tool correctly identifies an Anonymous Farecard with an Expired Period Pass and ePurse Balance Less than the Fare Amount and declines the transaction. The SA Tool should display a declined message to the customer and play the declined audio tone."}, {"Function_Flow_Name": "Farecard Sales", "Sub_Flow_Name": "Period pass load", "Use_Case_Name": "Accepting Fare Payment from a Farecard using Period Pass \u2013 Fare Payment Resulting from Failed Inspection", "Test_Scnario": "Validating Fare Payment with Blocked Farecard", "Test_Sce_Description": "Verify that the SA Tool correctly identifies a blocked Farecard and declines the transaction. The SA Tool should display a declined message to the customer and play the declined audio tone."}, {"Function_Flow_Name": "Farecard Sales", "Sub_Flow_Name": "Period pass load", "Use_Case_Name": "Accepting Fare Payment from a Farecard using Period Pass \u2013 Fare Payment Resulting from Failed Inspection", "Test_Scnario": "Validating Fare Payment with Farecard on the Hotlist", "Test_Sce_Description": "Verify that the SA Tool correctly identifies a Farecard on the hotlist, updates the card\u2019s status to blocked and declines the transaction. The SA Tool should display a declined message to the customer and play the declined audio tone."}, {"Function_Flow_Name": "Farecard Sales", "Sub_Flow_Name": "Period pass load", "Use_Case_Name": "Accepting Fare Payment from a Farecard using Period Pass \u2013 Fare Payment Resulting from Failed Inspection", "Test_Scnario": "Validating Fare Payment with Low Battery", "Test_Sce_Description": "Verify that the SA Tool correctly switches to \u201cOut of Service\u201d mode when the low battery threshold is reached during a successful Farecard tap. If the low battery threshold is reached before Step 5, the application should switch to \u201cOut of Service\u201d mode. Else, the customers fare payment should be processed as per Step 5. The application should then switch to \u201cOut of Service\u201d mode."}, {"Function_Flow_Name": "Farecard Sales", "Sub_Flow_Name": "Period pass load", "Use_Case_Name": "Accepting Fare Payment from a Farecard using Period Pass \u2013 Fare Payment Resulting from Failed Inspection", "Test_Scnario": "Validating Fare Payment with Non-Farecard", "Test_Sce_Description": "Verify that the SA Tool correctly identifies a card that is not a Farecard and displays the \u201cCard Read Error\u201d toast message for a short period of time."}, {"Function_Flow_Name": "Farecard Sales", "Sub_Flow_Name": "Period pass load", "Use_Case_Name": "Accepting Fare Payment from a Farecard using Period Pass \u2013 Fare Payment Resulting from Failed Inspection", "Test_Scnario": "Validating Fare Payment within the Anti-Passback Window", "Test_Sce_Description": "Verify that the SA Tool correctly identifies a Farecard within the Anti-Passback Window and declines the transaction. The SA Tool should display a declined message to the customer and play the declined audio tone."}, {"Function_Flow_Name": "Farecard Sales", "Sub_Flow_Name": "Period pass load", "Use_Case_Name": "Accepting Fare Payment from a Farecard using Period Pass \u2013 Fare Payment Resulting from Failed Inspection", "Test_Scnario": "Validating Fare Payment with Non-Activated Card", "Test_Sce_Description": "Verify that the SA Tool correctly identifies a non-activated card that is not on the action list available on the device and displays the \u201cCard Read Error\u201d toast message for a short period of time."}, {"Function_Flow_Name": "Farecard Sales", "Sub_Flow_Name": "Period pass load", "Use_Case_Name": "Accepting Fare Payment from a Farecard using Period Pass - Customer has an Anonymous Farecard with an Expired Period Pass and ePurse Balance Less than the Fare Amount", "Test_Scnario": "Anonymous Farecard with Expired Period Pass and Insufficient ePurse Balance", "Test_Sce_Description": "Validate the system's response when a customer with an anonymous Farecard, an expired period pass, and an ePurse balance less than the fare amount attempts to make a payment. The system should detect the card's status and insufficient balance, display a declined message, play a declined audio tone, and return to the Tap Card screen after a configurable timeout."}, {"Function_Flow_Name": "Farecard Sales", "Sub_Flow_Name": "Period pass load", "Use_Case_Name": "Accepting Fare Payment from a Farecard using Period Pass - Customer has an Anonymous Farecard with an Expired Period Pass and ePurse Balance Less than the Fare Amount", "Test_Scnario": "Blocked Farecard", "Test_Sce_Description": "Verify the system's behavior when a customer with a blocked Farecard attempts to make a payment. The system should detect the blocked status of the Farecard, display a declined message, play a declined audio tone, and return to the Tap Card screen after a configurable timeout."}, {"Function_Flow_Name": "Farecard Sales", "Sub_Flow_Name": "Period pass load", "Use_Case_Name": "Accepting Fare Payment from a Farecard using Period Pass - Customer has an Anonymous Farecard with an Expired Period Pass and ePurse Balance Less than the Fare Amount", "Test_Scnario": "Farecard on Hotlist", "Test_Sce_Description": "Check the system's response when a customer with a Farecard on the hotlist attempts to make a payment. The system should detect the card's status, update it to blocked, display a declined message, play a declined audio tone, and return to the Tap Card screen after a configurable timeout."}, {"Function_Flow_Name": "Farecard Sales", "Sub_Flow_Name": "Period pass load", "Use_Case_Name": "Accepting Fare Payment from a Farecard using Period Pass - Customer has an Anonymous Farecard with an Expired Period Pass and ePurse Balance Less than the Fare Amount", "Test_Scnario": "Low Battery Threshold During Payment", "Test_Sce_Description": "Test the system's behavior when the battery goes below the low battery threshold during a payment. The system should switch to 'Out of Service' mode if the low battery threshold is reached before Step 5. If not, the customer's fare payment should be processed as per Step 5, and then the application should switch to 'Out of Service' mode."}, {"Function_Flow_Name": "Farecard Sales", "Sub_Flow_Name": "Period pass load", "Use_Case_Name": "Accepting Fare Payment from a Farecard using Period Pass - Customer has an Anonymous Farecard with an Expired Period Pass and ePurse Balance Less than the Fare Amount", "Test_Scnario": "Non-Farecard Tap", "Test_Sce_Description": "Validate the system's response when a customer taps a card that is not a Farecard. The system should display a 'Card Read Error' toast message for a short period of time."}, {"Function_Flow_Name": "Farecard Sales", "Sub_Flow_Name": "Period pass load", "Use_Case_Name": "Accepting Fare Payment from a Farecard using Period Pass - Customer has an Anonymous Farecard with an Expired Period Pass and ePurse Balance Less than the Fare Amount", "Test_Scnario": "Farecard within Anti-Passback Window", "Test_Sce_Description": "Check the system's behavior when a customer's Farecard is within the Anti-Passback Window. The system should detect that the Farecard fails the Anti-Passback checks, display a declined message, play a declined audio tone, and return to the Tap Card screen after a configurable timeout."}, {"Function_Flow_Name": "Farecard Sales", "Sub_Flow_Name": "Period pass load", "Use_Case_Name": "Accepting Fare Payment from a Farecard using Period Pass - Customer has an Anonymous Farecard with an Expired Period Pass and ePurse Balance Less than the Fare Amount", "Test_Scnario": "Non-Activated Card Tap", "Test_Sce_Description": "Verify the system's response when a customer taps a non-activated card. The system should follow Steps 1-3 in the main Use Case and then display the 'Card Read Error' toast message for a short period of time."}, {"Function_Flow_Name": "Farecard Sales", "Sub_Flow_Name": "Period pass load", "Use_Case_Name": "Accepting Fare Payment from a Farecard using Period Pass - Customer has an Anonymous Farecard with an Expired Period Pass and ePurse Balance Less than the Fare Amount", "Test_Scnario": "Limited Period Pass Outside of Valid Time with Sufficient e-Purse Balance", "Test_Sce_Description": "Test the system's behavior when a Farecard with a valid Limited Period Pass is used outside the time limits of the product, but the Farecard has sufficient e-Purse balance to cover the transaction. The system should detect that the Limited Period Pass is not valid at the current time, compute the value to be deducted from the e-Purse, and deduct the fare."}, {"Function_Flow_Name": "Farecard Sales", "Sub_Flow_Name": "Period pass load", "Use_Case_Name": "Accepting Fare Payment from a Farecard using Period Pass - Customer has an Anonymous Farecard with an Expired Period Pass and ePurse Balance Less than the Fare Amount", "Test_Scnario": "Anonymous Virtual Card with Expired Period Pass and Insufficient ePurse Balance", "Test_Sce_Description": "Validate the system's response when a customer with an anonymous Virtual Card, an expired period pass, and an ePurse balance less than the fare amount attempts to make a payment. The system should detect the card's status and insufficient balance, display a declined message, play a declined audio tone, and update the Scratchpad accordingly."}, {"Function_Flow_Name": "Farecard Sales", "Sub_Flow_Name": "Period pass load", "Use_Case_Name": "Accepting Fare Payment from a Farecard using Period Pass - Customer has an Anonymous Farecard with an Expired Period Pass and ePurse Balance Less than the Fare Amount", "Test_Scnario": "Blocked Virtual Card", "Test_Sce_Description": "Verify the system's behavior when a customer with a blocked Virtual Card attempts to make a payment. The system should detect the blocked status of the Virtual Card, display a declined message, play a declined audio tone, and update the Scratchpad accordingly."}, {"Function_Flow_Name": "Farecard Sales", "Sub_Flow_Name": "Period pass load", "Use_Case_Name": "Accepting Fare Payment from a Farecard using Period Pass - Customer has an Anonymous Farecard with an Expired Period Pass and ePurse Balance Less than the Fare Amount", "Test_Scnario": "Virtual Card on Deny List", "Test_Sce_Description": "Check the system's response when a customer with a Virtual Card on the Deny List attempts to make a payment. The system should detect the card's status, remove it from the Deny List, set it to blocked, display a declined message, play a declined audio tone, and update the Scratchpad accordingly."}, {"Function_Flow_Name": "Farecard Sales", "Sub_Flow_Name": "Period pass load", "Use_Case_Name": "Accepting Fare Payment from a Farecard using Period Pass - Customer\u2019s Farecard is Blocked", "Test_Scnario": "Testing Fare Payment with Blocked Farecard", "Test_Sce_Description": "This scenario will test the functionality of the SA Tool when a customer tries to make a fare payment with a blocked Farecard. The SA Tool should detect that the Farecard is blocked and display a declined message to the customer. The transaction should not be conducted and the SA Tool should play a declined audio tone. After a configurable timeout, the app should return to the SA Tool application Tap Card screen."}, {"Function_Flow_Name": "Farecard Sales", "Sub_Flow_Name": "Period pass load", "Use_Case_Name": "Accepting Fare Payment from a Farecard using Period Pass - Customer\u2019s Farecard is Blocked", "Test_Scnario": "Testing Fare Payment with Anonymous Farecard and Insufficient ePurse Balance", "Test_Sce_Description": "This scenario will test the functionality of the SA Tool when a customer with an anonymous Farecard and insufficient ePurse balance tries to make a fare payment. The SA Tool should detect that the card is anonymous and the ePurse balance is less than the fare amount, and display a declined message to the customer. The transaction should not be conducted and the SA Tool should play a declined audio tone. After a configurable timeout, the app should return to the SA Tool application Tap Card screen."}, {"Function_Flow_Name": "Farecard Sales", "Sub_Flow_Name": "Period pass load", "Use_Case_Name": "Accepting Fare Payment from a Farecard using Period Pass - Customer\u2019s Farecard is Blocked", "Test_Scnario": "Testing Fare Payment with Farecard on Hotlist", "Test_Sce_Description": "This scenario will test the functionality of the SA Tool when a customer tries to make a fare payment with a Farecard that is on the hotlist. The SA Tool should detect that the Farecard is on the hotlist, update the card\u2019s status to blocked, and display a declined message to the customer. The transaction should not be conducted and the SA Tool should play a declined audio tone. After a configurable timeout, the app should return to the SA Tool application Tap Card screen."}, {"Function_Flow_Name": "Farecard Sales", "Sub_Flow_Name": "Period pass load", "Use_Case_Name": "Accepting Fare Payment from a Farecard using Period Pass - Customer\u2019s Farecard is Blocked", "Test_Scnario": "Testing Fare Payment during Low Battery", "Test_Sce_Description": "This scenario will test the functionality of the SA Tool when the battery goes below the low battery threshold during a fare payment. If the low battery threshold is reached before Step 5, the application should switch to \u201cOut of Service\u201d mode. Else, the customers fare payment should be processed as per Step 5 and then the application should switch to \u201cOut of Service\u201d mode."}, {"Function_Flow_Name": "Farecard Sales", "Sub_Flow_Name": "Period pass load", "Use_Case_Name": "Accepting Fare Payment from a Farecard using Period Pass - Customer\u2019s Farecard is Blocked", "Test_Scnario": "Testing Fare Payment with Non-Farecard", "Test_Sce_Description": "This scenario will test the functionality of the SA Tool when a customer tries to make a fare payment with a card that is not a Farecard. The SA Tool should display the \u201cCard Read Error\u201d toast message for a short period of time."}, {"Function_Flow_Name": "Farecard Sales", "Sub_Flow_Name": "Period pass load", "Use_Case_Name": "Accepting Fare Payment from a Farecard using Period Pass - Customer\u2019s Farecard is Blocked", "Test_Scnario": "Testing Fare Payment with Farecard within Anti-Passback Window", "Test_Sce_Description": "This scenario will test the functionality of the SA Tool when a customer tries to make a fare payment with a Farecard that is within the Anti-Passback Window. The device should detect that the Farecard fails the Anti-Passback checks, and display a declined message to the customer. The transaction should not be conducted and the SA Tool should play a declined audio tone. After a configurable timeout, the app should return to the SA Tool application Tap Card screen."}, {"Function_Flow_Name": "Farecard Sales", "Sub_Flow_Name": "Period pass load", "Use_Case_Name": "Accepting Fare Payment from a Farecard using Period Pass - Customer\u2019s Farecard is Blocked", "Test_Scnario": "Testing Fare Payment with Non-Activated Card", "Test_Sce_Description": "This scenario will test the functionality of the SA Tool when a customer tries to make a fare payment with a non-activated card. The SA Tool should display the \u201cCard Read Error\u201d toast message for a short period of time."}, {"Function_Flow_Name": "Farecard Sales", "Sub_Flow_Name": "Period pass load", "Use_Case_Name": "Accepting Fare Payment from a Farecard using Period Pass - Customer\u2019s Farecard is Blocked", "Test_Scnario": "Testing Fare Payment with Valid Limited Period Pass", "Test_Sce_Description": "This scenario will test the functionality of the SA Tool when a customer tries to make a fare payment with a Farecard that has a valid Limited Period Pass product on it and the time at tap is occurring within the time limit of the Limited Period Pass Product."}, {"Function_Flow_Name": "Farecard Sales", "Sub_Flow_Name": "Period pass load", "Use_Case_Name": "Accepting Fare Payment from a Farecard using Period Pass - Customer\u2019s Farecard is Blocked", "Test_Scnario": "Testing Fare Payment with Expired Limited Period Pass and Sufficient e-Purse Balance", "Test_Sce_Description": "This scenario will test the functionality of the SA Tool when a customer tries to make a fare payment with a Farecard that has a valid Limited Period Pass product on it but the time at tap is occurring outside of the time limit of the Limited Period Pass Product, and the Farecard has sufficient e-Purse balance to cover the transaction. The ATS should detect that the Limited Period Pass is not valid at the current time, compute the value to be deducted from the e-Purse, and deduct the fare."}, {"Function_Flow_Name": "Farecard Sales", "Sub_Flow_Name": "Period pass load", "Use_Case_Name": "Accepting Fare Payment from a Farecard using Period Pass - Customer\u2019s Farecard is Blocked", "Test_Scnario": "Testing Fare Payment with Anonymous Virtual Card and Insufficient ePurse Balance", "Test_Sce_Description": "This scenario will test the functionality of the SA Tool when a customer with an anonymous Virtual Card and insufficient ePurse balance tries to make a fare payment. The device should send the transaction to ATS for processing, and ATS should detect the card is Anonymous and the ePurse Balance is less than the fare amount, and return a declined result back to the SA Tool. The SA Tool should display a declined message to the customer, play a declined audio tone, and update the Scratchpad accordingly."}, {"Function_Flow_Name": "Farecard Sales", "Sub_Flow_Name": "Period pass load", "Use_Case_Name": "Accepting Fare Payment from a Farecard using Period Pass - Customer\u2019s Farecard is Blocked", "Test_Scnario": "Testing Fare Payment with Blocked Virtual Card", "Test_Sce_Description": "This scenario will test the functionality of the SA Tool when a customer tries to make a fare payment with a blocked Virtual Card. The device should send the transaction to ATS for processing, and ATS should detect the card is blocked, and return a declined result back to the SA Tool. The SA Tool should display a declined message to the customer, play a declined audio tone, and update the Scratchpad accordingly."}, {"Function_Flow_Name": "Farecard Sales", "Sub_Flow_Name": "Period pass load", "Use_Case_Name": "Accepting Fare Payment from a Farecard using Period Pass - Customer\u2019s Farecard is Blocked", "Test_Scnario": "Testing Fare Payment with Virtual Card on Deny List", "Test_Sce_Description": "This scenario will test the functionality of the SA Tool when a customer tries to make a fare payment with a Virtual Card that is on the Deny List. The device should send the transaction to ATS for processing, and ATS should detect the card is on the Deny List, remove the card from the Deny List and set it to blocked, and return a declined result back to the SA Tool. The SA Tool should display a declined message to the customer, play a declined audio tone, and update the Scratchpad accordingly."}, {"Function_Flow_Name": "Farecard Sales", "Sub_Flow_Name": "Period pass load", "Use_Case_Name": "Accepting Fare Payment from a Farecard using Period Pass - Customer\u2019s Farecard is Blocked", "Test_Scnario": "Testing Fare Payment during Low Battery with Virtual Card", "Test_Sce_Description": "This scenario will test the functionality of the SA Tool when the battery goes below the low battery threshold during a fare payment with a Virtual Card. If the low battery threshold is reached before Step 5, the application should switch to \u201cOut of Service\u201d mode. Else, the customers fare payment should be processed as per Step 5 and then the application should switch to \u201cOut of Service\u201d mode."}, {"Function_Flow_Name": "Farecard Sales", "Sub_Flow_Name": "Period pass load", "Use_Case_Name": "Accepting Fare Payment on an Online SA Tool from a Virtual Card using Period Pass - Customer has an Anonymous Farecard with an Expired Period Pass and ePurse Balance Less than the Fare Amount", "Test_Scnario": "Valid Limited Period Pass within time limit", "Test_Sce_Description": "Verify that the system correctly accepts fare payment when the farecard has a valid Limited Period Pass and the current time is within the time limit of the product."}, {"Function_Flow_Name": "Farecard Sales", "Sub_Flow_Name": "Period pass load", "Use_Case_Name": "Accepting Fare Payment on an Online SA Tool from a Virtual Card using Period Pass - Customer has an Anonymous Farecard with an Expired Period Pass and ePurse Balance Less than the Fare Amount", "Test_Scnario": "Valid Limited Period Pass outside time limit with sufficient e-Purse balance", "Test_Sce_Description": "Verify that the system correctly deducts the fare from the e-Purse when the farecard has a valid Limited Period Pass but the current time is outside the time limit of the product, and the farecard has sufficient e-Purse balance to cover the transaction."}, {"Function_Flow_Name": "Farecard Sales", "Sub_Flow_Name": "Period pass load", "Use_Case_Name": "Accepting Fare Payment on an Online SA Tool from a Virtual Card using Period Pass - Customer has an Anonymous Farecard with an Expired Period Pass and ePurse Balance Less than the Fare Amount", "Test_Scnario": "Expired Period Pass and ePurse Balance Less than the Fare Amount", "Test_Sce_Description": "Verify that the system correctly declines the transaction when the customer has an expired period pass, the ePurse balance is less than the fare amount, and the card is anonymous."}, {"Function_Flow_Name": "Farecard Sales", "Sub_Flow_Name": "Period pass load", "Use_Case_Name": "Accepting Fare Payment on an Online SA Tool from a Virtual Card using Period Pass - Customer has an Anonymous Farecard with an Expired Period Pass and ePurse Balance Less than the Fare Amount", "Test_Scnario": "Blocked Farecard", "Test_Sce_Description": "Verify that the system correctly declines the transaction when the customer's farecard is blocked."}, {"Function_Flow_Name": "Farecard Sales", "Sub_Flow_Name": "Period pass load", "Use_Case_Name": "Accepting Fare Payment on an Online SA Tool from a Virtual Card using Period Pass - Customer has an Anonymous Farecard with an Expired Period Pass and ePurse Balance Less than the Fare Amount", "Test_Scnario": "Farecard on the Deny List", "Test_Sce_Description": "Verify that the system correctly declines the transaction, removes the card from the Deny List and sets it to blocked when the customer's farecard is on the Deny List."}, {"Function_Flow_Name": "Farecard Sales", "Sub_Flow_Name": "Period pass load", "Use_Case_Name": "Accepting Fare Payment on an Online SA Tool from a Virtual Card using Period Pass - Customer has an Anonymous Farecard with an Expired Period Pass and ePurse Balance Less than the Fare Amount", "Test_Scnario": "Low Battery Threshold during Payment", "Test_Sce_Description": "Verify that the system correctly switches to 'Out of Service' mode when the battery goes below the low battery threshold during payment, and the low battery threshold is high enough that the remote lists can be processed even after the battery goes below the threshold during a successful Farecard tap."}, {"Function_Flow_Name": "Farecard Sales", "Sub_Flow_Name": "Period pass load", "Use_Case_Name": "Accepting Fare Payment on an Online SA Tool from a Virtual Card using Period Pass - Customer has an Anonymous Farecard with an Expired Period Pass and ePurse Balance Less than the Fare Amount", "Test_Scnario": "Non-Farecard Tap", "Test_Sce_Description": "Verify that the system correctly displays the 'Card Read Error' toast message when the customer taps a card that is not a Farecard."}, {"Function_Flow_Name": "Farecard Sales", "Sub_Flow_Name": "Period pass load", "Use_Case_Name": "Accepting Fare Payment on an Online SA Tool from a Virtual Card using Period Pass - Customer has an Anonymous Farecard with an Expired Period Pass and ePurse Balance Less than the Fare Amount", "Test_Scnario": "Farecard within the Anti-Passback Window", "Test_Sce_Description": "Verify that the system correctly declines the transaction when the customer's farecard is within the Anti-Passback Window."}, {"Function_Flow_Name": "Farecard Sales", "Sub_Flow_Name": "Period pass load", "Use_Case_Name": "Accepting Fare Payment on an Online SA Tool from a Virtual Card using Period Pass - Customer has an Anonymous Farecard with an Expired Period Pass and ePurse Balance Less than the Fare Amount", "Test_Scnario": "Non-Activated Card Tap", "Test_Sce_Description": "Verify that the system correctly declines the transaction when the customer taps a non-activated card that is not on the action list available on the device."}, {"Function_Flow_Name": "Farecard Sales", "Sub_Flow_Name": "Period pass load", "Use_Case_Name": "Accepting Fare Payment on an Online SA Tool from a Virtual Card using Period Pass - Customer\u2019s Virtual Card is Blocked", "Test_Scnario": "Valid Limited Period Pass within time limit", "Test_Sce_Description": "Verify that the system correctly accepts fare payment from a virtual card with a valid Limited Period Pass within the time limit. The system should detect the validity of the pass and allow the transaction to proceed."}, {"Function_Flow_Name": "Farecard Sales", "Sub_Flow_Name": "Period pass load", "Use_Case_Name": "Accepting Fare Payment on an Online SA Tool from a Virtual Card using Period Pass - Customer\u2019s Virtual Card is Blocked", "Test_Scnario": "Valid Limited Period Pass outside time limit with sufficient e-Purse balance", "Test_Sce_Description": "Verify that the system correctly accepts fare payment from a virtual card with a valid Limited Period Pass outside the time limit but with sufficient e-Purse balance. The system should detect the invalidity of the pass due to time limit but proceed with the transaction by deducting the fare from the e-Purse balance."}, {"Function_Flow_Name": "Farecard Sales", "Sub_Flow_Name": "Period pass load", "Use_Case_Name": "Accepting Fare Payment on an Online SA Tool from a Virtual Card using Period Pass - Customer\u2019s Virtual Card is Blocked", "Test_Scnario": "Expired Period Pass with insufficient ePurse Balance", "Test_Sce_Description": "Verify that the system correctly declines fare payment from an anonymous virtual card with an expired period pass and insufficient ePurse balance. The system should detect the expired pass and insufficient balance, and decline the transaction."}, {"Function_Flow_Name": "Farecard Sales", "Sub_Flow_Name": "Period pass load", "Use_Case_Name": "Accepting Fare Payment on an Online SA Tool from a Virtual Card using Period Pass - Customer\u2019s Virtual Card is Blocked", "Test_Scnario": "Blocked Virtual Card", "Test_Sce_Description": "Verify that the system correctly declines fare payment from a blocked virtual card. The system should detect the blocked status of the card and decline the transaction."}, {"Function_Flow_Name": "Farecard Sales", "Sub_Flow_Name": "Period pass load", "Use_Case_Name": "Accepting Fare Payment on an Online SA Tool from a Virtual Card using Period Pass - Customer\u2019s Virtual Card is Blocked", "Test_Scnario": "Virtual Card on Deny List", "Test_Sce_Description": "Verify that the system correctly declines fare payment from a virtual card on the Deny List. The system should detect the card's status, remove it from the Deny List, set it to blocked, and decline the transaction."}, {"Function_Flow_Name": "Farecard Sales", "Sub_Flow_Name": "Period pass load", "Use_Case_Name": "Accepting Fare Payment on an Online SA Tool from a Virtual Card using Period Pass - Customer\u2019s Virtual Card is Blocked", "Test_Scnario": "Low Battery Threshold during Payment", "Test_Sce_Description": "Verify that the system correctly handles a situation where the battery goes below the low battery threshold during payment. The system should be able to process the remote lists even after the battery goes below the threshold during a successful farecard tap."}, {"Function_Flow_Name": "Farecard Sales", "Sub_Flow_Name": "Period pass load", "Use_Case_Name": "Accepting Fare Payment on an Online SA Tool from a Virtual Card using Period Pass - Customer\u2019s Virtual Card is Blocked", "Test_Scnario": "Blocked Farecard", "Test_Sce_Description": "Verify that the system correctly declines fare payment from a blocked farecard. The system should detect the blocked status of the farecard and decline the transaction."}, {"Function_Flow_Name": "Farecard Sales", "Sub_Flow_Name": "Period pass load", "Use_Case_Name": "Accepting Fare Payment on an Online SA Tool from a Virtual Card using Period Pass - Customer\u2019s Virtual Card is Blocked", "Test_Scnario": "Farecard on Hotlist", "Test_Sce_Description": "Verify that the system correctly declines fare payment from a farecard on the hotlist. The system should detect the farecard's status, update it to blocked, and decline the transaction."}, {"Function_Flow_Name": "Farecard Sales", "Sub_Flow_Name": "Period pass load", "Use_Case_Name": "Accepting Fare Payment on an Online SA Tool from a Virtual Card using Period Pass - Customer\u2019s Virtual Card is Blocked", "Test_Scnario": "Non-Activated Card", "Test_Sce_Description": "Verify that the system correctly handles a situation where a customer taps a non-activated card. The system should display a 'Card Read Error' message."}, {"Function_Flow_Name": "Farecard Sales", "Sub_Flow_Name": "Period pass load", "Use_Case_Name": "Accepting Fare Payment on an Online SA Tool from a Virtual Card using Period Pass - Customer\u2019s Virtual Card is Blocked", "Test_Scnario": "Farecard within Anti-Passback Window", "Test_Sce_Description": "Verify that the system correctly declines fare payment from a farecard within the Anti-Passback Window. The system should detect the farecard's status and decline the transaction."}, {"Function_Flow_Name": "Farecard Sales", "Sub_Flow_Name": "Period pass load", "Use_Case_Name": "Accepting Fare Payment on an Online SA Tool from a Virtual Card using Period Pass - Customer\u2019s Virtual Card is on the Deny List", "Test_Scnario": "Validating Limited Period Pass within valid time", "Test_Sce_Description": "Verify that the system correctly accepts fare payment from a virtual card with a valid Limited Period Pass within the valid time limit."}, {"Function_Flow_Name": "Farecard Sales", "Sub_Flow_Name": "Period pass load", "Use_Case_Name": "Accepting Fare Payment on an Online SA Tool from a Virtual Card using Period Pass - Customer\u2019s Virtual Card is on the Deny List", "Test_Scnario": "Validating Limited Period Pass outside valid time with sufficient e-Purse balance", "Test_Sce_Description": "Verify that the system correctly deducts fare from the e-Purse balance when the Limited Period Pass is not valid at the current time but the farecard has sufficient e-Purse balance."}, {"Function_Flow_Name": "Farecard Sales", "Sub_Flow_Name": "Period pass load", "Use_Case_Name": "Accepting Fare Payment on an Online SA Tool from a Virtual Card using Period Pass - Customer\u2019s Virtual Card is on the Deny List", "Test_Scnario": "Handling Anonymous Farecard with Expired Period Pass and Insufficient ePurse Balance", "Test_Sce_Description": "Verify that the system correctly declines the transaction when the customer has an anonymous farecard with an expired period pass and ePurse balance less than the fare amount."}, {"Function_Flow_Name": "Farecard Sales", "Sub_Flow_Name": "Period pass load", "Use_Case_Name": "Accepting Fare Payment on an Online SA Tool from a Virtual Card using Period Pass - Customer\u2019s Virtual Card is on the Deny List", "Test_Scnario": "Handling Blocked Virtual Card", "Test_Sce_Description": "Verify that the system correctly declines the transaction when the customer's virtual card is blocked."}, {"Function_Flow_Name": "Farecard Sales", "Sub_Flow_Name": "Period pass load", "Use_Case_Name": "Accepting Fare Payment on an Online SA Tool from a Virtual Card using Period Pass - Customer\u2019s Virtual Card is on the Deny List", "Test_Scnario": "Handling Virtual Card on Deny List", "Test_Sce_Description": "Verify that the system correctly removes the card from the Deny List, sets it to blocked, and declines the transaction when the customer's virtual card is on the Deny List."}, {"Function_Flow_Name": "Farecard Sales", "Sub_Flow_Name": "Period pass load", "Use_Case_Name": "Accepting Fare Payment on an Online SA Tool from a Virtual Card using Period Pass - Customer\u2019s Virtual Card is on the Deny List", "Test_Scnario": "Handling Low Battery during Payment", "Test_Sce_Description": "Verify that the system correctly switches to 'Out of Service' mode when the battery goes below the low battery threshold during payment."}, {"Function_Flow_Name": "Farecard Sales", "Sub_Flow_Name": "Period pass load", "Use_Case_Name": "Accepting Fare Payment on an Online SA Tool from a Virtual Card using Period Pass - Customer\u2019s Virtual Card is on the Deny List", "Test_Scnario": "Handling Anonymous Farecard with Insufficient ePurse Balance", "Test_Sce_Description": "Verify that the system correctly declines the transaction when the customer has an anonymous farecard and the ePurse balance is less than the fare amount."}, {"Function_Flow_Name": "Farecard Sales", "Sub_Flow_Name": "Period pass load", "Use_Case_Name": "Accepting Fare Payment on an Online SA Tool from a Virtual Card using Period Pass - Customer\u2019s Virtual Card is on the Deny List", "Test_Scnario": "Handling Blocked Farecard", "Test_Sce_Description": "Verify that the system correctly declines the transaction when the customer's farecard is blocked."}, {"Function_Flow_Name": "Farecard Sales", "Sub_Flow_Name": "Period pass load", "Use_Case_Name": "Accepting Fare Payment on an Online SA Tool from a Virtual Card using Period Pass - Customer\u2019s Virtual Card is on the Deny List", "Test_Scnario": "Handling Farecard on Hotlist", "Test_Sce_Description": "Verify that the system correctly updates the card's status to blocked and declines the transaction when the customer's farecard is on the hotlist."}, {"Function_Flow_Name": "Farecard Sales", "Sub_Flow_Name": "Period pass load", "Use_Case_Name": "Accepting Fare Payment on an Online SA Tool from a Virtual Card using Period Pass - Customer\u2019s Virtual Card is on the Deny List", "Test_Scnario": "Handling Non-Activated Card", "Test_Sce_Description": "Verify that the system correctly displays the 'Card Read Error' message when the customer taps a card that is not activated and not on the action list available on the device."}, {"Function_Flow_Name": "Farecard Sales", "Sub_Flow_Name": "Period pass load", "Use_Case_Name": "Accepting Fare Payment on an Online SA Tool from a Virtual Card using Period Pass - Customer\u2019s Virtual Card is on the Deny List", "Test_Scnario": "Handling Farecard within Anti-Passback Window", "Test_Sce_Description": "Verify that the system correctly declines the transaction when the customer's farecard is within the Anti-Passback Window."}, {"Function_Flow_Name": "Farecard Sales", "Sub_Flow_Name": "Period pass load", "Use_Case_Name": "Accepting Fare Payment on an Online SA Tool from a Virtual Card using Period Pass - Battery goes below the low battery threshold during payment", "Test_Scnario": "Low Battery Threshold Test", "Test_Sce_Description": "This scenario tests the functionality of the SA Tool when the battery goes below the low battery threshold during a successful Farecard tap. The test will ensure that the application switches to 'Out of Service' mode when the low battery threshold is reached."}, {"Function_Flow_Name": "Farecard Sales", "Sub_Flow_Name": "Period pass load", "Use_Case_Name": "Accepting Fare Payment on an Online SA Tool from a Virtual Card using Period Pass - Battery goes below the low battery threshold during payment", "Test_Scnario": "Card Not a Farecard Test", "Test_Sce_Description": "This scenario tests the application's response when a customer taps a card that is not a Farecard. The test will ensure that the SA Tool application does not respond and the device error message 'Card Read Error' is displayed for a short period of time."}, {"Function_Flow_Name": "Farecard Sales", "Sub_Flow_Name": "Period pass load", "Use_Case_Name": "Accepting Fare Payment on an Online SA Tool from a Virtual Card using Period Pass - Battery goes below the low battery threshold during payment", "Test_Scnario": "Anti-Passback Window Test", "Test_Sce_Description": "This scenario tests the application's response when a customer's Farecard is within the Anti-Passback Window. The test will ensure that the ATS detects that the Farecard fails the Anti-Passback checks and the SA Tool application displays a declined message to the customer."}, {"Function_Flow_Name": "Farecard Sales", "Sub_Flow_Name": "Period pass load", "Use_Case_Name": "Accepting Fare Payment on an Online SA Tool from a Virtual Card using Period Pass - Battery goes below the low battery threshold during payment", "Test_Scnario": "Limited Period Pass Outside Valid Time Test", "Test_Sce_Description": "This scenario tests the application's response when a Farecard has a valid Limited Period Pass and the current time is outside the time limits of the product, and the farecard is in overdraft. The test will ensure that the ATS detects that the Limited Period Pass is not valid at the current time, computes the value to be deducted from the e-Purse, and detects that farecard is in overdraft."}, {"Function_Flow_Name": "Farecard Sales", "Sub_Flow_Name": "Period pass load", "Use_Case_Name": "Accepting Fare Payment on an Online SA Tool from a Virtual Card using Period Pass - Battery goes below the low battery threshold during payment", "Test_Scnario": "Expired Period Pass and Insufficient ePurse Balance Test", "Test_Sce_Description": "This scenario tests the application's response when a customer has an expired period pass and the ePurse balance is less than the fare amount. The test will ensure that the ATS detects the card is Anonymous and the ePurse Balance is less than the fare amount and returns a declined result back to the SA Tool."}, {"Function_Flow_Name": "Farecard Sales", "Sub_Flow_Name": "Period pass load", "Use_Case_Name": "Accepting Fare Payment on an Online SA Tool from a Virtual Card using Period Pass - Battery goes below the low battery threshold during payment", "Test_Scnario": "Blocked Virtual Card Test", "Test_Sce_Description": "This scenario tests the application's response when a customer's Farecard is blocked. The test will ensure that the ATS detects the card is blocked and returns a declined result back to the SA Tool."}, {"Function_Flow_Name": "Farecard Sales", "Sub_Flow_Name": "Period pass load", "Use_Case_Name": "Accepting Fare Payment on an Online SA Tool from a Virtual Card using Period Pass - Battery goes below the low battery threshold during payment", "Test_Scnario": "Virtual Card on Deny List Test", "Test_Sce_Description": "This scenario tests the application's response when a customer's Virtual Card is on the Deny List. The test will ensure that the ATS detects the card is on the Deny List, removes the card from the Deny List and sets it to blocked, and returns a declined result back to the SA Tool."}, {"Function_Flow_Name": "Farecard Sales", "Sub_Flow_Name": "Service Guarantee", "Use_Case_Name": "Time since Tap-On Exceeds Max Travel Duration", "Test_Scnario": "Verify Tap-On Anti-Passback Window Functionality", "Test_Sce_Description": "This scenario is to verify that the device correctly detects when a cardholder has tapped on at the same station and is within the Tap-on anti-passback Window. The device should provide the appropriate feedback to the cardholder without updating the Farecard. An error should be captured and logged in the background when this occurs to help with troubleshooting the issue. This error should also be captured in the SOTI logs."}, {"Function_Flow_Name": "Farecard Sales", "Sub_Flow_Name": "Service Guarantee", "Use_Case_Name": "Time since Tap-On Exceeds Max Travel Duration", "Test_Scnario": "Verify Farecard Block Functionality", "Test_Sce_Description": "This scenario is to verify that when a Farecard is blocked, the right to travel is not conferred. The device should detect that the Farecard is blocked and provide the appropriate feedback to the Cardholder. An error should be captured and logged in the background when this occurs to help with troubleshooting the issue. This error should also be captured in the SOTI logs."}, {"Function_Flow_Name": "Farecard Sales", "Sub_Flow_Name": "Service Guarantee", "Use_Case_Name": "Time since Tap-On Exceeds Max Travel Duration", "Test_Scnario": "Verify Max Travel Duration Expiry and Underpayment Auto-Settling Logic", "Test_Sce_Description": "This scenario is to verify that if the time since tap-on exceeds the Max Travel Duration, then the Device will auto-settle the Underpayment and open a new trips. The device should determine that the Tap-On Time + Max Travel Duration < Current Time and Auto-settle the Underpayment and deduct the value from the Farecard E-Purse."}, {"Function_Flow_Name": "Farecard Sales", "Sub_Flow_Name": "Service Guarantee", "Use_Case_Name": "Time since Tap-On Exceeds Max Travel Duration", "Test_Scnario": "Verify Multiple NFC Media Presentation", "Test_Sce_Description": "This scenario is to verify that if multiple NFC media are presented to the device at one time, the device will block all fare payment functionality. The device should block all user functionality, present Anti-Collision HMI to customer. An error should be captured and logged in the background when this occurs to help with troubleshooting the issue. This error should also be captured in the SOTI logs."}, {"Function_Flow_Name": "Farecard Sales", "Sub_Flow_Name": "Service Guarantee", "Use_Case_Name": "Time since Tap-On Exceeds Max Travel Duration", "Test_Scnario": "Verify Non-Activated Farecard Handling", "Test_Sce_Description": "This scenario is to verify that if a non-activated Farecard is tapped on the device, the transaction is unsuccessful. The device should detect that the Farecard is not activated and provide feedback to the Cardholder of an unsuccessful transaction. An error should be captured and logged in the background when this occurs to help with troubleshooting the issue. This error should also be captured in the SOTI logs."}, {"Function_Flow_Name": "Farecard Sales", "Sub_Flow_Name": "Service Guarantee", "Use_Case_Name": "Time since Tap-On Exceeds Max Travel Duration", "Test_Scnario": "Verify Card Reading Error Handling", "Test_Sce_Description": "This scenario is to verify that if a Cardholder taps Farecard on an SA Tool and a Card reading error occurs (e.g. Farecard is immediately removed from the card reader), the device should process a full Fare-by-Zone transaction (both tap-on and tap-off) in case of a default O/D on the Farecard."}, {"Function_Flow_Name": "Farecard Sales", "Sub_Flow_Name": "Service Guarantee", "Use_Case_Name": "Time since Tap-On Exceeds Max Travel Duration", "Test_Scnario": "Verify Default Trip Override", "Test_Sce_Description": "This scenario is to verify that the device will override the default O/D contained on the Open Payments Media and process the tap as a regular tap-on. The customer should be able to request the override of a Default Trip by interacting with the Device."}, {"Function_Flow_Name": "Farecard Sales", "Sub_Flow_Name": "Service Guarantee", "Use_Case_Name": "Time since Tap-On Exceeds Max Travel Duration", "Test_Scnario": "Verify Capping Discount Eligibility", "Test_Sce_Description": "This scenario is to verify that when capping is configured, and the customer has met any of the capping criteria (Daily, Weekly, Monthly), the device sends the tap to Accenture Ticketing Services for processing. ATS checks the online deny list and completes the fare processing. ATS should calculate the capping discount and apply to the fare calculation."}, {"Function_Flow_Name": "Farecard Sales", "Sub_Flow_Name": "Service Guarantee", "Use_Case_Name": "Time since Tap-On Exceeds Max Travel Duration", "Test_Scnario": "Verify Multiple Capping Discount Eligibility", "Test_Sce_Description": "This scenario is to verify that when capping is configured, and the customer has met a combination of multiple capping criteria (Daily, Weekly, Monthly), the device sends the tap to Accenture Ticketing Services for processing. ATS checks the online deny list and completes the fare processing. ATS should calculate the capping discount and apply to the fare calculation. When multiple caps are met ATS will take whatever Capping program which is of highest precedence (set in RE) and apply that discount to the fare."}, {"Function_Flow_Name": "Farecard Sales", "Sub_Flow_Name": "Service Guarantee", "Use_Case_Name": "Time since Tap-On Exceeds Max Travel Duration", "Test_Scnario": "Verify Offline Capping Discount Eligibility", "Test_Sce_Description": "This scenario is to verify that if the SA Tool is not online and not connected to ATS, the device checks the local deny list if the media is on the local deny list. The latent transaction processor stores the tap till the device goes back online and connects to Accenture Ticketing Services. The tap is then rated in ATS. Capping rules will follow use-case logic outlined in ticketing use cases."}, {"Function_Flow_Name": "Farecard Sales", "Sub_Flow_Name": "Service Guarantee", "Use_Case_Name": "Time since Tap-On Exceeds Max Travel Duration", "Test_Scnario": "Verify ODA Check Failure Handling", "Test_Sce_Description": "This scenario is to verify that if an Open Payments Media fails the ODA check, the device returns the appropriate feedback. The device should perform the necessary validation and determine that the Open Payments Media is unable to pass the checks. The Declined \u2013 Failed ODA Check screen should be provided to the cardholder. An error should be captured and logged in the background when this occurs to help with troubleshooting the issue. This error should also be captured in the SOTI logs."}, {"Function_Flow_Name": "Farecard Sales", "Sub_Flow_Name": "Service Guarantee", "Use_Case_Name": "Time since Tap-On Exceeds Max Travel Duration", "Test_Scnario": "Verify Expiry Check Failure Handling", "Test_Sce_Description": "This scenario is to verify that if an Open Payments Media fails the Expiry check, the device returns the appropriate feedback. The device should perform the necessary validation and determine that the Open Payments Media is unable to pass the checks. The Declined \u2013 Failed Expiry Check screen should be provided to the cardholder. An error should be captured and logged in the background when this occurs to help with troubleshooting the issue. This error should also be captured in the SOTI logs."}, {"Function_Flow_Name": "Farecard Sales", "Sub_Flow_Name": "Service Guarantee", "Use_Case_Name": "Tap a Farecard on an SA Tool and card reading error occurs", "Test_Scnario": "Testing Card Read Error", "Test_Sce_Description": "This scenario will test the functionality of the SA Tool when a non-Farecard is tapped. The expected outcome is that the application does not respond and a 'Card Read Error' message is displayed."}, {"Function_Flow_Name": "Farecard Sales", "Sub_Flow_Name": "Service Guarantee", "Use_Case_Name": "Tap a Farecard on an SA Tool and card reading error occurs", "Test_Scnario": "Testing Transaction Reversal with Non-Activated Farecard", "Test_Sce_Description": "This scenario will test the functionality of the SA Tool when a non-activated Farecard is tapped. The expected outcome is that the application will display a declined message and the transaction is not conducted."}, {"Function_Flow_Name": "Farecard Sales", "Sub_Flow_Name": "Service Guarantee", "Use_Case_Name": "Tap a Farecard on an SA Tool and card reading error occurs", "Test_Scnario": "Testing Fare Payment Reversal on an Online SA Tool", "Test_Sce_Description": "This scenario will test the functionality of the SA Tool when a fare payment reversal is performed on an Online SA Tool that is connected to ATS. The expected outcome is that the reversal request is sent to Accenture Ticketing Services and a 'Request for Reversal Recorded' screen is provided to the cardholder."}, {"Function_Flow_Name": "Farecard Sales", "Sub_Flow_Name": "Service Guarantee", "Use_Case_Name": "Tap a Farecard on an SA Tool and card reading error occurs", "Test_Scnario": "Testing Fare Payment Reversal on an Offline SA Tool", "Test_Sce_Description": "This scenario will test the functionality of the SA Tool when a fare payment reversal is performed on an Offline SA Tool that is not connected to ATS. The expected outcome is that the latent transaction processor stores the tap till the device goes back online and connects to Accenture Ticketing Services."}, {"Function_Flow_Name": "Farecard Sales", "Sub_Flow_Name": "Service Guarantee", "Use_Case_Name": "Tap a Farecard on an SA Tool and card reading error occurs", "Test_Scnario": "Testing Farecard Tap during Temporal Class Supplement", "Test_Sce_Description": "This scenario will test the functionality of the SA Tool when a Farecard is tapped during a time period that contains an associated Temporal Class Supplement. The expected outcome is that the device will process the Tap-On Transaction as a normal tap-on."}, {"Function_Flow_Name": "Farecard Sales", "Sub_Flow_Name": "Service Guarantee", "Use_Case_Name": "Tap a Farecard on an SA Tool and card reading error occurs", "Test_Scnario": "Testing Farecard with Autoload Enabled", "Test_Sce_Description": "This scenario will test the functionality of the SA Tool when a Farecard with Autoload Enabled is tapped and the Fare amount crosses the Auto-load threshold. The expected outcome is that the Autoload amount is automatically added to the E-Purse balance."}, {"Function_Flow_Name": "Farecard Sales", "Sub_Flow_Name": "Service Guarantee", "Use_Case_Name": "Tap a Farecard on an SA Tool and card reading error occurs", "Test_Scnario": "Testing Farecard with no Default O/D and Customer Overrides the Default Trip", "Test_Sce_Description": "This scenario will test the functionality of the SA Tool when a Farecard with no Default O/D is tapped while the device is in Override mode. The expected outcome is that the device will process the tap as a result tap-on."}, {"Function_Flow_Name": "Farecard Sales", "Sub_Flow_Name": "Service Guarantee", "Use_Case_Name": "Tap a Farecard on an SA Tool and card reading error occurs", "Test_Scnario": "Testing Farecard Tap with Audio Messages Request", "Test_Sce_Description": "This scenario will test the functionality of the SA Tool when a Farecard is tapped and the customer requests audio messages for the fare payment. The expected outcome is that the operator enables audio mode and the corresponding audio message is played to the customer in the default language of their Farecard."}, {"Function_Flow_Name": "Farecard Sales", "Sub_Flow_Name": "Service Guarantee", "Use_Case_Name": "Tap a Farecard on an SA Tool and card reading error occurs", "Test_Scnario": "Testing Farecard Validation Failure at Tap-On", "Test_Sce_Description": "This scenario will test the functionality of the SA Tool when a Farecard fails validation checks at Tap-On. The expected outcome is not specified in the use case and will depend on the specific validation checks that failed."}, {"Function_Flow_Name": "Reversals", "Sub_Flow_Name": "e-Purse payment reversal", "Use_Case_Name": "Cancellation of Transaction with Split Payment (Credit/Debit)", "Test_Scnario": "Cancellation of Transaction with Split Payment (Credit/Debit) - Successful Moneris Processing", "Test_Sce_Description": "Verify that the system successfully cancels the transaction when the operator selects to cancel the transaction, confirms the cancellation, and the Moneris processing is successful. The system should reverse non-credit and/or non-debit means of payment automatically, and the operator should be able to choose the mean of payment and verbally prompt the customer to interact with the PIN pad to perform a refund void. Upon successful Moneris processing, the customer should be repaid for the refund amount, a customer receipt with Moneris information should always print, and the operator should be returned to the SA Tool home screen."}, {"Function_Flow_Name": "Reversals", "Sub_Flow_Name": "e-Purse payment reversal", "Use_Case_Name": "Cancellation of Transaction with Split Payment (Credit/Debit)", "Test_Scnario": "Cancellation of Transaction with Split Payment (Credit/Debit) - Unsuccessful Moneris Processing", "Test_Sce_Description": "Verify that the system handles unsuccessful Moneris processing correctly. The operator should have an option to prompt a customer to return fully refunded payment back with cash in order to successfully cancel the transaction. A customer receipt with Moneris information should always print. The operator should be returned to the SA Tool home screen. If the customer is not able to return refunded funds in cash, then the Use Case should terminate."}, {"Function_Flow_Name": "Reversals", "Sub_Flow_Name": "e-Purse payment reversal", "Use_Case_Name": "Cancellation of Transaction with Split Payment (Credit/Debit)", "Test_Scnario": "Cancellation of Transaction with Split Payment (Non-Credit/Debit)", "Test_Sce_Description": "Verify that the system correctly handles the cancellation of a transaction where the customer has been refunded with at least 1 mean of payment and none of them are credit or debit. The operator should be able to select to cancel the transaction, confirm the cancellation, and the SA Tool should reverse the payment means automatically and prompt the operator to begin a refund void. A customer and merchant receipt should print, and the SA Tool should return to the home screen."}, {"Function_Flow_Name": "Reversals", "Sub_Flow_Name": "e-Purse payment reversal", "Use_Case_Name": "Cancellation of Transaction with Split Payment (Credit/Debit)", "Test_Scnario": "Quantity added to cart exceeds allowable maximum", "Test_Sce_Description": "Verify that the system correctly handles the scenario where the quantity of product added to cart exceeds the product maximum. The operator should inform the customer that they must process their request in multiple transactions. The SA Tool should not allow the operator to add more than the maximum allowable quantity to the shopping cart. The operator should process the customer\u2019s request in multiple transactions as per the Main Use Case."}, {"Function_Flow_Name": "Reversals", "Sub_Flow_Name": "e-Purse payment reversal", "Use_Case_Name": "Cancellation of Transaction with Split Payment (Credit/Debit)", "Test_Scnario": "No eligible products for refund or reversal", "Test_Sce_Description": "Verify that the system correctly handles the scenario where no eligible products for refund or reversal are detected. The SA Tool should display the relevant error message and the operator must acknowledge the message. The SA Tool should return to the main menu."}, {"Function_Flow_Name": "Reversals", "Sub_Flow_Name": "e-Purse payment reversal", "Use_Case_Name": "Cancellation of Transaction with Split Payment (Credit/Debit)", "Test_Scnario": "Products are eligible for refund or reversal, but are not what the customer requested", "Test_Sce_Description": "Verify that the system correctly handles the scenario where products are eligible for refund or reversal, but are not what the customer requested. The Operator should inform the customer their product is not eligible for reversal or refund and return to the main menu."}, {"Function_Flow_Name": "Reversals", "Sub_Flow_Name": "e-Purse payment reversal", "Use_Case_Name": "Cancellation of Transaction with Split Payment (Credit/Debit)", "Test_Scnario": "Failure to connect to internet", "Test_Sce_Description": "Verify that the system correctly handles the scenario where there is no internet connection and the SA Tool Operator is performing an action that requires connection to the Internet. The SA Tool should time out and display the relevant error message with options to try again or cancel. If successful connection is restored, resume the main use case. If the action is cancelled, return to the previous screen."}, {"Function_Flow_Name": "Reversals", "Sub_Flow_Name": "e-Purse payment reversal", "Use_Case_Name": "Cancellation of Transaction with Split Payment (Credit/Debit)", "Test_Scnario": "Cancel a refund/reversal transaction", "Test_Sce_Description": "Verify that the system correctly handles the scenario where the operator would like to cancel the transaction at any point in the Main Use Case. The operator should be able to choose to cancel the transaction at any time and return to the SA Tool application home screen. The SA Tool should ask the operator if they are certain they want to cancel the transaction. If the operator selects yes, the transaction should be cancelled and the SA Tool should return to the main screen. The SA Tool application should not record the cancellation and the reason behind the cancellation. If the operator selects no, proceed through the Main Use Case as usual."}, {"Function_Flow_Name": "Reversals", "Sub_Flow_Name": "e-Purse payment reversal", "Use_Case_Name": "Cancellation of Transaction with Split Payment (Non-Credit/Debit)", "Test_Scnario": "Cancellation of Transaction with Split Payment (Non-Credit/Debit)", "Test_Sce_Description": "Verify that the system allows the operator to cancel the transaction when split payment has already begun and the customer has been refunded with at least 1 mean of payment that is not credit or debit. The system should inform the operator that in order to cancel the transaction, the payment means must be reversed, and prompt the operator to confirm that they want to cancel the transaction. Upon confirmation, the system should reverse the payment means automatically and prompt the operator to begin a refund void. A customer and merchant receipt should print and the system should return to the home screen."}, {"Function_Flow_Name": "Reversals", "Sub_Flow_Name": "e-Purse payment reversal", "Use_Case_Name": "Cancellation of Transaction with Split Payment (Non-Credit/Debit)", "Test_Scnario": "Quantity added to cart exceeds allowable maximum", "Test_Sce_Description": "Verify that the system does not allow the operator to add more than the maximum allowable quantity of a product to the shopping cart. The operator should be informed that they must process the customer\u2019s request in multiple transactions. The system should return to the main menu."}, {"Function_Flow_Name": "Reversals", "Sub_Flow_Name": "e-Purse payment reversal", "Use_Case_Name": "Cancellation of Transaction with Split Payment (Non-Credit/Debit)", "Test_Scnario": "No eligible products for refund or reversal", "Test_Sce_Description": "Verify that the system correctly identifies when no eligible products for refund or reversal are detected. The system should display the relevant error message and the operator must acknowledge the message. The system should then return to the main menu."}, {"Function_Flow_Name": "Reversals", "Sub_Flow_Name": "e-Purse payment reversal", "Use_Case_Name": "Cancellation of Transaction with Split Payment (Non-Credit/Debit)", "Test_Scnario": "Products are eligible for refund or reversal, but are not what the customer requested", "Test_Sce_Description": "Verify that the system correctly identifies when products are eligible for refund or reversal, but are not what the customer requested. The operator should inform the customer their product is not eligible for reversal or refund and return to the main menu."}, {"Function_Flow_Name": "Reversals", "Sub_Flow_Name": "e-Purse payment reversal", "Use_Case_Name": "Cancellation of Transaction with Split Payment (Non-Credit/Debit)", "Test_Scnario": "Failure to connect to internet", "Test_Sce_Description": "Verify that the system correctly handles a situation where there is no internet connection and the operator is performing an action that requires connection to the Internet. The system should time out and display the relevant error message with options to try again or cancel. If successful connection is restored, the main use case should resume. If the action is cancelled, the system should return to the previous screen."}, {"Function_Flow_Name": "Reversals", "Sub_Flow_Name": "e-Purse payment reversal", "Use_Case_Name": "Cancellation of Transaction with Split Payment (Non-Credit/Debit)", "Test_Scnario": "Cancel a refund/reversal transaction", "Test_Sce_Description": "Verify that the system allows the operator to cancel a refund/reversal transaction at any point. The system should ask the operator if they are certain they want to cancel the transaction. If the operator selects yes, the transaction should be cancelled and the system should return to the main screen. If the operator selects no, the main use case should proceed as usual."}, {"Function_Flow_Name": "Reversals", "Sub_Flow_Name": "e-Purse payment reversal", "Use_Case_Name": "Quantity added to cart exceeds allowable maximum", "Test_Scnario": "ATS failure to load products", "Test_Sce_Description": "This scenario tests the exception flow where the ATS fails to load products onto a customer's account after checkout. The operator should be informed that the products were not added to the user's account. The operator should then have the option to attempt the checkout again or provide the customer a refund if the customer paid with cash."}, {"Function_Flow_Name": "Reversals", "Sub_Flow_Name": "e-Purse payment reversal", "Use_Case_Name": "Quantity added to cart exceeds allowable maximum", "Test_Scnario": "SVC / VC Shopping Cart", "Test_Sce_Description": "This scenario tests the exception flow where the shopping cart includes both SVC and VC products. The device should not allow both SVC and VC products in the shopping cart at the same time. If the cart has ineligible products, the Operator should receive an error providing them the option to clear the cart."}, {"Function_Flow_Name": "Reversals", "Sub_Flow_Name": "e-Purse payment reversal", "Use_Case_Name": "Quantity added to cart exceeds allowable maximum", "Test_Scnario": "ECP is disabled and Customer\u2019s Artemis device is locked or asleep", "Test_Sce_Description": "This scenario tests the exception flow where the customer's Artemis device has ECP disabled and the device is locked or asleep. The virtual card media should not be detected and the screen should remain the same. The Artemis device should prompt the user to provide authentication."}, {"Function_Flow_Name": "Reversals", "Sub_Flow_Name": "e-Purse payment reversal", "Use_Case_Name": "Quantity added to cart exceeds allowable maximum", "Test_Scnario": "Customer\u2019s Artemis device is in Power Reserve mode and ECP is disabled", "Test_Sce_Description": "This scenario tests the exception flow where the customer's Artemis device is in Power Reserve mode and ECP is disabled. The virtual card media should not be detected and the screen should remain the same. The Artemis device should prompt the user to charge their device."}, {"Function_Flow_Name": "Reversals", "Sub_Flow_Name": "e-Purse payment reversal", "Use_Case_Name": "Quantity added to cart exceeds allowable maximum", "Test_Scnario": "Required fields not filled out or not valid", "Test_Sce_Description": "This scenario tests the exception flow where the operator proceeds before all required fields are filled out or the information entered does not meet validation rules. The SA Tool should check whether all the required fields have valid information and if not, display screen validation rules to prompt the operator to input the correct information."}, {"Function_Flow_Name": "Reversals", "Sub_Flow_Name": "e-Purse payment reversal", "Use_Case_Name": "Quantity added to cart exceeds allowable maximum", "Test_Scnario": "Purchase multiple items", "Test_Sce_Description": "This scenario tests the alternate flow where the customer wants to conduct other purchases in the same transaction. The operator should be able to return to the SA Tool application Sales screen and select the additional product(s) the customer would like to purchase. The SA Tool application should add the additional products to the shopping cart."}, {"Function_Flow_Name": "Reversals", "Sub_Flow_Name": "e-Purse payment reversal", "Use_Case_Name": "Quantity added to cart exceeds allowable maximum", "Test_Scnario": "Refund multiple items", "Test_Sce_Description": "This scenario tests the alternate flow where the customer requests to refund multiple products where refund criteria have been met. The operator should be able to complete one transaction before starting the next. The SA Tool should update the Farecard balance, remove the products and update the transaction history as applicable."}, {"Function_Flow_Name": "Reversals", "Sub_Flow_Name": "e-Purse payment reversal", "Use_Case_Name": "No eligible products for refund or reversal", "Test_Scnario": "Split payment refund/reversal with credit or debit", "Test_Sce_Description": "Verify that the system correctly handles a split payment refund/reversal where at least one mean of payment is credit or debit. The operator should be able to select to cancel the transaction, and the system should inform the operator that the payment means must be reversed. The operator should then be able to confirm the cancellation, and the system should automatically reverse non-credit and/or non-debit means of payment. The operator should then be prompted to choose a mean of payment and verbally prompt the customer to interact with the PIN pad to perform a refund void. The system should then handle successful and unsuccessful Moneris processing correctly."}, {"Function_Flow_Name": "Reversals", "Sub_Flow_Name": "e-Purse payment reversal", "Use_Case_Name": "No eligible products for refund or reversal", "Test_Scnario": "Split payment refund/reversal without credit or debit", "Test_Sce_Description": "Verify that the system correctly handles a split payment refund/reversal where none of the means of payment are credit or debit. The operator should be able to select to cancel the transaction, and the system should inform the operator that the payment means must be reversed. The operator should then be able to confirm the cancellation, and the system should automatically reverse the payment means and prompt the operator to begin a refund void."}, {"Function_Flow_Name": "Reversals", "Sub_Flow_Name": "e-Purse payment reversal", "Use_Case_Name": "No eligible products for refund or reversal", "Test_Scnario": "Exceeding maximum product quantity", "Test_Sce_Description": "Verify that the system correctly handles a situation where the quantity of a product added to the cart exceeds the maximum allowable quantity. The system should not allow the operator to add more than the maximum allowable quantity to the shopping cart, and the operator should be able to process the customer\u2019s request in multiple transactions."}, {"Function_Flow_Name": "Reversals", "Sub_Flow_Name": "e-Purse payment reversal", "Use_Case_Name": "No eligible products for refund or reversal", "Test_Scnario": "No eligible products for refund or reversal", "Test_Sce_Description": "Verify that the system correctly handles a situation where no products are eligible for refund or reversal. The system should detect that no eligible products are available and display the relevant error message, which the operator must acknowledge. The system should then return to the main menu."}, {"Function_Flow_Name": "Reversals", "Sub_Flow_Name": "e-Purse payment reversal", "Use_Case_Name": "No eligible products for refund or reversal", "Test_Scnario": "Eligible products for refund or reversal not matching customer request", "Test_Sce_Description": "Verify that the system correctly handles a situation where products are eligible for refund or reversal, but they are not what the customer requested. The operator should inform the customer that their product is not eligible for reversal or refund, and then return to the main menu."}, {"Function_Flow_Name": "Reversals", "Sub_Flow_Name": "e-Purse payment reversal", "Use_Case_Name": "No eligible products for refund or reversal", "Test_Scnario": "Internet connection failure", "Test_Sce_Description": "Verify that the system correctly handles a situation where there is no internet connection and the operator is performing an action that requires connection to the Internet. The system should time out and display the relevant error message, with options to try again or cancel. If the connection is restored, the main use case should resume. If the action is cancelled, the system should return to the previous screen."}, {"Function_Flow_Name": "Reversals", "Sub_Flow_Name": "e-Purse payment reversal", "Use_Case_Name": "No eligible products for refund or reversal", "Test_Scnario": "Required fields not filled out or not valid", "Test_Sce_Description": "Verify that the system correctly handles a situation where the operator attempts to proceed to the next screen or proceed to payment without entering required information, or where the information entered does not meet validation rules. The system should check whether all the required fields have valid information, and if not, display screen validation rules to prompt the operator to input the correct information. The operator should then be able to enter all the required information and take all required actions."}, {"Function_Flow_Name": "Reversals", "Sub_Flow_Name": "e-Purse payment reversal", "Use_Case_Name": "No eligible products for refund or reversal", "Test_Scnario": "Purchasing multiple items", "Test_Sce_Description": "Verify that the system correctly handles a situation where the customer wants to purchase multiple items in the same transaction. The operator should be able to return to the Sales screen and select the additional product(s) the customer wants to purchase, and the system should add the additional products to the shopping cart."}, {"Function_Flow_Name": "Reversals", "Sub_Flow_Name": "e-Purse payment reversal", "Use_Case_Name": "No eligible products for refund or reversal", "Test_Scnario": "Refunding multiple items", "Test_Sce_Description": "Verify that the system correctly handles a situation where the customer wants to refund multiple products where refund criteria have been met. The operator should be able to complete one transaction before starting the next, and the system should confirm the reversal and display a transaction successful screen. If it is a Farecard product refund and the Farecard had been placed in the NFC reader, the system should detect and scan the card automatically, update the Farecard balance, remove the products and update the transaction history as applicable."}, {"Function_Flow_Name": "Reversals", "Sub_Flow_Name": "e-Purse payment reversal", "Use_Case_Name": "Products are eligible for refund or reversal, but are not what the customer requested", "Test_Scnario": "Split payment refund/reversal with credit or debit", "Test_Sce_Description": "Verify that the system correctly handles a split payment refund/reversal where at least one mean of payment is credit or debit. The system should prompt the operator to confirm the cancellation, automatically reverse non-credit/debit payments, and require the operator to choose the mean of payment and prompt the customer to interact with the PIN pad for a refund void. The system should handle both successful and unsuccessful Moneris processing."}, {"Function_Flow_Name": "Reversals", "Sub_Flow_Name": "e-Purse payment reversal", "Use_Case_Name": "Products are eligible for refund or reversal, but are not what the customer requested", "Test_Scnario": "Split payment refund/reversal without credit or debit", "Test_Sce_Description": "Verify that the system correctly handles a split payment refund/reversal where none of the means of payment are credit or debit. The system should prompt the operator to confirm the cancellation and automatically reverse the payment means. The operator should then be prompted to begin a refund void."}, {"Function_Flow_Name": "Reversals", "Sub_Flow_Name": "e-Purse payment reversal", "Use_Case_Name": "Products are eligible for refund or reversal, but are not what the customer requested", "Test_Scnario": "Exceeding maximum product quantity", "Test_Sce_Description": "Verify that the system correctly prevents the operator from adding more than the maximum allowable quantity of a product to the shopping cart. The operator should be required to process the customer's request in multiple transactions."}, {"Function_Flow_Name": "Reversals", "Sub_Flow_Name": "e-Purse payment reversal", "Use_Case_Name": "Products are eligible for refund or reversal, but are not what the customer requested", "Test_Scnario": "No eligible products for refund or reversal", "Test_Sce_Description": "Verify that the system correctly handles a situation where no products are eligible for refund or reversal. The system should display an error message which the operator must acknowledge, and then return to the main menu."}, {"Function_Flow_Name": "Reversals", "Sub_Flow_Name": "e-Purse payment reversal", "Use_Case_Name": "Products are eligible for refund or reversal, but are not what the customer requested", "Test_Scnario": "Eligible products for refund/reversal not matching customer request", "Test_Sce_Description": "Verify that the system correctly handles a situation where the products eligible for refund or reversal are not what the customer requested. The operator should inform the customer that their product is not eligible, and then return to the main menu."}, {"Function_Flow_Name": "Reversals", "Sub_Flow_Name": "e-Purse payment reversal", "Use_Case_Name": "Products are eligible for refund or reversal, but are not what the customer requested", "Test_Scnario": "Internet connection failure", "Test_Sce_Description": "Verify that the system correctly handles a situation where the internet connection is lost during a flow that requires internet connection. The system should time out, display an error message, and offer options to try again or cancel."}, {"Function_Flow_Name": "Reversals", "Sub_Flow_Name": "e-Purse payment reversal", "Use_Case_Name": "Products are eligible for refund or reversal, but are not what the customer requested", "Test_Scnario": "Cancellation of refund/reversal transaction", "Test_Sce_Description": "Verify that the system correctly handles the cancellation of a refund/reversal transaction. The system should ask the operator to confirm the cancellation, and if confirmed, cancel the transaction and return to the main screen. If the operator chooses not to cancel, the system should proceed through the Main Use Case as usual."}, {"Function_Flow_Name": "Reversals", "Sub_Flow_Name": "e-Purse payment reversal", "Use_Case_Name": "Failure to connect to internet", "Test_Scnario": "Failure to connect to internet", "Test_Sce_Description": "Verify the system's behavior when there is no internet connection and the user is performing an action that requires internet connection. The system should time out and display the relevant error message with options to try again or cancel. If the internet connection is restored, the system should resume the main use case. If the action is cancelled, the system should return to the previous screen."}, {"Function_Flow_Name": "Reversals", "Sub_Flow_Name": "e-Purse payment reversal", "Use_Case_Name": "Failure to connect to internet", "Test_Scnario": "PIN pad transmits DECLINED message from Moneris", "Test_Sce_Description": "Verify the system's behavior when the operator is performing a credit or debit transaction and communication with Moneris fails. The system should display the relevant error message and return to the payment means screen. The receipt printer should print a failure of payment means."}, {"Function_Flow_Name": "Reversals", "Sub_Flow_Name": "e-Purse payment reversal", "Use_Case_Name": "Failure to connect to internet", "Test_Scnario": "Failure to load Farecard after payment has been processed", "Test_Sce_Description": "Verify the system's behavior when the operator is performing a Farecard transaction, the payment has been processed and successful, but the write to the card is not successful. The system should display the relevant error message and the operator can choose to try again or cancel and refund the payment."}, {"Function_Flow_Name": "Reversals", "Sub_Flow_Name": "e-Purse payment reversal", "Use_Case_Name": "Failure to connect to internet", "Test_Scnario": "Failure to connect to receipt printer", "Test_Sce_Description": "Verify the system's behavior when the operator is performing a transaction which requires printing, and connection with the receipt printer fails. The system should display the relevant error message and the operator can choose to proceed with the flow without printing capabilities, or exit the flow."}, {"Function_Flow_Name": "Reversals", "Sub_Flow_Name": "e-Purse payment reversal", "Use_Case_Name": "Failure to connect to internet", "Test_Scnario": "Failure to connect to Pin Pad", "Test_Sce_Description": "Verify the system's behavior when the operator is performing a transaction which requires use of Pin Pad, and connection with the Pin Pad fails. The system should display the relevant error message and the operator can choose to wait for the Pin Pad to connect in the background or exit the flow."}, {"Function_Flow_Name": "Reversals", "Sub_Flow_Name": "e-Purse payment reversal", "Use_Case_Name": "Failure to connect to internet", "Test_Scnario": "Open Payments Media fails ODA check", "Test_Sce_Description": "Verify the system's behavior when an Open Payments Media fails the ODA check. The device should return the appropriate feedback and the Declined \u2013 Failed ODA Check Screen should be provided to the cardholder."}, {"Function_Flow_Name": "Reversals", "Sub_Flow_Name": "e-Purse payment reversal", "Use_Case_Name": "Failure to connect to internet", "Test_Scnario": "Open Payments Media Fails Expiry Check", "Test_Sce_Description": "Verify the system's behavior when an Open Payments Media fails the Expiry Check. The device should return the appropriate feedback and the Declined \u2013 Card Expired Screen should be provided to the cardholder."}, {"Function_Flow_Name": "Reversals", "Sub_Flow_Name": "e-Purse payment reversal", "Use_Case_Name": "Failure to connect to internet", "Test_Scnario": "Open Payments Media has already tapped-on using an Online Device within Anti-Passback Window", "Test_Sce_Description": "Verify the system's behavior when the cardholder taps-on again at an SA Tool at the same station within the SA Tool Tap-on anti-passback Window, whereby the initial device and secondary device(s) tapped on were all online. The device should provide the cardholder with the appropriate feedback."}, {"Function_Flow_Name": "Reversals", "Sub_Flow_Name": "e-Purse payment reversal", "Use_Case_Name": "Failure to connect to internet", "Test_Scnario": "Open Payments Media has already tapped-on using an Offline Device", "Test_Sce_Description": "Verify the system's behavior when the cardholder taps-on again at an SA Tool at the same station within the SA Tool Tap-on anti-passback Window whereby the initial device tapped, and secondary device(s) is the same device and is offline. The device should provide the cardholder with the appropriate feedback."}, {"Function_Flow_Name": "Reversals", "Sub_Flow_Name": "e-Purse payment reversal", "Use_Case_Name": "Failure to connect to internet", "Test_Scnario": "Open Payments Media is on the ATS deny list and the SA Tool is online", "Test_Sce_Description": "Verify the system's behavior when the Open Payments Media is on the deny list and the SA Tool is online. The device should provide the cardholder with the appropriate feedback."}, {"Function_Flow_Name": "Reversals", "Sub_Flow_Name": "Period pass load reversal", "Use_Case_Name": "Period pass cross selling", "Test_Scnario": "Period pass cross selling functionality", "Test_Sce_Description": "Verify that the period pass cross selling function is enabled in the EOD and the TA is able to sell the period passes of other TAs and also view the period passes of other TAs. This should be applicable only for TAs with a business agreement."}, {"Function_Flow_Name": "Reversals", "Sub_Flow_Name": "Period pass load reversal", "Use_Case_Name": "Period pass cross selling", "Test_Scnario": "Card Query Flow with cross selling", "Test_Sce_Description": "Verify that during the Card Query Flow, the period passes of other TAs are displayed in addition to their own if a mutual agreement to sell has been implemented."}, {"Function_Flow_Name": "Reversals", "Sub_Flow_Name": "Period pass load reversal", "Use_Case_Name": "Period pass cross selling", "Test_Scnario": "Load Period Pass Flow with cross selling", "Test_Sce_Description": "Verify that during the Load Period Pass Flow, the period passes of other TAs are displayed in addition to their own if a mutual agreement to sell has been implemented. The Operator should have the option to sell that Period Pass."}, {"Function_Flow_Name": "Reversals", "Sub_Flow_Name": "Period pass load reversal", "Use_Case_Name": "Period pass cross selling", "Test_Scnario": "New Farecard Flow with cross selling", "Test_Sce_Description": "Verify that during the New Farecard Flow, the period passes of other TAs are displayed in addition to their own if a mutual agreement to sell has been implemented. The Operator should have the option to sell that Period Pass."}, {"Function_Flow_Name": "Reversals", "Sub_Flow_Name": "Period pass load reversal", "Use_Case_Name": "Period pass cross selling", "Test_Scnario": "Refund Period Pass Flow with cross selling", "Test_Sce_Description": "Verify that during the Refund Period Pass Flow, the period passes of other TAs are displayed in addition to their own if a mutual agreement to sell has been implemented. The Operator should have the option to refund that Period Pass."}, {"Function_Flow_Name": "Reversals", "Sub_Flow_Name": "Period pass load reversal", "Use_Case_Name": "Period pass cross selling", "Test_Scnario": "Refund Maximum Amount Reached", "Test_Sce_Description": "Verify that when the Operator tries to perform a refund which has a value greater than the maximum refund amount, the SA Tool application prompts the operator with an error and does not proceed to the payment screen."}, {"Function_Flow_Name": "Reversals", "Sub_Flow_Name": "Period pass load reversal", "Use_Case_Name": "Period pass cross selling", "Test_Scnario": "ECP enabled and Artemis device is locked or asleep", "Test_Sce_Description": "Verify that the system functions correctly when the customer\u2019s Artemis device has ECP enabled and the device is locked or asleep."}, {"Function_Flow_Name": "Reversals", "Sub_Flow_Name": "Period pass load reversal", "Use_Case_Name": "Period pass cross selling", "Test_Scnario": "ECP enabled and Artemis device is unlocked or awake", "Test_Sce_Description": "Verify that the system functions correctly when the customer\u2019s Artemis device has ECP enabled and the device is unlocked or awake."}, {"Function_Flow_Name": "Reversals", "Sub_Flow_Name": "Period pass load reversal", "Use_Case_Name": "Period pass cross selling", "Test_Scnario": "Artemis device in Power Reserve mode and ECP is enabled", "Test_Sce_Description": "Verify that the system functions correctly when the customer\u2019s Artemis device is in Power Reserve mode and ECP is enabled."}, {"Function_Flow_Name": "Reversals", "Sub_Flow_Name": "Period pass load reversal", "Use_Case_Name": "Period pass cross selling", "Test_Scnario": "Using an Artemis wearable device", "Test_Sce_Description": "Verify that the system functions correctly when the customer is using Virtual Card on their Artemis wearable device."}, {"Function_Flow_Name": "Reversals", "Sub_Flow_Name": "Period pass load reversal", "Use_Case_Name": "Period pass cross selling", "Test_Scnario": "ECP is disabled and Artemis device is unlocked or awake", "Test_Sce_Description": "Verify that the system functions correctly when the user\u2019s device is unlocked or awake and ECP is disabled for the users Virtual Card."}, {"Function_Flow_Name": "Reversals", "Sub_Flow_Name": "Period pass load reversal", "Use_Case_Name": "Period pass cross selling", "Test_Scnario": "Accepting Fare Payment with Expired Period Pass and ePurse Balance Less than the Fare Amount", "Test_Sce_Description": "Verify that the system correctly declines the transaction when the customer has an expired period pass, ePurse balance is less than the fare amount and the customer has an anonymous Virtual Card."}, {"Function_Flow_Name": "Reversals", "Sub_Flow_Name": "Period pass load reversal", "Use_Case_Name": "Period pass cross selling", "Test_Scnario": "Accepting Fare Payment with Blocked Virtual Card", "Test_Sce_Description": "Verify that the system correctly declines the transaction when the customer\u2019s Virtual Card is blocked."}, {"Function_Flow_Name": "Reversals", "Sub_Flow_Name": "Period pass load reversal", "Use_Case_Name": "Period pass cross selling", "Test_Scnario": "Accepting Fare Payment with Virtual Card on the Deny List", "Test_Sce_Description": "Verify that the system correctly declines the transaction and blocks the card when the customer\u2019s Virtual Card is on the Deny List."}, {"Function_Flow_Name": "Reversals", "Sub_Flow_Name": "Period pass load reversal", "Use_Case_Name": "Period pass cross selling", "Test_Scnario": "Battery goes below the low battery threshold during payment", "Test_Sce_Description": "Verify that the system correctly processes the remote lists even after the SA Tool battery goes below the low battery threshold during a successful Farecard tap."}, {"Function_Flow_Name": "Reversals", "Sub_Flow_Name": "Period pass load reversal", "Use_Case_Name": "Refund Maximum Amount Reached", "Test_Scnario": "Refund with Multiple Payment Methods", "Test_Sce_Description": "Verify that the system allows the operator to perform a refund for a transaction via multiple forms of payment. Ensure that only one of each debit and credit card payment is allowed per transaction and multiple payment means for refund amounts are accepted. Cash payments should be processed as one transaction in the backend."}, {"Function_Flow_Name": "Reversals", "Sub_Flow_Name": "Period pass load reversal", "Use_Case_Name": "Refund Maximum Amount Reached", "Test_Scnario": "Zero Dollar Transactions", "Test_Sce_Description": "Verify that zero dollar transactions are always paid or refunded in cash and no other payment method is available."}, {"Function_Flow_Name": "Reversals", "Sub_Flow_Name": "Period pass load reversal", "Use_Case_Name": "Refund Maximum Amount Reached", "Test_Scnario": "Split Refund Functionality", "Test_Sce_Description": "Verify that the operator can proceed to payment and the customer can request several forms of payment back. Ensure that the SA Tool populates the full refund amount and the operator can edit the field to enter the amount for each payment method."}, {"Function_Flow_Name": "Reversals", "Sub_Flow_Name": "Period pass load reversal", "Use_Case_Name": "Refund Maximum Amount Reached", "Test_Scnario": "Receipt Generation", "Test_Sce_Description": "Verify that upon successful refund, the SA Tool returns to the payment screen and if the method of payment was a debit or credit card, the receipt automatically prints."}, {"Function_Flow_Name": "Reversals", "Sub_Flow_Name": "Period pass load reversal", "Use_Case_Name": "Refund Maximum Amount Reached", "Test_Scnario": "Refund Limit Reached", "Test_Sce_Description": "Verify that if the mean of payment limit has been reached before the total has been refunded, the transaction must be reversed. The operator should verbally ensure that the customer is only using one of each payment type per transaction and the maximum mean of payment limit is not reached, before proceeding to process the refund."}, {"Function_Flow_Name": "Reversals", "Sub_Flow_Name": "Period pass load reversal", "Use_Case_Name": "Refund Maximum Amount Reached", "Test_Scnario": "Exception Flow - Payment Amount Greater than Total Shopping Cart Amount", "Test_Sce_Description": "Verify that if the operator has chosen a payment amount greater than the total shopping cart amount and selected Debit or Credit as part of the split payment, the SA Tool application provides an error notification to the Operator."}, {"Function_Flow_Name": "Reversals", "Sub_Flow_Name": "Period pass load reversal", "Use_Case_Name": "Refund Maximum Amount Reached", "Test_Scnario": "Alternate Flow - Customer\u2019s Farecard is on the Action, Load Value, or Hotlist", "Test_Sce_Description": "Verify that if the customer\u2019s Farecard is on the Action, Load Value, or Hotlist, the SA Tool device detects it and updates the Farecard accordingly."}, {"Function_Flow_Name": "Reversals", "Sub_Flow_Name": "Period pass load reversal", "Use_Case_Name": "Refund Maximum Amount Reached", "Test_Scnario": "Alternate Flow - Farecard tapped does not match", "Test_Sce_Description": "Verify that if the operator does not allow the Farecard to remain on the NFC Reader for the duration of the transaction and taps one Farecard but another Farecard is presented during the write tap, the SA checks if the serial number matches and displays an error message if it doesn't."}, {"Function_Flow_Name": "Reversals", "Sub_Flow_Name": "Period pass load reversal", "Use_Case_Name": "Refund Maximum Amount Reached", "Test_Scnario": "Exception Flow - Quantity added to cart exceeds allowable maximum", "Test_Sce_Description": "Verify that if the operator tries to add more than the allowable amount of one product to the shopping cart, the SA Tool will not allow it and the operator must process the customer\u2019s request in multiple transactions."}, {"Function_Flow_Name": "Reversals", "Sub_Flow_Name": "Period pass load reversal", "Use_Case_Name": "Refund Maximum Amount Reached", "Test_Scnario": "Exception Flow - No eligible products for refund or reversal", "Test_Sce_Description": "Verify that if any of the reversal or refund eligibility criteria specified in the Ticketing Use Cases [R5] are not met, the SA Tool displays the relevant error message and the operator must acknowledge the message."}, {"Function_Flow_Name": "Reversals", "Sub_Flow_Name": "Period pass load reversal", "Use_Case_Name": "Refund Maximum Amount Reached", "Test_Scnario": "Exception Flow - Failure to connect to internet", "Test_Sce_Description": "Verify that if there is no internet connection and the SA Tool Operator is performing an action that requires connection to the Internet, the SA Tool will time out and display the relevant error message with options to try again or cancel."}, {"Function_Flow_Name": "Reversals", "Sub_Flow_Name": "Period pass load reversal", "Use_Case_Name": "ECP is enabled and users Artemis device is locked or asleep", "Test_Scnario": "ECP Enabled and Artemis Device Locked", "Test_Sce_Description": "This scenario tests the functionality of the application when the ECP is enabled and the user's Artemis device is locked or asleep. The application should be able to handle this situation gracefully, without causing any errors or crashes."}, {"Function_Flow_Name": "Reversals", "Sub_Flow_Name": "Period pass load reversal", "Use_Case_Name": "ECP is enabled and users Artemis device is locked or asleep", "Test_Scnario": "ECP Enabled and Artemis Device Unlocked", "Test_Sce_Description": "This scenario tests the functionality of the application when the ECP is enabled and the user's Artemis device is unlocked or awake. The application should function as expected in this scenario, allowing the user to access all features and functionalities."}, {"Function_Flow_Name": "Reversals", "Sub_Flow_Name": "Period pass load reversal", "Use_Case_Name": "ECP is enabled and users Artemis device is locked or asleep", "Test_Scnario": "Failure to Read Farecard", "Test_Sce_Description": "This scenario tests the application's ability to handle situations where it fails to read the customer's Farecard correctly. The application should display an appropriate error message and prompt the customer to tap their Farecard again."}, {"Function_Flow_Name": "Reversals", "Sub_Flow_Name": "Period pass load reversal", "Use_Case_Name": "ECP is enabled and users Artemis device is locked or asleep", "Test_Scnario": "Expired Farecard", "Test_Sce_Description": "This scenario tests the application's ability to detect and handle expired Farecards. The application should display a message indicating that the Farecard has expired and prevent the operator from taking any further actions on the Farecard."}, {"Function_Flow_Name": "Reversals", "Sub_Flow_Name": "Period pass load reversal", "Use_Case_Name": "ECP is enabled and users Artemis device is locked or asleep", "Test_Scnario": "Blocked/Hotlisted Farecard", "Test_Sce_Description": "This scenario tests the application's ability to detect and handle blocked or hotlisted Farecards. The application should display a message indicating that the Farecard has been blocked and prevent the operator from taking any further actions on the Farecard."}, {"Function_Flow_Name": "Reversals", "Sub_Flow_Name": "Period pass load reversal", "Use_Case_Name": "ECP is enabled and users Artemis device is locked or asleep", "Test_Scnario": "Cancel a Purchase Transaction", "Test_Sce_Description": "This scenario tests the application's ability to handle the cancellation of a purchase transaction at any point in the Main Use Case. The application should allow the operator to cancel the transaction and return to the home screen without any issues."}, {"Function_Flow_Name": "Reversals", "Sub_Flow_Name": "Period pass load reversal", "Use_Case_Name": "ECP is enabled and users Artemis device is locked or asleep", "Test_Scnario": "Period Pass Cross Selling Enabled", "Test_Sce_Description": "This scenario tests the application's functionality when the period pass cross selling function is enabled. The application should allow the operator to sell and view the period passes of other TAs."}, {"Function_Flow_Name": "Reversals", "Sub_Flow_Name": "Period pass load reversal", "Use_Case_Name": "ECP is enabled and users Artemis device is locked or asleep", "Test_Scnario": "Refund Maximum Amount Reached", "Test_Sce_Description": "This scenario tests the application's ability to handle situations where the amount to be refunded to a customer exceeds the maximum refund amount. The application should display an error and prevent the operator from proceeding to the payment screen."}, {"Function_Flow_Name": "Reversals", "Sub_Flow_Name": "Period pass load reversal", "Use_Case_Name": "ECP is enabled and users Artemis device is locked or asleep", "Test_Scnario": "Artemis Device in Power Reserve Mode", "Test_Sce_Description": "This scenario tests the application's functionality when the user's Artemis device is in Power Reserve mode. The application should be able to handle this situation gracefully, without causing any errors or crashes."}, {"Function_Flow_Name": "Reversals", "Sub_Flow_Name": "Period pass load reversal", "Use_Case_Name": "ECP is enabled and users Artemis device is locked or asleep", "Test_Scnario": "Using an Artemis Wearable Device", "Test_Sce_Description": "This scenario tests the application's functionality when the user is using a Virtual Card on their Artemis wearable device. The application should function as expected in this scenario, allowing the user to access all features and functionalities."}, {"Function_Flow_Name": "Reversals", "Sub_Flow_Name": "Period pass load reversal", "Use_Case_Name": "ECP is enabled and users Artemis device is unlocked or awake", "Test_Scnario": "ECP Enabled and Artemis Device Unlocked", "Test_Sce_Description": "Verify that the application functions correctly when the ECP is enabled and the user's Artemis device is unlocked or awake. This includes checking that the user can access all necessary features and that the application responds correctly to user input."}, {"Function_Flow_Name": "Reversals", "Sub_Flow_Name": "Period pass load reversal", "Use_Case_Name": "ECP is enabled and users Artemis device is unlocked or awake", "Test_Scnario": "Failure to Read Farecard", "Test_Sce_Description": "Verify that the application correctly handles a failure to read the customer's Farecard. This includes checking that the application displays an appropriate error message, prompts the customer to tap their Farecard again, and allows the operator to exit the scenario or look up the Farecard number using the SP Remote Web \u2013 Farecard Lookup."}, {"Function_Flow_Name": "Reversals", "Sub_Flow_Name": "Period pass load reversal", "Use_Case_Name": "ECP is enabled and users Artemis device is unlocked or awake", "Test_Scnario": "Expired Farecard", "Test_Sce_Description": "Verify that the application correctly identifies an expired Farecard and prevents the operator from taking further actions on the Farecard. This includes checking that the application displays the Farecard query screen indicating that the Farecard has expired and allows the operator to clear the Farecard information and return to the home screen."}, {"Function_Flow_Name": "Reversals", "Sub_Flow_Name": "Period pass load reversal", "Use_Case_Name": "ECP is enabled and users Artemis device is unlocked or awake", "Test_Scnario": "Blocked/Hotlisted Farecard", "Test_Sce_Description": "Verify that the application correctly identifies a blocked Farecard and prevents the operator from taking further actions on the Farecard. This includes checking that the application displays the Farecard query screen indicating that the Farecard has been blocked and allows the operator to either begin the Use Case: Unblock a Blocked Farecard or inform the customer to contact CLIENT Customer Service."}, {"Function_Flow_Name": "Reversals", "Sub_Flow_Name": "Period pass load reversal", "Use_Case_Name": "ECP is enabled and users Artemis device is unlocked or awake", "Test_Scnario": "Cancel a Purchase Transaction", "Test_Sce_Description": "Verify that the operator can cancel a purchase transaction at any point in the Main Use Case. This includes checking that the application correctly handles the cancellation, returns to the main screen, and does not record the cancellation and the reason behind the cancellation if the operator selects no."}, {"Function_Flow_Name": "Reversals", "Sub_Flow_Name": "Period pass load reversal", "Use_Case_Name": "ECP is enabled and users Artemis device is unlocked or awake", "Test_Scnario": "Period Pass Cross Selling Enabled", "Test_Sce_Description": "Verify that the application correctly handles the scenario when the period pass cross selling function is enabled in the EOD. This includes checking that the application allows the TA to sell the period passes of other TAs and view the period passes of other TAs."}, {"Function_Flow_Name": "Reversals", "Sub_Flow_Name": "Period pass load reversal", "Use_Case_Name": "ECP is enabled and users Artemis device is unlocked or awake", "Test_Scnario": "Refund Maximum Amount Reached", "Test_Sce_Description": "Verify that the application correctly handles a refund which has a value greater than the maximum refund amount. This includes checking that the application prompts the operator with an error, does not proceed to the payment screen, and allows the operator to edit the refund amount."}, {"Function_Flow_Name": "Reversals", "Sub_Flow_Name": "Period pass load reversal", "Use_Case_Name": "ECP is enabled and users Artemis device is unlocked or awake", "Test_Scnario": "ECP Enabled and Artemis Device in Power Reserve Mode", "Test_Sce_Description": "Verify that the application functions correctly when the ECP is enabled and the user's Artemis device is in Power Reserve mode. This includes checking that the user can access all necessary features and that the application responds correctly to user input."}, {"Function_Flow_Name": "Reversals", "Sub_Flow_Name": "Period pass load reversal", "Use_Case_Name": "ECP is enabled and users Artemis device is unlocked or awake", "Test_Scnario": "Using an Artemis Wearable Device", "Test_Sce_Description": "Verify that the application functions correctly when the user is using a Virtual Card on their Artemis wearable device. This includes checking that the user can access all necessary features and that the application responds correctly to user input."}, {"Function_Flow_Name": "Reversals", "Sub_Flow_Name": "Period pass load reversal", "Use_Case_Name": "ECP is enabled and users Artemis device is unlocked or awake", "Test_Scnario": "ECP Disabled and Artemis Device Unlocked", "Test_Sce_Description": "Verify that the application functions correctly when the ECP is disabled and the user's Artemis device is unlocked or awake. This includes checking that the user can access all necessary features and that the application responds correctly to user input."}, {"Function_Flow_Name": "Reversals", "Sub_Flow_Name": "Period pass load reversal", "Use_Case_Name": "Customer\u2019s Artemis device is in Power Reserve mode and ECP is enabled", "Test_Scnario": "ECP Disabled and Artemis Device Unlocked", "Test_Sce_Description": "Verify that the application functions correctly when the ECP is disabled and the user's Artemis device is unlocked or awake. The application should proceed as in the Main Use Case."}, {"Function_Flow_Name": "Reversals", "Sub_Flow_Name": "Period pass load reversal", "Use_Case_Name": "Customer\u2019s Artemis device is in Power Reserve mode and ECP is enabled", "Test_Scnario": "Failure to Read Farecard", "Test_Sce_Description": "Validate the application's response when it detects the Farecard but fails to read it correctly. The application should display a 'Card read error' message and prompt the customer to tap their Farecard again."}, {"Function_Flow_Name": "Reversals", "Sub_Flow_Name": "Period pass load reversal", "Use_Case_Name": "Customer\u2019s Artemis device is in Power Reserve mode and ECP is enabled", "Test_Scnario": "Expired Farecard", "Test_Sce_Description": "Check the application's behavior when it detects that the Farecard is expired. The application should display the Farecard query screen indicating that the Farecard has expired and the operator should not be able to take any further actions on the Farecard."}, {"Function_Flow_Name": "Reversals", "Sub_Flow_Name": "Period pass load reversal", "Use_Case_Name": "Customer\u2019s Artemis device is in Power Reserve mode and ECP is enabled", "Test_Scnario": "Blocked/Hotlisted Farecard", "Test_Sce_Description": "Test the application's response when it detects that the Farecard is blocked. The application should display the Farecard query screen indicating that the Farecard has been blocked and the operator should not be able to take any further actions on the Farecard."}, {"Function_Flow_Name": "Reversals", "Sub_Flow_Name": "Period pass load reversal", "Use_Case_Name": "Customer\u2019s Artemis device is in Power Reserve mode and ECP is enabled", "Test_Scnario": "Cancel a Purchase Transaction", "Test_Sce_Description": "Verify the application's functionality when the operator would like to cancel the transaction at any point in the Main Use Case. The application should ask the operator if they are certain they want to cancel the transaction and if the operator selects yes, the transaction should be cancelled and the application should return to the main screen."}, {"Function_Flow_Name": "Reversals", "Sub_Flow_Name": "Period pass load reversal", "Use_Case_Name": "Customer\u2019s Artemis device is in Power Reserve mode and ECP is enabled", "Test_Scnario": "Period Pass Cross Selling Enabled", "Test_Sce_Description": "Check the application's behavior when the period pass cross selling function is enabled. The application should allow the operator to sell the period passes of other TAs and also view the period passes of other TAs."}, {"Function_Flow_Name": "Reversals", "Sub_Flow_Name": "Period pass load reversal", "Use_Case_Name": "Customer\u2019s Artemis device is in Power Reserve mode and ECP is enabled", "Test_Scnario": "Refund Maximum Amount Reached", "Test_Sce_Description": "Validate the application's response when the operator tries to perform a refund which has a value greater than the maximum refund amount. The application should prompt the operator with an error and allow the operator to edit the refund amount."}, {"Function_Flow_Name": "Reversals", "Sub_Flow_Name": "Period pass load reversal", "Use_Case_Name": "Customer\u2019s Artemis device is in Power Reserve mode and ECP is enabled", "Test_Scnario": "ECP Enabled and Artemis Device Locked", "Test_Sce_Description": "Verify that the application functions correctly when the ECP is enabled and the user's Artemis device is locked or asleep. The application should proceed as in the Main Use Case."}, {"Function_Flow_Name": "Reversals", "Sub_Flow_Name": "Period pass load reversal", "Use_Case_Name": "Customer\u2019s Artemis device is in Power Reserve mode and ECP is enabled", "Test_Scnario": "ECP Enabled and Artemis Device Unlocked", "Test_Sce_Description": "Check the application's behavior when the ECP is enabled and the user's Artemis device is unlocked or awake. The application should proceed as in the Main Use Case."}, {"Function_Flow_Name": "Reversals", "Sub_Flow_Name": "Period pass load reversal", "Use_Case_Name": "Customer\u2019s Artemis device is in Power Reserve mode and ECP is enabled", "Test_Scnario": "Artemis Device in Power Reserve Mode and ECP Enabled", "Test_Sce_Description": "Test the application's response when the user's Artemis device is in Power Reserve mode and ECP is enabled. The application should proceed as in the Main Use Case."}, {"Function_Flow_Name": "Reversals", "Sub_Flow_Name": "Period pass load reversal", "Use_Case_Name": "Customer\u2019s Artemis device is in Power Reserve mode and ECP is enabled", "Test_Scnario": "Using an Artemis Wearable Device", "Test_Sce_Description": "Verify that the application functions correctly when the user is using a Virtual Card on their Artemis wearable device. The application should proceed as in the Main Use Case."}, {"Function_Flow_Name": "Reversals", "Sub_Flow_Name": "Period pass load reversal", "Use_Case_Name": "Using an Artemis wearable device", "Test_Scnario": "Testing the functionality of Farecard reading", "Test_Sce_Description": "This scenario will test the functionality of the SA Tool application when it comes to reading the Farecard. The test will involve the application detecting the Farecard and attempting to read it. If the reading fails, the application should display a 'Card read error' message and prompt the customer to tap their Farecard again. The test will also cover the scenario where the reading fails again and the operator chooses to exit the scenario or look up the Farecard number using the SP Remote Web \u2013 Farecard Lookup."}, {"Function_Flow_Name": "Reversals", "Sub_Flow_Name": "Period pass load reversal", "Use_Case_Name": "Using an Artemis wearable device", "Test_Scnario": "Testing the functionality of expired Farecard", "Test_Sce_Description": "This scenario will test the functionality of the SA Tool application when it comes to handling expired Farecards. The application should be able to detect that the Farecard is expired and display the Farecard query screen indicating the same. The operator should only be able to print the card query and not take any further actions on the Farecard. The test will also cover the scenario where the operator clears the Farecard information and returns to the SA Tool application home screen."}, {"Function_Flow_Name": "Reversals", "Sub_Flow_Name": "Period pass load reversal", "Use_Case_Name": "Using an Artemis wearable device", "Test_Scnario": "Testing the functionality of blocked/hotlisted Farecard", "Test_Sce_Description": "This scenario will test the functionality of the SA Tool application when it comes to handling blocked/hotlisted Farecards. The application should be able to detect that the Farecard is blocked and display the Farecard query screen indicating the same. The operator should only be able to print the card query and not take any further actions on the Farecard. The test will also cover the scenario where the operator chooses to begin the Use Case: Unblock a Blocked Farecard or inform the customer to contact CLIENT Customer Service."}, {"Function_Flow_Name": "Reversals", "Sub_Flow_Name": "Period pass load reversal", "Use_Case_Name": "Using an Artemis wearable device", "Test_Scnario": "Testing the functionality of cancelling a purchase transaction", "Test_Sce_Description": "This scenario will test the functionality of the SA Tool application when it comes to cancelling a purchase transaction. The test will cover different scenarios such as when an action has been taken or a form has been filled on any screen besides Home screen, when payment has not begun, and when the operator has selected debit or credit as a mean of payment."}, {"Function_Flow_Name": "Reversals", "Sub_Flow_Name": "Period pass load reversal", "Use_Case_Name": "Using an Artemis wearable device", "Test_Scnario": "Testing the performance of the SA Tool application", "Test_Sce_Description": "This scenario will test the performance of the SA Tool application in terms of its speed and responsiveness. The test will involve performing various actions on the application and measuring the time it takes for the application to respond. The test will also cover the scenario where the application is used under heavy load or stress."}, {"Function_Flow_Name": "Reversals", "Sub_Flow_Name": "Period pass load reversal", "Use_Case_Name": "Using an Artemis wearable device", "Test_Scnario": "Testing the security of the SA Tool application", "Test_Sce_Description": "This scenario will test the security of the SA Tool application. The test will involve attempting to access sensitive information or perform unauthorized actions on the application. The application should be able to prevent such attempts and display appropriate error messages."}, {"Function_Flow_Name": "Reversals", "Sub_Flow_Name": "Period pass load reversal", "Use_Case_Name": "ECP is disabled and users Artemis device is unlocked or awake", "Test_Scnario": "ECP Disabled and Artemis Device Unlocked", "Test_Sce_Description": "Verify that the application functions correctly when ECP is disabled and the user's Artemis device is unlocked or awake. The application should allow the user to proceed with the main use case."}, {"Function_Flow_Name": "Reversals", "Sub_Flow_Name": "Period pass load reversal", "Use_Case_Name": "ECP is disabled and users Artemis device is unlocked or awake", "Test_Scnario": "Failure to Read Farecard", "Test_Sce_Description": "Verify the application's behavior when it fails to read the customer's Farecard. The application should display a 'Card read error' message and prompt the customer to tap their Farecard again."}, {"Function_Flow_Name": "Reversals", "Sub_Flow_Name": "Period pass load reversal", "Use_Case_Name": "ECP is disabled and users Artemis device is unlocked or awake", "Test_Scnario": "Expired Farecard", "Test_Sce_Description": "Verify the application's behavior when the customer's Farecard is expired. The application should detect the expired Farecard and display the Farecard query screen indicating that the Farecard has expired."}, {"Function_Flow_Name": "Reversals", "Sub_Flow_Name": "Period pass load reversal", "Use_Case_Name": "ECP is disabled and users Artemis device is unlocked or awake", "Test_Scnario": "Blocked/Hotlisted Farecard", "Test_Sce_Description": "Verify the application's behavior when the customer's Farecard is blocked. The application should detect the blocked Farecard and display the Farecard query screen indicating that the Farecard has been blocked."}, {"Function_Flow_Name": "Reversals", "Sub_Flow_Name": "Period pass load reversal", "Use_Case_Name": "ECP is disabled and users Artemis device is unlocked or awake", "Test_Scnario": "Cancel a Purchase Transaction", "Test_Sce_Description": "Verify the application's behavior when the operator cancels a purchase transaction. The application should ask the operator for confirmation and then cancel the transaction if the operator selects 'yes'."}, {"Function_Flow_Name": "Reversals", "Sub_Flow_Name": "Period pass load reversal", "Use_Case_Name": "ECP is disabled and users Artemis device is unlocked or awake", "Test_Scnario": "ATS Failure to Load Products", "Test_Sce_Description": "Verify the application's behavior when ATS fails to load products to the customer's account. The application should inform the operator that the products purchased were not added to the user\u2019s account."}, {"Function_Flow_Name": "Reversals", "Sub_Flow_Name": "Period pass load reversal", "Use_Case_Name": "ECP is disabled and users Artemis device is unlocked or awake", "Test_Scnario": "SVC / VC Shopping Cart", "Test_Sce_Description": "Verify the application's behavior when the shopping cart includes only Virtual Card or Stored Value Card Products. The application should not allow both SVC and VC products in the shopping cart at the same time."}, {"Function_Flow_Name": "Reversals", "Sub_Flow_Name": "Period pass load reversal", "Use_Case_Name": "ECP is disabled and users Artemis device is unlocked or awake", "Test_Scnario": "Artemis Device Locked or Asleep", "Test_Sce_Description": "Verify the application's behavior when the user's Artemis device is locked or asleep and ECP is disabled. The application should not detect the virtual card media and the screen should remain the same."}, {"Function_Flow_Name": "Reversals", "Sub_Flow_Name": "Period pass load reversal", "Use_Case_Name": "ECP is disabled and users Artemis device is unlocked or awake", "Test_Scnario": "Artemis Device in Power Reserve Mode", "Test_Sce_Description": "Verify the application's behavior when the user's Artemis device is in Power Reserve mode and ECP is disabled. The application should not detect the virtual card media and the screen should remain the same."}, {"Function_Flow_Name": "Reversals", "Sub_Flow_Name": "Period pass load reversal", "Use_Case_Name": "Reversing Fare Payment from Virtual Card on an Online SA Tool", "Test_Scnario": "Reversal of fare payment from Virtual Card on an Online SA Tool", "Test_Sce_Description": "Verify that the SP operator can manually perform a Virtual Card transaction reversal with the SA Tool when the tool is powered on, reversal is enabled in the subsystem, the last transaction is deemed to be reversible, customer\u2019s Farecard \u2019s concession is Adult or Discreet Concessions, Virtual Cards are enabled on the SA Tool and the SA Tool is online and connected to ATS."}, {"Function_Flow_Name": "Reversals", "Sub_Flow_Name": "Period pass load reversal", "Use_Case_Name": "Reversing Fare Payment from Virtual Card on an Online SA Tool", "Test_Scnario": "Reversal of fare payment when Farecard is unreadable", "Test_Sce_Description": "Verify that the SA Tool NFC reader detects the Farecard but is unable to read it and the SA Tool application indicates to the operator that the Farecard is unreadable. Also, verify that the customer can tap on the NFC reader again and if the tap is successful, steps 4 \u2013 7 are conducted. If the tap is unsuccessful, the SA Tool application should indicate to the operator that the Farecard is unreadable."}, {"Function_Flow_Name": "Reversals", "Sub_Flow_Name": "Period pass load reversal", "Use_Case_Name": "Reversing Fare Payment from Virtual Card on an Online SA Tool", "Test_Scnario": "Reversal of fare payment when SA Tool is offline", "Test_Sce_Description": "Verify that when the SA Tool is offline and not connected to ATS, the device checks the Tap Counter to see if it is exceeded, the SA Tool stores request for reversal, request for reversal success screen is displayed and the SA Tool sends bulk upload of transactions to ATS for processing when it comes back online."}, {"Function_Flow_Name": "Reversals", "Sub_Flow_Name": "Period pass load reversal", "Use_Case_Name": "Reversing Fare Payment from Virtual Card on an Online SA Tool", "Test_Scnario": "Reversal of fare payment when customer requests audio messages", "Test_Sce_Description": "Verify that when the customer requests to reverse a fare and requests audio messages for fare reversal, the operator enables audio mode and can change the volume level using the physical device buttons at the customer\u2019s discretion or proceed with the use case. Also, verify that the SA Tool displays the fare reversal screen to the operator and customer for the duration of the audio message and the corresponding audio message is played to the customer in the default language of their Farecard."}, {"Function_Flow_Name": "Reversals", "Sub_Flow_Name": "Period pass load reversal", "Use_Case_Name": "Reversing Fare Payment from Virtual Card on an Online SA Tool", "Test_Scnario": "Accepting fare payment from a Virtual Card with sufficient ePurse balance and an expired period pass", "Test_Sce_Description": "Verify that when the customer\u2019s Virtual Card has an expired period pass and the customer\u2019s ePurse balance is more than the fare amount, ATS detects that the Period Pass has expired, computes the value to be deducted from the e-Purse, and deducts the fare accordingly. If enabled, loyalty is taken into account in the fare calculation."}, {"Function_Flow_Name": "Reversals", "Sub_Flow_Name": "Period pass load reversal", "Use_Case_Name": "Reversing Fare Payment from Virtual Card on an Online SA Tool", "Test_Scnario": "Accepting fare payment from a Virtual Card with positive ePurse balance less than the fare amount and an expired period pass", "Test_Sce_Description": "Verify that when the customer\u2019s ePurse balance is less than the fare amount and the customer\u2019s Virtual Card has an expired period pass, ATS detects that the Period Pass has expired, computes the value to be deducted from the e-Purse, and deducts the fare accordingly. If enabled, loyalty is taken into account in the fare calculation and the customer\u2019s Virtual Card is put into overdraft (negative balance)."}, {"Function_Flow_Name": "Reversals", "Sub_Flow_Name": "Period pass load reversal", "Use_Case_Name": "Reversing Fare Payment from Virtual Card on an Online SA Tool", "Test_Scnario": "Accepting fare payment from a Virtual Card within Inter-SP Transfer window", "Test_Sce_Description": "Verify that when the customer\u2019s Virtual Card has a valid transfer product from other service provider and a transfer agreement between the service providers has been established, ATS reads that the Virtual Card contains a valid inter-agency transfer product and has a valid period pass. Also, verify that the right to travel is conferred to the Cardholder by updating the Virtual Card and the device provides the appropriate feedback to the Cardholder of a successful transaction with a transfer."}, {"Function_Flow_Name": "Reversals", "Sub_Flow_Name": "Period pass load reversal", "Use_Case_Name": "Reversing Fare Payment from Virtual Card on an Online SA Tool", "Test_Scnario": "Accepting fare payment from a Virtual Card when customer requests audio messages", "Test_Sce_Description": "Verify that when the customer asks to pay for the trip with their Virtual Card and requests audio messages for fare payment, the operator enables audio mode and can change the volume level using the physical device buttons at the customer\u2019s discretion or proceed with the use case. Also, verify that the SA Tool displays the fare payment screen to the operator and customer for the duration of the audio message and the corresponding audio message is played to the customer in the default language of their Farecard."}, {"Function_Flow_Name": "Reversals", "Sub_Flow_Name": "Period pass load reversal", "Use_Case_Name": "Transaction Reversal - Customer\u2019s Farecard is Unreadable", "Test_Scnario": "Virtual Card Transaction Reversal", "Test_Sce_Description": "Verify that the SP operator is able to manually perform a Virtual Card transaction reversal with the SA Tool. Ensure that the SA Tool is powered on, reversal is enabled in the Subsystem, the last transaction is reversible, customer\u2019s Farecard \u2019s concession is Adult or Discreet Concessions, Virtual Cards are enabled on the SA Tool and SA Tool is online and connected to ATS."}, {"Function_Flow_Name": "Reversals", "Sub_Flow_Name": "Period pass load reversal", "Use_Case_Name": "Transaction Reversal - Customer\u2019s Farecard is Unreadable", "Test_Scnario": "Transaction Reversal - Customer\u2019s Farecard is Unreadable", "Test_Sce_Description": "Verify that the SA Tool application detects the Farecard and fails to read it correctly. Ensure that the SA Tool NFC reader detects the Farecard but is unable to read it. Check if the SA Tool application indicates to the operator that the Farecard is unreadable."}, {"Function_Flow_Name": "Reversals", "Sub_Flow_Name": "Period pass load reversal", "Use_Case_Name": "Transaction Reversal - Customer\u2019s Farecard is Unreadable", "Test_Scnario": "Transaction Reversal \u2013 SA Tool is Offline", "Test_Sce_Description": "Verify that the SA Tool is offline and not connected to ATS. Ensure that the device checks the Tap Counter to see if it is exceeded. Check if the SA Tool store request for reversal and if the request for reversal success screen is displayed."}, {"Function_Flow_Name": "Reversals", "Sub_Flow_Name": "Period pass load reversal", "Use_Case_Name": "Transaction Reversal - Customer\u2019s Farecard is Unreadable", "Test_Scnario": "Transaction Reversal - Customer Requests Audio Messages", "Test_Sce_Description": "Verify that the customer requests to reverse a fare and requests audio messages for fare reversal. Ensure that the operator enables audio mode and can change the volume level using the physical device buttons at the customer\u2019s discretion."}, {"Function_Flow_Name": "Reversals", "Sub_Flow_Name": "Period pass load reversal", "Use_Case_Name": "Transaction Reversal - Customer\u2019s Farecard is Unreadable", "Test_Scnario": "Transaction Reversal \u2013 Customer taps a non-activated Farecard", "Test_Sce_Description": "Verify that the customer\u2019s Farecard is not activated and the customer\u2019s card is not on the action list available on the device. Ensure that the device detects that the Farecard is not activated and the SA Tool application displays a declined message to the customer."}, {"Function_Flow_Name": "Reversals", "Sub_Flow_Name": "Period pass load reversal", "Use_Case_Name": "Transaction Reversal - Customer\u2019s Farecard is Unreadable", "Test_Scnario": "Cardholder Performs a Fare Payment Reversal on an Online SA Tool", "Test_Sce_Description": "Verify that the Cardholder taps the Open Payments Media on the device Card Reader (CID) while the device is in reversal mode. Ensure that the device sends the cardholder\u2019s reversal request tap to Accenture Ticketing Services and the Request for Reversal Recorded screen is provided to the cardholder."}, {"Function_Flow_Name": "Reversals", "Sub_Flow_Name": "Period pass load reversal", "Use_Case_Name": "Transaction Reversal - Customer\u2019s Farecard is Unreadable", "Test_Scnario": "Reverse a Fare Payment on a SA Tool with Open Payments Media \u2013 Device is offline", "Test_Sce_Description": "Verify that the device is offline and not connected to Accenture Ticketing Services. Ensure that the latent transaction processor stores the tap till the device goes back online and connects to Accenture Ticketing Services."}, {"Function_Flow_Name": "Reversals", "Sub_Flow_Name": "Period pass load reversal", "Use_Case_Name": "Transaction Reversal - Customer\u2019s Farecard is Unreadable", "Test_Scnario": "Reverse a Fare Payment on a SA Tool with Open Payments Media \u2013 Customer requests audio messages", "Test_Sce_Description": "Verify that the customer requests to reverse a fare and requests audio messages for fare reversal. Ensure that the operator enables audio mode and can change the volume level using the physical device buttons at the customer\u2019s discretion."}, {"Function_Flow_Name": "Reversals", "Sub_Flow_Name": "Period pass load reversal", "Use_Case_Name": "Transaction Reversal \u2013 SA Tool is Offline", "Test_Scnario": "Offline SA Tool Tap Storage", "Test_Sce_Description": "Verify that when the SA Tool is offline, it correctly stores the tap information until the device goes back online and connects to Accenture Ticketing Services."}, {"Function_Flow_Name": "Reversals", "Sub_Flow_Name": "Period pass load reversal", "Use_Case_Name": "Transaction Reversal \u2013 SA Tool is Offline", "Test_Scnario": "Fare Payment Reversal with Audio Messages", "Test_Sce_Description": "Verify that the SA Tool correctly enables audio mode when a customer requests audio messages for fare payment reversal and that the volume can be adjusted as per the customer's discretion."}, {"Function_Flow_Name": "Reversals", "Sub_Flow_Name": "Period pass load reversal", "Use_Case_Name": "Transaction Reversal \u2013 SA Tool is Offline", "Test_Scnario": "Open Payments Media Fails ODA Check", "Test_Sce_Description": "Verify that when an Open Payments Media fails the ODA check, the SA Tool correctly returns the appropriate feedback and sends the declined tap to ATS."}, {"Function_Flow_Name": "Reversals", "Sub_Flow_Name": "Period pass load reversal", "Use_Case_Name": "Transaction Reversal \u2013 SA Tool is Offline", "Test_Scnario": "Open Payments Media Fails Expiry Check", "Test_Sce_Description": "Verify that when an Open Payments Media fails the Expiry Check, the SA Tool correctly returns the appropriate feedback and sends the declined tap to ATS."}, {"Function_Flow_Name": "Reversals", "Sub_Flow_Name": "Period pass load reversal", "Use_Case_Name": "Transaction Reversal \u2013 SA Tool is Offline", "Test_Scnario": "Multiple NFC Media Presentation", "Test_Sce_Description": "Verify that when multiple NFC media are presented to the device at one time, the SA Tool correctly blocks all fare payment functionality and displays an error toast message."}, {"Function_Flow_Name": "Reversals", "Sub_Flow_Name": "Period pass load reversal", "Use_Case_Name": "Transaction Reversal \u2013 SA Tool is Offline", "Test_Scnario": "SA Tool in Out-of-Service State", "Test_Sce_Description": "Verify that when the SA Tool is in Out-of-Service state, it correctly provides the 'Not In Service' screen to the cardholder and does not detect the media."}, {"Function_Flow_Name": "Reversals", "Sub_Flow_Name": "Period pass load reversal", "Use_Case_Name": "Transaction Reversal \u2013 SA Tool is Offline", "Test_Scnario": "SA Tool Configured for Farecard Reversals Only", "Test_Sce_Description": "Verify that when the SA Tool is configured for only farecard reversals, it correctly processes farecard reversals and does not accept other types of transactions."}, {"Function_Flow_Name": "Reversals", "Sub_Flow_Name": "Period pass load reversal", "Use_Case_Name": "Transaction Reversal \u2013 SA Tool is Offline", "Test_Scnario": "SA Tool in Standby State", "Test_Sce_Description": "Verify that when the SA Tool is in Standby state, it correctly disconnects from all peripherals to conserve battery life and requires the operator to press the physical power button and sign-in to bring the device back into In-Service state."}, {"Function_Flow_Name": "Reversals", "Sub_Flow_Name": "Period pass load reversal", "Use_Case_Name": "Transaction Reversal \u2013 SA Tool is Offline", "Test_Scnario": "SA Tool in Revenue Mode", "Test_Sce_Description": "Verify that when the SA Tool is in Revenue Mode, it correctly allows the operator to interact with customers and perform all necessary functions such as inspection, fare payments, sales, refunds/reversals, farecard queries, and other customer service gestures."}, {"Function_Flow_Name": "Reversals", "Sub_Flow_Name": "Period pass load reversal", "Use_Case_Name": "Transaction Reversal \u2013 SA Tool is Offline", "Test_Scnario": "SA Tool in Training Mode", "Test_Sce_Description": "Verify that when the SA Tool is in Training Mode, it correctly mimics all functionality available within Sales Mode without accepting payment, and only sends non-revenue transactions."}, {"Function_Flow_Name": "Reversals", "Sub_Flow_Name": "Period pass load reversal", "Use_Case_Name": "Transaction Reversal - Customer Requests Audio Messages", "Test_Scnario": "Fare Reversal Request with Audio Messages", "Test_Sce_Description": "Verify that when a customer requests to reverse a fare and requests audio messages for fare reversal, the system correctly enables audio mode and plays the corresponding audio message in the default language of the customer's Farecard."}, {"Function_Flow_Name": "Reversals", "Sub_Flow_Name": "Period pass load reversal", "Use_Case_Name": "Transaction Reversal - Customer Requests Audio Messages", "Test_Scnario": "Volume Adjustment during Fare Reversal", "Test_Sce_Description": "Verify that the operator can change the volume level using the physical device buttons at the customer\u2019s discretion during the fare reversal process. The volume adjustment bar should appear and timeout automatically, indicating the volume level."}, {"Function_Flow_Name": "Reversals", "Sub_Flow_Name": "Period pass load reversal", "Use_Case_Name": "Transaction Reversal - Customer Requests Audio Messages", "Test_Scnario": "Volume Reset after Fare Reversal", "Test_Sce_Description": "Verify that the volume returns to the device default after the fare reversal use case is completed."}, {"Function_Flow_Name": "Reversals", "Sub_Flow_Name": "Period pass load reversal", "Use_Case_Name": "Transaction Reversal - Customer Requests Audio Messages", "Test_Scnario": "Fare Reversal Screen Display", "Test_Sce_Description": "Verify that the SA Tool displays the fare reversal screen to the operator and customer for the duration of the audio message."}, {"Function_Flow_Name": "Reversals", "Sub_Flow_Name": "Period pass load reversal", "Use_Case_Name": "Transaction Reversal - Customer Requests Audio Messages", "Test_Scnario": "Fare Reversal with Unreadable Farecard", "Test_Sce_Description": "Verify that if the SA Tool application detects the Farecard and fails to read it correctly, it indicates to the operator that the Farecard is unreadable."}, {"Function_Flow_Name": "Reversals", "Sub_Flow_Name": "Period pass load reversal", "Use_Case_Name": "Transaction Reversal - Customer Requests Audio Messages", "Test_Scnario": "Fare Reversal with Offline SA Tool", "Test_Sce_Description": "Verify that if the SA Tool is offline and not connected to ATS, it checks the Tap Counter to see if it is exceeded and stores the request for reversal."}, {"Function_Flow_Name": "Reversals", "Sub_Flow_Name": "Period pass load reversal", "Use_Case_Name": "Transaction Reversal - Customer Requests Audio Messages", "Test_Scnario": "Fare Reversal with Blocked Farecard", "Test_Sce_Description": "Verify that if the customer's Farecard is blocked, the device sends the request to ATS for processing, ATS detects the card is blocked, returns a declined/error result back to the SA Tool, and the SA Tool displays a declined message to the customer."}, {"Function_Flow_Name": "Reversals", "Sub_Flow_Name": "Period pass load reversal", "Use_Case_Name": "Transaction Reversal - Customer Requests Audio Messages", "Test_Scnario": "Fare Reversal with Farecard on Deny List", "Test_Sce_Description": "Verify that if the customer's Farecard is on the Deny List, ATS detects the Virtual Card is on the Deny List, moves card to blocked and removes from the Deny List, and returns declined/error result back to SA Tool."}, {"Function_Flow_Name": "Reversals", "Sub_Flow_Name": "Period pass load reversal", "Use_Case_Name": "Transaction Reversal - Customer Requests Audio Messages", "Test_Scnario": "Fare Reversal with Low Battery", "Test_Sce_Description": "Verify that if the low battery threshold is reached before Step 4, the application switches to \u201cOut of Service\u201d mode. Else, the customer\u2019s transaction is reversed as per Step 5. The application then switches to \u201cOut of Service\u201d mode."}, {"Function_Flow_Name": "Reversals", "Sub_Flow_Name": "Period pass load reversal", "Use_Case_Name": "Transaction Reversal - Customer Requests Audio Messages", "Test_Scnario": "Fare Reversal with Non-Farecard", "Test_Sce_Description": "Verify that if the customer taps a card that is not a Farecard, the SA Tool application does not respond, but the device error message \u201cCard Read Error\u201d is displayed for a short period of time."}, {"Function_Flow_Name": "Refunds", "Sub_Flow_Name": "E-Purse balance refund", "Use_Case_Name": "Split Refunds", "Test_Scnario": "Verify Split Refunds Functionality", "Test_Sce_Description": "This scenario will test the functionality of the split refunds feature. The operator should be able to perform a refund for a transaction via multiple forms of payment. Only one of each debit and credit card payment should be allowed per transaction. Multiple cash payments should be processed as one transaction in the backend."}, {"Function_Flow_Name": "Refunds", "Sub_Flow_Name": "E-Purse balance refund", "Use_Case_Name": "Split Refunds", "Test_Scnario": "Verify Refund Amount Limit", "Test_Sce_Description": "This scenario will test the limit of the refund amount. If the operator inputs a refund amount of $20 in cash, they should be allowed to input more cash payments. If the operator inputs 2 $20 cash refunds separately, they should show on the receipt as the total of $40."}, {"Function_Flow_Name": "Refunds", "Sub_Flow_Name": "E-Purse balance refund", "Use_Case_Name": "Split Refunds", "Test_Scnario": "Verify Zero Dollar Transactions", "Test_Sce_Description": "This scenario will test the handling of zero dollar transactions. Zero dollar transactions must always be paid or refunded in cash (no other payment method available)."}, {"Function_Flow_Name": "Refunds", "Sub_Flow_Name": "E-Purse balance refund", "Use_Case_Name": "Split Refunds", "Test_Scnario": "Verify Exception Flow: Payment Amount Greater than Total Shopping Cart Amount", "Test_Sce_Description": "This scenario will test the exception flow where the operator has chosen a payment amount greater than the total shopping cart amount. The SA Tool application should provide an error notification to the Operator."}, {"Function_Flow_Name": "Refunds", "Sub_Flow_Name": "E-Purse balance refund", "Use_Case_Name": "Split Refunds", "Test_Scnario": "Verify Alternate Flow: Customer\u2019s Farecard is on the Action, Load Value, or Hotlist", "Test_Sce_Description": "This scenario will test the alternate flow where the customer\u2019s Farecard is on the Action, Load Value, or Hotlist. The SA Tool device should detect this and update the Farecard accordingly."}, {"Function_Flow_Name": "Refunds", "Sub_Flow_Name": "E-Purse balance refund", "Use_Case_Name": "Split Refunds", "Test_Scnario": "Verify Performance of Split Refunds Functionality", "Test_Sce_Description": "This scenario will test the performance of the split refunds feature. The system should be able to handle multiple transactions and refunds without any lag or delay."}, {"Function_Flow_Name": "Refunds", "Sub_Flow_Name": "E-Purse balance refund", "Use_Case_Name": "Split Refunds", "Test_Scnario": "Verify Security of Split Refunds Functionality", "Test_Sce_Description": "This scenario will test the security of the split refunds feature. The system should securely process the refunds and protect the customer's payment information."}, {"Function_Flow_Name": "Refunds", "Sub_Flow_Name": "E-Purse balance refund", "Use_Case_Name": "Operator Selects Debit or Credit where Payment Amount Selected is Greater than Total Shopping Cart Amount", "Test_Scnario": "Verify Split Payment Functionality", "Test_Sce_Description": "Ensure that the split payment functionality works as expected. The customer should be able to pay with multiple forms of payment. Only one of each debit and credit card payment is allowed per transaction. Multiple Cash CAD, Cash USD, Coupon, Warrants, or Voucher payments should be processed as one transaction in the backend."}, {"Function_Flow_Name": "Refunds", "Sub_Flow_Name": "E-Purse balance refund", "Use_Case_Name": "Operator Selects Debit or Credit where Payment Amount Selected is Greater than Total Shopping Cart Amount", "Test_Scnario": "Verify Zero Dollar Transactions", "Test_Sce_Description": "Ensure that zero dollar transactions are always paid or refunded in cash. No other payment method should be available for these transactions."}, {"Function_Flow_Name": "Refunds", "Sub_Flow_Name": "E-Purse balance refund", "Use_Case_Name": "Operator Selects Debit or Credit where Payment Amount Selected is Greater than Total Shopping Cart Amount", "Test_Scnario": "Verify Payment Method Limit", "Test_Sce_Description": "Ensure that the system correctly handles situations where the mean of payment limit has been reached before the total has been paid. The transaction should be reversed, and the customer must agree to distribute charges to the payment means such that the total has been paid."}, {"Function_Flow_Name": "Refunds", "Sub_Flow_Name": "E-Purse balance refund", "Use_Case_Name": "Operator Selects Debit or Credit where Payment Amount Selected is Greater than Total Shopping Cart Amount", "Test_Scnario": "Verify Receipt Printing", "Test_Sce_Description": "Ensure that upon successful transaction, the SA Tool prints the customer receipt. If the method of payment was a debit or credit card, the receipt should automatically print."}, {"Function_Flow_Name": "Refunds", "Sub_Flow_Name": "E-Purse balance refund", "Use_Case_Name": "Operator Selects Debit or Credit where Payment Amount Selected is Greater than Total Shopping Cart Amount", "Test_Scnario": "Verify Operator Selects Credit Voucher, Coupon, Cheque, or Warrant where Payment Amount Selected is Greater than Total Shopping Cart Amount", "Test_Sce_Description": "Ensure that the system correctly handles situations where the operator has chosen a payment amount greater than the total shopping cart amount and has selected Credit Voucher, Coupon, or Warrant as part of the split payment. The \u2018Change Due\u2019 option should not be available as there will never be change returned to the Customer for a Credit Voucher, Coupon, Cheque, or a Warrant."}, {"Function_Flow_Name": "Refunds", "Sub_Flow_Name": "E-Purse balance refund", "Use_Case_Name": "Operator Selects Debit or Credit where Payment Amount Selected is Greater than Total Shopping Cart Amount", "Test_Scnario": "Verify Operator Selects Debit or Credit where Payment Amount Selected is Greater than Total Shopping Cart Amount", "Test_Sce_Description": "Ensure that the system correctly handles situations where the operator has chosen a payment amount greater than the total shopping cart amount and has selected Debit or Credit as part of the split payment. The SA Tool application should provide an error notification to the Operator as they cannot select a payment amount greater than the total shopping cart amount."}, {"Function_Flow_Name": "Refunds", "Sub_Flow_Name": "E-Purse balance refund", "Use_Case_Name": "Operator Selects Debit or Credit where Payment Amount Selected is Greater than Total Shopping Cart Amount", "Test_Scnario": "Verify Performance of Split Payment Functionality", "Test_Sce_Description": "Ensure that the split payment functionality performs well under load. The system should be able to handle multiple split payment transactions concurrently without any degradation in performance."}, {"Function_Flow_Name": "Refunds", "Sub_Flow_Name": "E-Purse balance refund", "Use_Case_Name": "Operator Selects Debit or Credit where Payment Amount Selected is Greater than Total Shopping Cart Amount", "Test_Scnario": "Verify Security of Split Payment Functionality", "Test_Sce_Description": "Ensure that the split payment functionality is secure. Unauthorized users should not be able to access or manipulate split payment transactions. All payment information should be securely encrypted."}, {"Function_Flow_Name": "Refunds", "Sub_Flow_Name": "E-Purse balance refund", "Use_Case_Name": "Customer\u2019s Farecard is on the Action, Load Value, or Hotlist", "Test_Scnario": "Processing Load Value or Action Prior to Fare Validation", "Test_Sce_Description": "This scenario tests the functionality of the device to process the Load Value or Action Transaction before continuing with the fare validation. The device should provide appropriate feedback to the cardholder of a successful transaction and update the Farecard accordingly."}, {"Function_Flow_Name": "Refunds", "Sub_Flow_Name": "E-Purse balance refund", "Use_Case_Name": "Customer\u2019s Farecard is on the Action, Load Value, or Hotlist", "Test_Scnario": "Processing Fare with Valid Transfer Product", "Test_Sce_Description": "This scenario tests the functionality of the device when the Farecard contains a valid transfer product. The device should reduce the Tap-On Fare and the Underpayment Value to account for the Transfer Discount."}, {"Function_Flow_Name": "Refunds", "Sub_Flow_Name": "E-Purse balance refund", "Use_Case_Name": "Customer\u2019s Farecard is on the Action, Load Value, or Hotlist", "Test_Scnario": "Processing Fare with Default O/D", "Test_Sce_Description": "This scenario tests the functionality of the device when the Farecard contains a Default O/D and the customer taps on at either the Origin or Destination Station. The device should process a full Fare-by-Zone transaction and deduct the Full Fare value for the station-to-station trip."}, {"Function_Flow_Name": "Refunds", "Sub_Flow_Name": "E-Purse balance refund", "Use_Case_Name": "Customer\u2019s Farecard is on the Action, Load Value, or Hotlist", "Test_Scnario": "Overriding Default O/D", "Test_Sce_Description": "This scenario tests the functionality of the device when the customer requests to override the Default O/D. The device should inform the customer that it is prepared to override the Default Trip and process the tap as a regular tap-on."}, {"Function_Flow_Name": "Refunds", "Sub_Flow_Name": "E-Purse balance refund", "Use_Case_Name": "Customer\u2019s Farecard is on the Action, Load Value, or Hotlist", "Test_Scnario": "Processing Underpayment from Previous Trip", "Test_Sce_Description": "This scenario tests the functionality of the device when the Farecard contains an Underpayment from a previous trip. The device should detect the Underpayment, deduct this value from the E-Purse Balance, and clear the underpayment field."}, {"Function_Flow_Name": "Refunds", "Sub_Flow_Name": "E-Purse balance refund", "Use_Case_Name": "Customer\u2019s Farecard is on the Action, Load Value, or Hotlist", "Test_Scnario": "Handling Non-Revenue Farecard", "Test_Sce_Description": "This scenario tests the functionality of the device when a Non-Revenue Farecard is tapped. The device should only accept Non-Revenue farecard in the training mode and display a declined HMI in the revenue mode."}, {"Function_Flow_Name": "Refunds", "Sub_Flow_Name": "E-Purse balance refund", "Use_Case_Name": "Customer\u2019s Farecard is on the Action, Load Value, or Hotlist", "Test_Scnario": "Processing Fare with Temporal Class Supplement", "Test_Sce_Description": "This scenario tests the functionality of the device when the Farecard is tapped during a time period that contains an associated Temporal Class Supplement. The device should process the temporal class supplement in addition to the Base Fare."}, {"Function_Flow_Name": "Refunds", "Sub_Flow_Name": "E-Purse balance refund", "Use_Case_Name": "Customer\u2019s Farecard is on the Action, Load Value, or Hotlist", "Test_Scnario": "Processing Fare with Autoload Enabled", "Test_Sce_Description": "This scenario tests the functionality of the device when the Farecard with Autoload Enabled is tapped and the Fare amount crosses the Auto-load threshold. The device should add the Autoload amount to the E-Purse balance."}, {"Function_Flow_Name": "Refunds", "Sub_Flow_Name": "E-Purse balance refund", "Use_Case_Name": "Customer\u2019s Farecard is on the Action, Load Value, or Hotlist", "Test_Scnario": "Processing Fare with Fare Type Discount", "Test_Sce_Description": "This scenario tests the functionality of the device when the Farecard with a Fare type other than Default is tapped. The device should display the \u201cFare Payment with Fare type Discount\u201d HMI and account for the concession discount in the Fare."}, {"Function_Flow_Name": "Refunds", "Sub_Flow_Name": "E-Purse balance refund", "Use_Case_Name": "Customer\u2019s Farecard is on the Action, Load Value, or Hotlist", "Test_Scnario": "Overriding Default Trip Prior to Tapping-Off", "Test_Sce_Description": "This scenario tests the functionality of the device when the customer overrides the Default Trip prior to tapping-off. The device should process the override request and update the Farecard accordingly."}, {"Function_Flow_Name": "Refunds", "Sub_Flow_Name": "E-Purse balance refund", "Use_Case_Name": "Farecard tapped during the write tap does not match the Farecard tapped during the identification tap", "Test_Scnario": "Farecard mismatch during write tap", "Test_Sce_Description": "This scenario will test the functionality of the system when the Farecard tapped during the write tap does not match the Farecard tapped during the identification tap. The system should be able to detect the mismatch and display an appropriate error message."}, {"Function_Flow_Name": "Refunds", "Sub_Flow_Name": "E-Purse balance refund", "Use_Case_Name": "Farecard tapped during the write tap does not match the Farecard tapped during the identification tap", "Test_Scnario": "Underpayment handling", "Test_Sce_Description": "This scenario will test the system's ability to handle situations where the customer's Farecard is in underpayment. The system should be able to detect the underpayment and guide the operator through the necessary steps to resolve the issue."}, {"Function_Flow_Name": "Refunds", "Sub_Flow_Name": "E-Purse balance refund", "Use_Case_Name": "Farecard tapped during the write tap does not match the Farecard tapped during the identification tap", "Test_Scnario": "Incorrect Farecard Type", "Test_Sce_Description": "This scenario will test the system's ability to detect when the Farecard tapped is the incorrect type for the Mode. The system should be able to identify the incorrect Farecard Type and notify the operator."}, {"Function_Flow_Name": "Refunds", "Sub_Flow_Name": "E-Purse balance refund", "Use_Case_Name": "Farecard tapped during the write tap does not match the Farecard tapped during the identification tap", "Test_Scnario": "Non-Farecard tapped to the reader", "Test_Sce_Description": "This scenario will test the system's ability to identify when a non-Farecard is tapped to the reader. The system should be able to detect the non-Farecard and display an error message."}, {"Function_Flow_Name": "Refunds", "Sub_Flow_Name": "E-Purse balance refund", "Use_Case_Name": "Farecard tapped during the write tap does not match the Farecard tapped during the identification tap", "Test_Scnario": "Failure to read Virtual Card", "Test_Sce_Description": "This scenario will test the system's ability to handle situations where it fails to read a customer's Virtual Card. The system should be able to detect the failure and prompt the operator to try again."}, {"Function_Flow_Name": "Refunds", "Sub_Flow_Name": "E-Purse balance refund", "Use_Case_Name": "Farecard tapped during the write tap does not match the Farecard tapped during the identification tap", "Test_Scnario": "Blocked/Hotlisted Farecard \u2013 Virtual Card", "Test_Sce_Description": "This scenario will test the system's ability to detect when a customer's Farecard is blocked. The system should be able to identify the blocked Farecard and prevent the operator from taking any further actions on the Farecard."}, {"Function_Flow_Name": "Refunds", "Sub_Flow_Name": "E-Purse balance refund", "Use_Case_Name": "Farecard tapped during the write tap does not match the Farecard tapped during the identification tap", "Test_Scnario": "Ineligible Products", "Test_Sce_Description": "This scenario will test the system's ability to handle situations where the products added to the cart are no longer eligible for purchase. The system should be able to detect the ineligible products and guide the operator through the necessary steps to remove them from the cart."}, {"Function_Flow_Name": "Refunds", "Sub_Flow_Name": "E-Purse balance refund", "Use_Case_Name": "Farecard tapped during the write tap does not match the Farecard tapped during the identification tap", "Test_Scnario": "ATS failure to load products", "Test_Sce_Description": "This scenario will test the system's ability to handle situations where the ATS is unable to load products to the customer's account. The system should be able to detect the failure and guide the operator through the necessary steps to attempt the checkout again or provide a refund if the customer paid with cash."}, {"Function_Flow_Name": "Refunds", "Sub_Flow_Name": "Ticket/Special Ticket refund", "Use_Case_Name": "Action, load value, or hotlist", "Test_Scnario": "Load Value or Action Processing", "Test_Sce_Description": "Verify that the device correctly processes the Load or Action Transaction prior to continuing the validation Use Case. This includes checking that the device provides the appropriate feedback to the Cardholder of a successful transaction and updates the Farecard accordingly."}, {"Function_Flow_Name": "Refunds", "Sub_Flow_Name": "Ticket/Special Ticket refund", "Use_Case_Name": "Action, load value, or hotlist", "Test_Scnario": "Temporal Class Supplement Processing", "Test_Sce_Description": "Verify that the device correctly checks the tap-on time associated to the current transaction and processes the temporal class supplement in addition to the Base Fare. This includes checking that the device provides the appropriate feedback to the Cardholder of a successful transaction and updates the Farecard accordingly."}, {"Function_Flow_Name": "Refunds", "Sub_Flow_Name": "Ticket/Special Ticket refund", "Use_Case_Name": "Action, load value, or hotlist", "Test_Scnario": "Non-Revenue Farecard Processing", "Test_Sce_Description": "Verify that the SA tool only accepts Non-Revenue farecard in the training mode and if the Non-Revenue card is tapped in the revenue mode, the device displays a declined HMI."}, {"Function_Flow_Name": "Refunds", "Sub_Flow_Name": "Ticket/Special Ticket refund", "Use_Case_Name": "Action, load value, or hotlist", "Test_Scnario": "Autoload Enabled Farecard Processing", "Test_Sce_Description": "Verify that if the Fare causes the Farecard E-Purse Balance to cross the Auto-load threshold, the Farecard has the Autoload amount automatically added to the E-Purse balance. This includes checking that the device provides the appropriate feedback to the Cardholder of a successful transaction and updates the Farecard accordingly."}, {"Function_Flow_Name": "Refunds", "Sub_Flow_Name": "Ticket/Special Ticket refund", "Use_Case_Name": "Action, load value, or hotlist", "Test_Scnario": "Fare Type Discount Processing", "Test_Sce_Description": "Verify that the device correctly displays the \u201cFare Payment with Fare type Discount\u201d HMI and accounts for the concession discount in the Fare. This includes checking that the device provides the appropriate feedback to the Cardholder of a successful transaction and updates the Farecard accordingly."}, {"Function_Flow_Name": "Refunds", "Sub_Flow_Name": "Ticket/Special Ticket refund", "Use_Case_Name": "Action, load value, or hotlist", "Test_Scnario": "Default Trip Override Processing", "Test_Sce_Description": "Verify that the device correctly processes the override of a Default Trip by the customer and updates the Farecard accordingly. This includes checking that the device provides the appropriate feedback to the Cardholder of a successful transaction."}, {"Function_Flow_Name": "Refunds", "Sub_Flow_Name": "Ticket/Special Ticket refund", "Use_Case_Name": "Action, load value, or hotlist", "Test_Scnario": "Transfer Product Processing", "Test_Sce_Description": "Verify that the Tap-On Fare configured on the device as well as the Underpayment Value is reduced to account for the Transfer Discount when a valid transfer product is contained on the Farecard."}, {"Function_Flow_Name": "Refunds", "Sub_Flow_Name": "Ticket/Special Ticket refund", "Use_Case_Name": "Action, load value, or hotlist", "Test_Scnario": "Default O/D Processing", "Test_Sce_Description": "Verify that the device correctly processes a full Fare-by-Zone transaction (both tap-on and tap-off) in case of a default O/D on the Farecard."}, {"Function_Flow_Name": "Refunds", "Sub_Flow_Name": "Ticket/Special Ticket refund", "Use_Case_Name": "Action, load value, or hotlist", "Test_Scnario": "Underpayment Processing", "Test_Sce_Description": "Verify that the device correctly deducts the Underpayment Value from the Farecard E-Purse prior to performing the Fare Validation. This includes checking that the device clears the underpayment field."}, {"Function_Flow_Name": "Refunds", "Sub_Flow_Name": "Ticket/Special Ticket refund", "Use_Case_Name": "Action, load value, or hotlist", "Test_Scnario": "Temporal Class Supplement Time Processing", "Test_Sce_Description": "Verify that the device correctly processes the Tap-Off Transaction as a regular fare (no temporal class supplement applied) tap-on when the Farecard taps off on a Device with a Temporal class Supplement after tapping-on outside of a Temporal class Supplement Time Profile."}, {"Function_Flow_Name": "Refunds", "Sub_Flow_Name": "Ticket/Special Ticket refund", "Use_Case_Name": "Farecard tapped does not match", "Test_Scnario": "Farecard tapped does not match", "Test_Sce_Description": "This scenario will test the functionality of the system when the Farecard tapped during the write tap does not match the Farecard tapped during the identification tap. The system should display an error message and prompt the operator to tap the correct card in order to proceed."}, {"Function_Flow_Name": "Refunds", "Sub_Flow_Name": "Ticket/Special Ticket refund", "Use_Case_Name": "Farecard tapped does not match", "Test_Scnario": "Underpayment handling", "Test_Sce_Description": "This scenario will test the system's ability to handle underpayment situations. If the customer\u2019s card is in underpayment, the identification tap should detect the underpayment amount. The system should then inform the operator and guide them through the necessary steps to resolve the underpayment."}, {"Function_Flow_Name": "Refunds", "Sub_Flow_Name": "Ticket/Special Ticket refund", "Use_Case_Name": "Farecard tapped does not match", "Test_Scnario": "Farecard Tapped is the incorrect Farecard Type", "Test_Sce_Description": "This scenario will test the system's ability to identify and handle situations where the Farecard tapped is the incorrect type for the Mode. The system should notify the operator of the incorrect Farecard Type and terminate the use case."}, {"Function_Flow_Name": "Refunds", "Sub_Flow_Name": "Ticket/Special Ticket refund", "Use_Case_Name": "Farecard tapped does not match", "Test_Scnario": "Non-Farecard tapped to the reader", "Test_Sce_Description": "This scenario will test the system's ability to identify and handle situations where a Non-Farecard is tapped to the reader. The system should identify the card as a non-Farecard and display an error pop up message."}, {"Function_Flow_Name": "Refunds", "Sub_Flow_Name": "Ticket/Special Ticket refund", "Use_Case_Name": "Farecard tapped does not match", "Test_Scnario": "Failure to read Virtual Card", "Test_Sce_Description": "This scenario will test the system's ability to handle situations where it fails to read a customer\u2019s Virtual Card. The system should indicate to the operator that the Virtual Card read has failed and allow them to try again."}, {"Function_Flow_Name": "Refunds", "Sub_Flow_Name": "Ticket/Special Ticket refund", "Use_Case_Name": "Farecard tapped does not match", "Test_Scnario": "Non-Virtual Card tapped to the reader", "Test_Sce_Description": "This scenario will test the system's ability to identify and handle situations where a Non-Virtual Card is tapped to the reader. The system should identify the card as a non-Virtual Card and display an error pop up message."}, {"Function_Flow_Name": "Refunds", "Sub_Flow_Name": "Ticket/Special Ticket refund", "Use_Case_Name": "Farecard tapped does not match", "Test_Scnario": "Blocked/Hotlisted Farecard \u2013 Virtual Card", "Test_Sce_Description": "This scenario will test the system's ability to handle situations where a customer\u2019s Farecard is blocked. The system should detect that the Farecard is blocked and display the Farecard query screen indicating that the Farecard has been blocked."}, {"Function_Flow_Name": "Refunds", "Sub_Flow_Name": "Ticket/Special Ticket refund", "Use_Case_Name": "Farecard tapped does not match", "Test_Scnario": "Virtual Card \u2013 Ineligible Products", "Test_Sce_Description": "This scenario will test the system's ability to handle situations where the shopping cart has ineligible products. The system should display an error confirming that one or more of the products are not available for sale."}, {"Function_Flow_Name": "Refunds", "Sub_Flow_Name": "Ticket/Special Ticket refund", "Use_Case_Name": "Farecard tapped does not match", "Test_Scnario": "ATS failure to load products", "Test_Sce_Description": "This scenario will test the system's ability to handle situations where ATS is unable to load products to the customer\u2019s account. The system should inform the operator that the products purchased were not added to the user\u2019s account."}, {"Function_Flow_Name": "Refunds", "Sub_Flow_Name": "Ticket/Special Ticket refund", "Use_Case_Name": "If split payment for the refund/reversal has already begun and the customer has been refunded with at least 1 mean of payment and that mean of payment is credit or debit", "Test_Scnario": "Cancellation of transaction with credit or debit payment", "Test_Sce_Description": "Verify that the system allows the operator to cancel the transaction when the customer has been refunded with at least one mean of payment that is credit or debit. The system should inform the operator that the payment means must be reversed and prompt for confirmation. Upon confirmation, the system should automatically reverse non-credit and/or non-debit means of payment. The operator should then choose the mean of payment and prompt the customer to interact with the PIN pad for a refund void. The system should then print a customer receipt with Moneris information and return the operator to the home screen."}, {"Function_Flow_Name": "Refunds", "Sub_Flow_Name": "Ticket/Special Ticket refund", "Use_Case_Name": "If split payment for the refund/reversal has already begun and the customer has been refunded with at least 1 mean of payment and that mean of payment is credit or debit", "Test_Scnario": "Cancellation of transaction with non-credit or non-debit payment", "Test_Sce_Description": "Verify that the system allows the operator to cancel the transaction when the customer has been refunded with at least one mean of payment that is not credit or debit. The system should inform the operator that the payment means must be reversed and prompt for confirmation. Upon confirmation, the system should automatically reverse the payment means and prompt the operator to begin a refund void. The system should then print a customer and merchant receipt and return the operator to the home screen."}, {"Function_Flow_Name": "Refunds", "Sub_Flow_Name": "Ticket/Special Ticket refund", "Use_Case_Name": "If split payment for the refund/reversal has already begun and the customer has been refunded with at least 1 mean of payment and that mean of payment is credit or debit", "Test_Scnario": "Adding quantity exceeding maximum limit", "Test_Sce_Description": "Verify that the system does not allow the operator to add more than the maximum allowable quantity of a product to the shopping cart. The operator should inform the customer that they must process their request in multiple transactions. The system should then return the operator to the main use case."}, {"Function_Flow_Name": "Refunds", "Sub_Flow_Name": "Ticket/Special Ticket refund", "Use_Case_Name": "If split payment for the refund/reversal has already begun and the customer has been refunded with at least 1 mean of payment and that mean of payment is credit or debit", "Test_Scnario": "Refund or reversal with no eligible products", "Test_Sce_Description": "Verify that the system handles the scenario where no eligible products for refund or reversal are detected. The system should display the relevant error message and the operator must acknowledge the message. The system should then return to the main menu."}, {"Function_Flow_Name": "Refunds", "Sub_Flow_Name": "Ticket/Special Ticket refund", "Use_Case_Name": "If split payment for the refund/reversal has already begun and the customer has been refunded with at least 1 mean of payment and that mean of payment is credit or debit", "Test_Scnario": "Refund or reversal with eligible products not requested by customer", "Test_Sce_Description": "Verify that the system handles the scenario where products are eligible for refund or reversal, but are not what the customer requested. The operator should inform the customer their product is not eligible for reversal or refund and return to the main menu."}, {"Function_Flow_Name": "Refunds", "Sub_Flow_Name": "Ticket/Special Ticket refund", "Use_Case_Name": "If split payment for the refund/reversal has already begun and the customer has been refunded with at least 1 mean of payment and that mean of payment is credit or debit", "Test_Scnario": "Failure to connect to internet", "Test_Sce_Description": "Verify that the system handles the scenario where there is no internet connection and the operator is performing an action that requires connection to the Internet. The system should time out and display the relevant error message with options to try again or cancel. If successful connection is restored, resume the main use case. If the action is cancelled, return to the previous screen."}, {"Function_Flow_Name": "Refunds", "Sub_Flow_Name": "Ticket/Special Ticket refund", "Use_Case_Name": "If split payment for the refund/reversal has already begun and the customer has been refunded with at least 1 mean of payment and that mean of payment is credit or debit", "Test_Scnario": "Cancellation of refund/reversal transaction", "Test_Sce_Description": "Verify that the system allows the operator to cancel the transaction at any point in the Main Use Case. The system should ask the operator if they are certain they want to cancel the transaction. If the operator selects yes, the transaction should be cancelled and the system should return to the main screen. If the operator selects no, proceed through the Main Use Case as usual."}, {"Function_Flow_Name": "Refunds", "Sub_Flow_Name": "Ticket/Special Ticket refund", "Use_Case_Name": "If split payment has already begun and the customer has been refunded with at least 1 mean of payment and none of them are credit or debit", "Test_Scnario": "Split payment refund with non-credit/debit payment", "Test_Sce_Description": "Verify that the system correctly handles a split payment refund where none of the payment methods used were credit or debit. The system should reverse the payment means automatically and prompt the operator to begin a refund void. A customer and merchant receipt should print and the system should return to the home screen."}, {"Function_Flow_Name": "Refunds", "Sub_Flow_Name": "Ticket/Special Ticket refund", "Use_Case_Name": "If split payment has already begun and the customer has been refunded with at least 1 mean of payment and none of them are credit or debit", "Test_Scnario": "Exceeding maximum product quantity", "Test_Sce_Description": "Verify that the system correctly prevents the operator from adding more than the maximum allowable quantity of a product to the shopping cart. The operator should be informed that they must process the customer's request in multiple transactions."}, {"Function_Flow_Name": "Refunds", "Sub_Flow_Name": "Ticket/Special Ticket refund", "Use_Case_Name": "If split payment has already begun and the customer has been refunded with at least 1 mean of payment and none of them are credit or debit", "Test_Scnario": "No eligible products for refund or reversal", "Test_Sce_Description": "Verify that the system correctly handles a situation where no products are eligible for refund or reversal. The system should display an error message which the operator must acknowledge, and then return to the main menu."}, {"Function_Flow_Name": "Refunds", "Sub_Flow_Name": "Ticket/Special Ticket refund", "Use_Case_Name": "If split payment has already begun and the customer has been refunded with at least 1 mean of payment and none of them are credit or debit", "Test_Scnario": "Eligible products for refund or reversal not matching customer request", "Test_Sce_Description": "Verify that the system correctly handles a situation where the products eligible for refund or reversal are not what the customer requested. The operator should inform the customer that their product is not eligible for reversal or refund and return to the main menu."}, {"Function_Flow_Name": "Refunds", "Sub_Flow_Name": "Ticket/Special Ticket refund", "Use_Case_Name": "If split payment has already begun and the customer has been refunded with at least 1 mean of payment and none of them are credit or debit", "Test_Scnario": "Internet connection failure", "Test_Sce_Description": "Verify that the system correctly handles a situation where the internet connection is lost during a flow that requires internet connection. The system should time out and display an error message with options to try again or cancel."}, {"Function_Flow_Name": "Refunds", "Sub_Flow_Name": "Ticket/Special Ticket refund", "Use_Case_Name": "If split payment has already begun and the customer has been refunded with at least 1 mean of payment and none of them are credit or debit", "Test_Scnario": "Split payment with credit/debit payment and integrated PIN pad", "Test_Sce_Description": "Verify that the system correctly handles a split payment where at least one of the payment methods used was credit or debit and the PIN pad is integrated. The system should reverse non-credit/debit payments automatically and prompt the customer to interact with the PIN pad to place the funds on their card."}, {"Function_Flow_Name": "Refunds", "Sub_Flow_Name": "Ticket/Special Ticket refund", "Use_Case_Name": "If split payment has already begun and the customer has been refunded with at least 1 mean of payment and none of them are credit or debit", "Test_Scnario": "Split payment with credit/debit payment and non-integrated PIN pad", "Test_Sce_Description": "Verify that the system correctly handles a split payment where at least one of the payment methods used was credit or debit and the PIN pad is not integrated. The operator should input the amount into the PIN pad and pass it to the customer to interact with."}, {"Function_Flow_Name": "Refunds", "Sub_Flow_Name": "Ticket/Special Ticket refund", "Use_Case_Name": "If split payment has already begun and the customer has been refunded with at least 1 mean of payment and none of them are credit or debit", "Test_Scnario": "Cancellation of refund/reversal transaction", "Test_Sce_Description": "Verify that the system correctly handles the cancellation of a refund/reversal transaction. The system should ask the operator if they are certain they want to cancel the transaction and either cancel the transaction and return to the main screen or proceed through the Main Use Case as usual, depending on the operator's response."}, {"Function_Flow_Name": "Refunds", "Sub_Flow_Name": "Other products", "Use_Case_Name": "Quantity of product added to cart exceeds product maximum", "Test_Scnario": "ATS failure to load products", "Test_Sce_Description": "This scenario tests the exception flow when ATS fails to load products onto a customer\u2019s account after checkout. The operator should be informed that the products purchased were not added to the user\u2019s account. The operator should have the option to attempt the checkout again or provide the customer a refund if the customer paid with cash."}, {"Function_Flow_Name": "Refunds", "Sub_Flow_Name": "Other products", "Use_Case_Name": "Quantity of product added to cart exceeds product maximum", "Test_Scnario": "SVC / VC Shopping Cart", "Test_Sce_Description": "This scenario tests the exception flow when the shopping cart includes both SVC and VC products. The device should not allow both SVC and VC products in the shopping cart at the same time. If the cart has ineligible products, the Operator should receive an error providing them the option to clear the cart."}, {"Function_Flow_Name": "Refunds", "Sub_Flow_Name": "Other products", "Use_Case_Name": "Quantity of product added to cart exceeds product maximum", "Test_Scnario": "ECP is disabled and Customer\u2019s Artemis device is locked or asleep", "Test_Sce_Description": "This scenario tests the exception flow when the user\u2019s device is locked or asleep and ECP is disabled for the users Virtual Card. The Virtual card media should not be detected and the screen should remain the same. The Artemis device should prompt the user to provide authentication."}, {"Function_Flow_Name": "Refunds", "Sub_Flow_Name": "Other products", "Use_Case_Name": "Quantity of product added to cart exceeds product maximum", "Test_Scnario": "Customer\u2019s Artemis device is in Power Reserve mode and ECP is disabled", "Test_Sce_Description": "This scenario tests the exception flow when the user\u2019s mobile device is in Power Reserve mode and ECP is disabled on the mobile device for the users Virtual Card. The Virtual card media should not be detected and the screen should remain the same. The Artemis device should prompt the user to charge their device."}, {"Function_Flow_Name": "Refunds", "Sub_Flow_Name": "Other products", "Use_Case_Name": "Quantity of product added to cart exceeds product maximum", "Test_Scnario": "Required fields not filled out or not valid", "Test_Sce_Description": "This scenario tests the exception flow when the operator attempts to proceed to payment without entering required information or the information entered does not meet validation rules. The SA Tool application should display screen validation rules to prompt the operator to input the correct information."}, {"Function_Flow_Name": "Refunds", "Sub_Flow_Name": "Other products", "Use_Case_Name": "Quantity of product added to cart exceeds product maximum", "Test_Scnario": "Purchase multiple items", "Test_Sce_Description": "This scenario tests the alternate flow when the customer indicates that they would like to conduct other purchases in the same transaction. The operator should be able to return to the SA Tool application Sales screen and select the additional product(s) the customer would like to purchase."}, {"Function_Flow_Name": "Refunds", "Sub_Flow_Name": "Other products", "Use_Case_Name": "Quantity of product added to cart exceeds product maximum", "Test_Scnario": "Refund multiple items", "Test_Sce_Description": "This scenario tests the alternate flow when the customer requests to refund multiple products where refund criteria have been met. The operator should be able to complete one transaction before starting the next. The SA Tool should be able to update the Farecard balance, remove the products and update the transaction history as applicable."}, {"Function_Flow_Name": "Counters", "Sub_Flow_Name": "Activate", "Use_Case_Name": "Sign-In to SA Tool application (First-Time User)", "Test_Scnario": "Launching the SA Tool Application", "Test_Sce_Description": "Verify that an authorized operator is able to successfully launch the SA Tool Application from the home screen of the SA Tool device. The application should perform continuous diagnostic checks for network/cellular connection, battery level, and available storage space. Upon successful launch, the sign-in screen should be displayed."}, {"Function_Flow_Name": "Counters", "Sub_Flow_Name": "Activate", "Use_Case_Name": "Sign-In to SA Tool application (First-Time User)", "Test_Scnario": "Power on SA Tool: continuous self-diagnostic check is unsuccessful (network connection not available)", "Test_Sce_Description": "Verify that the SA Tool performs the continuous diagnostic checks and determines that the device is unable to connect to a network. This should be indicated on the SA Tool. The application should still be able to operate in offline mode, but forget passcode and passcode change functionalities should be unavailable."}, {"Function_Flow_Name": "Counters", "Sub_Flow_Name": "Activate", "Use_Case_Name": "Sign-In to SA Tool application (First-Time User)", "Test_Scnario": "Power on SA Tool: initial self-diagnostic check is unsuccessful", "Test_Sce_Description": "Verify that the SA Tool performs initial self-diagnostic checks and finds critical failures. The tool should go to error state."}, {"Function_Flow_Name": "Counters", "Sub_Flow_Name": "Activate", "Use_Case_Name": "Sign-In to SA Tool application (First-Time User)", "Test_Scnario": "Power on SA Tool: Continuous self-diagnostic check is unsuccessful (storage, battery or secure element)", "Test_Sce_Description": "Verify that the SA Tool application performs the continuous self-diagnostics for storage, battery or secure element and finds errors or failures in any of these elements. The tool should go to out-of-service state and a critical event should be sent to SOTI Mobicontrol and CSM."}, {"Function_Flow_Name": "Counters", "Sub_Flow_Name": "Activate", "Use_Case_Name": "Sign-In to SA Tool application (First-Time User)", "Test_Scnario": "Switching between the PDS SA Tool application and third-party applications", "Test_Sce_Description": "Verify that an authorized operator is able to switch between the SA Tool Application and the whitelisted third-party applications on the device. The operator should be able to navigate to the list of whitelisted third-party applications by tapping on the home button present on the android navigation bar."}, {"Function_Flow_Name": "Counters", "Sub_Flow_Name": "Activate", "Use_Case_Name": "Sign-In to SA Tool application (First-Time User)", "Test_Scnario": "The application is already launched and is running in the background", "Test_Sce_Description": "Verify that if the application that the operator intends to launch is already running in the device background, the operator can tap on the App Overview button on the bottom navigation bar, swipe to navigate through the list of open applications until they find the desired application, and press on the desired application to launch it."}, {"Function_Flow_Name": "Counters", "Sub_Flow_Name": "Activate", "Use_Case_Name": "Sign-In to SA Tool application (First-Time User)", "Test_Scnario": "Sign-In to SA Tool application (First-Time User)", "Test_Sce_Description": "Verify that a first-time user is able to sign-in to the SA Tool application using their operator badge ID and a temporary passcode. The operator should be required to change their temporary passcode upon initial log-in. The application should validate the operator badge ID and temporary passcode combination based on operator credentials stored in user management service. Upon successful validation, the user selected Language preference should be stored in the user management service and the Security Setup screen should be displayed."}, {"Function_Flow_Name": "Counters", "Sub_Flow_Name": "Activate", "Use_Case_Name": "Sign-In to SA Tool application (First-Time User)", "Test_Scnario": "Operator Enters Incorrect Username or Passcode", "Test_Sce_Description": "Verify that if the operator enters an incorrect username or passcode, the device informs the operator that the passcode is incorrect for the counted number of times, and a re-try is permitted after 30 seconds. During the 30-second countdown, the user should not be allowed to attempt sign on. After 30 seconds, the operator can try again."}, {"Function_Flow_Name": "Counters", "Sub_Flow_Name": "Activate", "Use_Case_Name": "Operator Enters Incorrect Username or Passcode", "Test_Scnario": "First Time User Sign-In", "Test_Sce_Description": "Verify that a first-time user is able to sign in to the SA Tool application using their operator badge ID and temporary passcode. The user should be prompted to change their temporary passcode upon initial log-in."}, {"Function_Flow_Name": "Counters", "Sub_Flow_Name": "Activate", "Use_Case_Name": "Operator Enters Incorrect Username or Passcode", "Test_Scnario": "Online Authentication", "Test_Sce_Description": "Verify that the SA Tool communicates with the User management service to authenticate user login. This should be required when the device is online for first-time users and after the local cache is cleaned based on a configurable credential caching duration."}, {"Function_Flow_Name": "Counters", "Sub_Flow_Name": "Activate", "Use_Case_Name": "Operator Enters Incorrect Username or Passcode", "Test_Scnario": "Local Authentication", "Test_Sce_Description": "Verify that local authentication is used for users re-logging into the same SA Tool and whose credentials have not been cleaned based on the configurable credential caching duration. The local credential cache should only store the credentials of users who have logged in to the specific device previously."}, {"Function_Flow_Name": "Counters", "Sub_Flow_Name": "Activate", "Use_Case_Name": "Operator Enters Incorrect Username or Passcode", "Test_Scnario": "Security Setup", "Test_Sce_Description": "Verify that the SA Tool application notifies the operator that they will need to set up security questions and a new passcode. The new passcode must be a 4-digit number."}, {"Function_Flow_Name": "Counters", "Sub_Flow_Name": "Activate", "Use_Case_Name": "Operator Enters Incorrect Username or Passcode", "Test_Scnario": "Passcode Validation", "Test_Sce_Description": "Verify that the SA Tool application validates that the new passcode meets passcode length criteria by connecting to the user management service. If the new passcode length meets the defined criteria, the SA Tool application should indicate to the operator that the passcode was successfully changed."}, {"Function_Flow_Name": "Counters", "Sub_Flow_Name": "Activate", "Use_Case_Name": "Operator Enters Incorrect Username or Passcode", "Test_Scnario": "Incorrect Username or Passcode", "Test_Sce_Description": "Verify that if the operator enters an incorrect username or passcode, the SA Tool application records a cumulative number of unsuccessful sign on attempts for a single valid operator badge ID. When the number of unsuccessful sign-in attempts reaches the maximum number of sign-on attempts, the SA Tool application should deny access to that operator until the operator badge ID is unlocked by the CLIENT Operations user or automatically unlocked after a configurable amount of time."}, {"Function_Flow_Name": "Counters", "Sub_Flow_Name": "Activate", "Use_Case_Name": "Operator Enters Incorrect Username or Passcode", "Test_Scnario": "Network Unavailability", "Test_Sce_Description": "Verify that if the network is unavailable, the SA Tool application displays a message to the operator requesting them to sign in when network is available."}, {"Function_Flow_Name": "Counters", "Sub_Flow_Name": "Activate", "Use_Case_Name": "Operator Enters Incorrect Username or Passcode", "Test_Scnario": "New Passcode Same as Temporary Passcode", "Test_Sce_Description": "Verify that if the new passcode is the same as the temporary passcode, the SA Tool Device informs the user of the error and clears the new passcode fields."}, {"Function_Flow_Name": "Counters", "Sub_Flow_Name": "Activate", "Use_Case_Name": "Operator Enters Incorrect Username or Passcode", "Test_Scnario": "New Passcode Length Does Not Meet Pre-Defined Criteria", "Test_Sce_Description": "Verify that if the new passcode length does not meet the pre-defined criteria, the SA Tool will not enable the submit button until the passcode entered is the correct length."}, {"Function_Flow_Name": "Counters", "Sub_Flow_Name": "Activate", "Use_Case_Name": "Cardholder Taps-Off an Online SA Tool with Virtual Card Media", "Test_Scnario": "Cardholder Taps-Off an Online SA Tool with Virtual Card Media", "Test_Sce_Description": "This scenario will test the functionality of the cardholder tapping off an online SA tool with a virtual card media. The test will ensure that the device correctly detects the virtual card media, performs the necessary checks, sends the tap to ATS for processing, and updates the HMI of the SA tool to confer the right to travel to the cardholder."}, {"Function_Flow_Name": "Counters", "Sub_Flow_Name": "Activate", "Use_Case_Name": "Cardholder Taps-Off an Online SA Tool with Virtual Card Media", "Test_Scnario": "Device Offline and Not Connected to ATS", "Test_Sce_Description": "This scenario will test the functionality of the device when it is offline and not connected to ATS. The test will ensure that the device correctly collects offline tap details, checks if the media is contained on the local hotlist, increments the tap counter, and stores the tap until the device goes back online and connects to ATS."}, {"Function_Flow_Name": "Counters", "Sub_Flow_Name": "Activate", "Use_Case_Name": "Cardholder Taps-Off an Online SA Tool with Virtual Card Media", "Test_Scnario": "Customer Uses Audio Jack to Hear Instructions", "Test_Sce_Description": "This scenario will test the functionality of the device when the customer uses the audio jack to hear instructions. The test will ensure that the device correctly switches into audio assist mode, provides audio instructions on how to adjust the volume and tap the media, and provides prompts and feedback regarding the tap through the headphones."}, {"Function_Flow_Name": "Counters", "Sub_Flow_Name": "Activate", "Use_Case_Name": "Cardholder Taps-Off an Online SA Tool with Virtual Card Media", "Test_Scnario": "Non-Revenue Virtual Card Media is Tapped on the Device", "Test_Sce_Description": "This scenario will test the functionality of the device when a non-revenue virtual card media is tapped on it. The test will ensure that the device correctly sends the tap to ATS like any other open payments media."}, {"Function_Flow_Name": "Counters", "Sub_Flow_Name": "Activate", "Use_Case_Name": "Cardholder Taps-Off an Online SA Tool with Virtual Card Media", "Test_Scnario": "Virtual Card Contains a Default O/D and the Customer Taps on at either the Origin or Destination Station", "Test_Sce_Description": "This scenario will test the functionality of the device when the virtual card media contains a default trip and the current tap location is either the origin or destination. The test will ensure that the device correctly processes the tap as a normal tap-off."}, {"Function_Flow_Name": "Counters", "Sub_Flow_Name": "Activate", "Use_Case_Name": "Cardholder Taps-Off an Online SA Tool with Virtual Card Media", "Test_Scnario": "Virtual Card Media Fails Card Authentication Check", "Test_Sce_Description": "This scenario will test the functionality of the device when the virtual card media fails the card authentication check. The test will ensure that the device correctly returns the appropriate feedback, provides the declined screen to the cardholder, captures and logs an error in the background, and sends the declined tap to ATS."}, {"Function_Flow_Name": "Counters", "Sub_Flow_Name": "Activate", "Use_Case_Name": "Cardholder Taps-Off an Online SA Tool with Virtual Card Media", "Test_Scnario": "Multiple NFC Media are Presented to the Device at One Time", "Test_Sce_Description": "This scenario will test the functionality of the device when multiple NFC media are presented to it at one time. The test will ensure that the device correctly handles this situation and does not malfunction or crash."}, {"Function_Flow_Name": "Counters", "Sub_Flow_Name": "Activate", "Use_Case_Name": "Tap-Off an SA Tool with Virtual Card Media \u2013 Device is offline and not connected to ATS", "Test_Scnario": "Offline Device Tap-Off", "Test_Sce_Description": "Verify that when the device is offline and not connected to ATS, it collects offline tap details and once the device returns back online, offline taps are sent to ATS via bulk upload."}, {"Function_Flow_Name": "Counters", "Sub_Flow_Name": "Activate", "Use_Case_Name": "Tap-Off an SA Tool with Virtual Card Media \u2013 Device is offline and not connected to ATS", "Test_Scnario": "Media Validation on Local Hotlist", "Test_Sce_Description": "Verify that the device checks if the media is contained on the local hotlist, and if the hotlist parameter on the Virtual Card Scratchpad is enabled."}, {"Function_Flow_Name": "Counters", "Sub_Flow_Name": "Activate", "Use_Case_Name": "Tap-Off an SA Tool with Virtual Card Media \u2013 Device is offline and not connected to ATS", "Test_Scnario": "Tap Counter Increment", "Test_Sce_Description": "Verify that the tap counter is checked and incremented when a tap is made."}, {"Function_Flow_Name": "Counters", "Sub_Flow_Name": "Activate", "Use_Case_Name": "Tap-Off an SA Tool with Virtual Card Media \u2013 Device is offline and not connected to ATS", "Test_Scnario": "Latent Transaction Processor Functionality", "Test_Sce_Description": "Verify that the latent transaction processor stores the tap till the device goes back online and connects to ATS. The tap should then be rated in ATS."}, {"Function_Flow_Name": "Counters", "Sub_Flow_Name": "Activate", "Use_Case_Name": "Tap-Off an SA Tool with Virtual Card Media \u2013 Device is offline and not connected to ATS", "Test_Scnario": "Right to Travel Conferment", "Test_Sce_Description": "Verify that the right to travel is conferred to the Cardholder by updating the HMI of the SA Tool. The FPS \u2013 E-Purse Tap Off should be provided to the cardholder."}, {"Function_Flow_Name": "Counters", "Sub_Flow_Name": "Activate", "Use_Case_Name": "Tap-Off an SA Tool with Virtual Card Media \u2013 Device is offline and not connected to ATS", "Test_Scnario": "Audio Assist Mode Activation", "Test_Sce_Description": "Verify that when a customer inserts headphones into the Audio jack, the device automatically switches into audio assist mode."}, {"Function_Flow_Name": "Counters", "Sub_Flow_Name": "Activate", "Use_Case_Name": "Tap-Off an SA Tool with Virtual Card Media \u2013 Device is offline and not connected to ATS", "Test_Scnario": "Audio Instructions and Volume Adjustment", "Test_Sce_Description": "Verify that audio instructions detail how to adjust the volume by pressing the volume button and then prompt the user to tap their media. The default volume level should be set to Medium and the volume levels can be rotated through Low \u2013 Medium \u2013 High."}, {"Function_Flow_Name": "Counters", "Sub_Flow_Name": "Activate", "Use_Case_Name": "Tap-Off an SA Tool with Virtual Card Media \u2013 Device is offline and not connected to ATS", "Test_Scnario": "Non-Revenue Virtual Card Media Processing", "Test_Sce_Description": "Verify that when the Virtual Card media is a non-revenue media, the device sends the tap like any other Virtual Card Media to ATS."}, {"Function_Flow_Name": "Counters", "Sub_Flow_Name": "Activate", "Use_Case_Name": "Tap-Off an SA Tool with Virtual Card Media \u2013 Device is offline and not connected to ATS", "Test_Scnario": "Default Trip Override", "Test_Sce_Description": "Verify that if the tap-off occurs while the device is in Override mode, the device processes the tap as a normal tap-off."}, {"Function_Flow_Name": "Counters", "Sub_Flow_Name": "Activate", "Use_Case_Name": "Tap-Off an SA Tool with Virtual Card Media \u2013 Device is offline and not connected to ATS", "Test_Scnario": "Card Authentication Failure", "Test_Sce_Description": "Verify that if the Virtual Card Media fails the Card Authentication check, the device returns the appropriate feedback."}, {"Function_Flow_Name": "Counters", "Sub_Flow_Name": "Activate", "Use_Case_Name": "Tap-Off an SA Tool with Virtual Card Media \u2013 Device is offline and not connected to ATS", "Test_Scnario": "Multiple NFC Media Presentation", "Test_Sce_Description": "Verify the device's behavior when multiple NFC media are presented to the device at one time."}, {"Function_Flow_Name": "Counters", "Sub_Flow_Name": "Activate", "Use_Case_Name": "Tap-Off an SA Tool with Virtual Card Media \u2013 Device is offline and not connected to ATS", "Test_Scnario": "Offline Tap Counter Limit", "Test_Sce_Description": "Verify that if the Virtual Media has reached its offline tap counter limit, the right to travel is not conferred."}, {"Function_Flow_Name": "Counters", "Sub_Flow_Name": "Increment", "Use_Case_Name": "Accepting Fare Payment on an Online SA Tool from a Virtual Card using Period Pass", "Test_Scnario": "Valid Limited Period Pass within time limit", "Test_Sce_Description": "Verify that the system correctly accepts fare payment from a virtual card with a valid Limited Period Pass within the time limit. The system should detect the validity of the pass and allow the transaction to proceed."}, {"Function_Flow_Name": "Counters", "Sub_Flow_Name": "Increment", "Use_Case_Name": "Accepting Fare Payment on an Online SA Tool from a Virtual Card using Period Pass", "Test_Scnario": "Valid Limited Period Pass outside time limit with sufficient e-Purse balance", "Test_Sce_Description": "Verify that the system correctly accepts fare payment from a virtual card with a valid Limited Period Pass outside the time limit but with sufficient e-Purse balance. The system should detect the invalidity of the pass due to time limit, compute the fare to be deducted from the e-Purse and proceed with the transaction."}, {"Function_Flow_Name": "Counters", "Sub_Flow_Name": "Increment", "Use_Case_Name": "Accepting Fare Payment on an Online SA Tool from a Virtual Card using Period Pass", "Test_Scnario": "Expired Period Pass with insufficient ePurse balance", "Test_Sce_Description": "Verify that the system correctly declines fare payment from an anonymous virtual card with an expired Period Pass and ePurse balance less than the fare amount. The system should detect the expired pass and insufficient balance, and return a declined result."}, {"Function_Flow_Name": "Counters", "Sub_Flow_Name": "Increment", "Use_Case_Name": "Accepting Fare Payment on an Online SA Tool from a Virtual Card using Period Pass", "Test_Scnario": "Blocked Virtual Card", "Test_Sce_Description": "Verify that the system correctly declines fare payment from a blocked virtual card. The system should detect the blocked status of the card and return a declined result."}, {"Function_Flow_Name": "Counters", "Sub_Flow_Name": "Increment", "Use_Case_Name": "Accepting Fare Payment on an Online SA Tool from a Virtual Card using Period Pass", "Test_Scnario": "Virtual Card on Deny List", "Test_Sce_Description": "Verify that the system correctly declines fare payment from a virtual card on the Deny List. The system should detect the card's status, remove it from the Deny List, set it to blocked, and return a declined result."}, {"Function_Flow_Name": "Counters", "Sub_Flow_Name": "Increment", "Use_Case_Name": "Accepting Fare Payment on an Online SA Tool from a Virtual Card using Period Pass", "Test_Scnario": "Low Battery Threshold", "Test_Sce_Description": "Verify that the system correctly processes the remote lists even when the SA Tool battery goes below the low battery threshold during a successful Farecard tap."}, {"Function_Flow_Name": "Counters", "Sub_Flow_Name": "Increment", "Use_Case_Name": "Accepting Fare Payment on an Online SA Tool from a Virtual Card using Period Pass", "Test_Scnario": "Unreadable Virtual Card", "Test_Sce_Description": "Verify that the system correctly indicates to the operator when the Virtual Card is unreadable. The system should detect the unreadable card and prompt the customer to tap again."}, {"Function_Flow_Name": "Counters", "Sub_Flow_Name": "Increment", "Use_Case_Name": "Accepting Fare Payment on an Online SA Tool from a Virtual Card using Period Pass", "Test_Scnario": "Expired Period Pass with sufficient ePurse balance", "Test_Sce_Description": "Verify that the system correctly accepts fare payment from a virtual card with an expired Period Pass but with ePurse balance more than the fare amount. The system should detect the expired pass, compute the fare to be deducted from the e-Purse and proceed with the transaction."}, {"Function_Flow_Name": "Counters", "Sub_Flow_Name": "Increment", "Use_Case_Name": "Accepting Fare Payment on an Online SA Tool from a Virtual Card using Period Pass", "Test_Scnario": "Expired Period Pass with insufficient ePurse balance", "Test_Sce_Description": "Verify that the system correctly puts the virtual card into overdraft when the ePurse balance is less than the fare amount and the Period Pass has expired. The system should detect the expired pass, compute the fare to be deducted from the e-Purse, put the card into overdraft and proceed with the transaction."}, {"Function_Flow_Name": "Counters", "Sub_Flow_Name": "Increment", "Use_Case_Name": "Accepting Fare Payment on an Online SA Tool from a Virtual Card using Period Pass", "Test_Scnario": "Inter-SP Transfer window", "Test_Sce_Description": "Verify that the system correctly accepts fare payment from a virtual card with a valid transfer product from another service provider. The system should detect the valid inter-agency transfer product and valid period pass, and confer the right to travel to the Cardholder."}, {"Function_Flow_Name": "Counters", "Sub_Flow_Name": "Increment", "Use_Case_Name": "Accepting Fare Payment on an Online SA Tool from a Virtual Card using Period Pass", "Test_Scnario": "Audio Messages Request", "Test_Sce_Description": "Verify that the system correctly plays audio messages for fare payment when requested by the customer. The system should enable audio mode, adjust the volume level as per customer's discretion, and play the corresponding audio message in the default language of the Farecard."}, {"Function_Flow_Name": "Counters", "Sub_Flow_Name": "Increment", "Use_Case_Name": "Accepting Fare Payment on an Online SA Tool from a Virtual Card using Period Pass - Customer\u2019s Farecard is Unreadable", "Test_Scnario": "SA Tool NFC reader detects but fails to read Virtual Card", "Test_Sce_Description": "Verify that the SA Tool NFC reader is able to detect the Virtual Card but fails to read it correctly. The application should indicate to the operator that the Virtual Card is unreadable."}, {"Function_Flow_Name": "Counters", "Sub_Flow_Name": "Increment", "Use_Case_Name": "Accepting Fare Payment on an Online SA Tool from a Virtual Card using Period Pass - Customer\u2019s Farecard is Unreadable", "Test_Scnario": "Successful tap after unreadable Virtual Card", "Test_Sce_Description": "Verify that after the Virtual Card is detected as unreadable, the customer can tap again and if successful, steps 4 \u2013 7 are conducted. If the tap is unsuccessful, the application should indicate to the operator that the Virtual Card is unreadable."}, {"Function_Flow_Name": "Counters", "Sub_Flow_Name": "Increment", "Use_Case_Name": "Accepting Fare Payment on an Online SA Tool from a Virtual Card using Period Pass - Customer\u2019s Farecard is Unreadable", "Test_Scnario": "Expired period pass with sufficient ePurse balance", "Test_Sce_Description": "Verify that if the customer\u2019s Virtual Card has an expired period pass and the ePurse balance is more than the fare amount, the ATS should detect the expired pass, compute the value to be deducted from the e-Purse, and deduct the fare accordingly."}, {"Function_Flow_Name": "Counters", "Sub_Flow_Name": "Increment", "Use_Case_Name": "Accepting Fare Payment on an Online SA Tool from a Virtual Card using Period Pass - Customer\u2019s Farecard is Unreadable", "Test_Scnario": "Expired period pass with ePurse balance less than fare amount", "Test_Sce_Description": "Verify that if the customer\u2019s Virtual Card has an expired period pass and the ePurse balance is less than the fare amount, the ATS should detect the expired pass, compute the value to be deducted from the e-Purse, and put the Virtual Card into overdraft."}, {"Function_Flow_Name": "Counters", "Sub_Flow_Name": "Increment", "Use_Case_Name": "Accepting Fare Payment on an Online SA Tool from a Virtual Card using Period Pass - Customer\u2019s Farecard is Unreadable", "Test_Scnario": "Valid transfer product from other service provider", "Test_Sce_Description": "Verify that if the customer\u2019s Virtual Card has a valid transfer product from another service provider, the ATS should read the valid inter-agency transfer product and confer the right to travel to the Cardholder by updating the Virtual Card."}, {"Function_Flow_Name": "Counters", "Sub_Flow_Name": "Increment", "Use_Case_Name": "Accepting Fare Payment on an Online SA Tool from a Virtual Card using Period Pass - Customer\u2019s Farecard is Unreadable", "Test_Scnario": "Customer requests Audio Messages", "Test_Sce_Description": "Verify that if the customer requests audio messages for fare payment, the operator can enable audio mode and adjust the volume level using the physical device buttons at the customer\u2019s discretion."}, {"Function_Flow_Name": "Counters", "Sub_Flow_Name": "Increment", "Use_Case_Name": "Accepting Fare Payment on an Online SA Tool from a Virtual Card using Period Pass - Customer\u2019s Farecard is Unreadable", "Test_Scnario": "Limited Period Pass outside of valid time with sufficient e-Purse balance", "Test_Sce_Description": "Verify that if the farecard has a valid Limited Period Pass and the current time is outside the time limits of the product, but the farecard has sufficient e-Purse balance to cover the transaction, the ATS should detect that the Limited Period Pass is not valid at the current time, compute the value to be deducted from the e-Purse, and deduct the fare."}, {"Function_Flow_Name": "Counters", "Sub_Flow_Name": "Increment", "Use_Case_Name": "Accepting Fare Payment on an Online SA Tool from a Virtual Card using Period Pass - Customer\u2019s Farecard is Unreadable", "Test_Scnario": "Expired Period Pass and ePurse Balance Less than the Fare Amount on Anonymous Farecard", "Test_Sce_Description": "Verify that if the customer has an anonymous Virtual Card with an expired period pass and ePurse balance less than the fare amount, the ATS should detect the card is Anonymous and the ePurse Balance is less than the fare amount and return a declined result back to the SA Tool."}, {"Function_Flow_Name": "Counters", "Sub_Flow_Name": "Increment", "Use_Case_Name": "Accepting Fare Payment on an Online SA Tool from a Virtual Card using Period Pass - Customer\u2019s Farecard is Unreadable", "Test_Scnario": "Blocked Virtual Card", "Test_Sce_Description": "Verify that if the customer\u2019s Farecard is blocked, the ATS should detect the card is blocked and return a declined result back to the SA Tool."}, {"Function_Flow_Name": "Counters", "Sub_Flow_Name": "Increment", "Use_Case_Name": "Accepting Fare Payment on an Online SA Tool from a Virtual Card using Period Pass - Customer\u2019s Farecard is Unreadable", "Test_Scnario": "Virtual Card on the Deny List", "Test_Sce_Description": "Verify that if the customer\u2019s Virtual Card is on the Deny List, the ATS should detect the card is on the Deny List, remove the card from the Deny List and set it to blocked, and return a declined result back to the SA Tool."}, {"Function_Flow_Name": "Counters", "Sub_Flow_Name": "Increment", "Use_Case_Name": "Accepting Fare Payment on an Online SA Tool from a Virtual Card using Period Pass - Customer\u2019s Farecard is Unreadable", "Test_Scnario": "Low battery threshold during payment", "Test_Sce_Description": "Verify that if the SA Tool battery goes below the low battery threshold during a successful Farecard tap, the remote lists can still be processed."}, {"Function_Flow_Name": "Counters", "Sub_Flow_Name": "Increment", "Use_Case_Name": "Accepting Fare Payment on an Online SA Tool from a Virtual Card using Period Pass - Customer\u2019s Virtual Card Has Sufficient ePurse Balance and an Expired Period Pass", "Test_Scnario": "Validating the functionality of expired period pass with sufficient ePurse balance", "Test_Sce_Description": "This scenario is to test the functionality of the system when the customer's virtual card has an expired period pass but the ePurse balance is more than the fare amount. The system should detect that the period pass has expired and deduct the fare from the ePurse balance."}, {"Function_Flow_Name": "Counters", "Sub_Flow_Name": "Increment", "Use_Case_Name": "Accepting Fare Payment on an Online SA Tool from a Virtual Card using Period Pass - Customer\u2019s Virtual Card Has Sufficient ePurse Balance and an Expired Period Pass", "Test_Scnario": "Testing the performance of the system with expired period pass and sufficient ePurse balance", "Test_Sce_Description": "This scenario is to test the performance of the system when processing a transaction where the customer's virtual card has an expired period pass but the ePurse balance is more than the fare amount. The system should process the transaction quickly and efficiently, without any delays or errors."}, {"Function_Flow_Name": "Counters", "Sub_Flow_Name": "Increment", "Use_Case_Name": "Accepting Fare Payment on an Online SA Tool from a Virtual Card using Period Pass - Customer\u2019s Virtual Card Has Sufficient ePurse Balance and an Expired Period Pass", "Test_Scnario": "Security testing for transactions with expired period pass and sufficient ePurse balance", "Test_Sce_Description": "This scenario is to test the security of the system when processing a transaction where the customer's virtual card has an expired period pass but the ePurse balance is more than the fare amount. The system should securely process the transaction, ensuring that the customer's ePurse balance is correctly deducted and that the transaction details are securely stored."}, {"Function_Flow_Name": "Counters", "Sub_Flow_Name": "Increment", "Use_Case_Name": "Accepting Fare Payment on an Online SA Tool from a Virtual Card using Period Pass - Customer\u2019s Virtual Card Has Sufficient ePurse Balance and an Expired Period Pass", "Test_Scnario": "Testing the functionality of the system with blocked virtual card", "Test_Sce_Description": "This scenario is to test the functionality of the system when the customer's virtual card is blocked. The system should detect that the card is blocked and decline the transaction."}, {"Function_Flow_Name": "Counters", "Sub_Flow_Name": "Increment", "Use_Case_Name": "Accepting Fare Payment on an Online SA Tool from a Virtual Card using Period Pass - Customer\u2019s Virtual Card Has Sufficient ePurse Balance and an Expired Period Pass", "Test_Scnario": "Performance testing for transactions with blocked virtual card", "Test_Sce_Description": "This scenario is to test the performance of the system when processing a transaction where the customer's virtual card is blocked. The system should quickly detect that the card is blocked and decline the transaction without any delays or errors."}, {"Function_Flow_Name": "Counters", "Sub_Flow_Name": "Increment", "Use_Case_Name": "Accepting Fare Payment on an Online SA Tool from a Virtual Card using Period Pass - Customer\u2019s Virtual Card Has Sufficient ePurse Balance and an Expired Period Pass", "Test_Scnario": "Security testing for transactions with blocked virtual card", "Test_Sce_Description": "This scenario is to test the security of the system when processing a transaction where the customer's virtual card is blocked. The system should securely process the transaction, ensuring that the customer's card status is correctly identified and that the transaction details are securely stored."}, {"Function_Flow_Name": "Counters", "Sub_Flow_Name": "Increment", "Use_Case_Name": "Accepting Fare Payment on an Online SA Tool from a Virtual Card using Period Pass - Customer\u2019s Virtual Card Has Sufficient ePurse Balance and an Expired Period Pass", "Test_Scnario": "Functionality testing for transactions with virtual card on the Deny List", "Test_Sce_Description": "This scenario is to test the functionality of the system when the customer's virtual card is on the Deny List. The system should detect that the card is on the Deny List, remove it from the list, set it to blocked, and decline the transaction."}, {"Function_Flow_Name": "Counters", "Sub_Flow_Name": "Increment", "Use_Case_Name": "Accepting Fare Payment on an Online SA Tool from a Virtual Card using Period Pass - Customer\u2019s Virtual Card Has Sufficient ePurse Balance and an Expired Period Pass", "Test_Scnario": "Performance testing for transactions with virtual card on the Deny List", "Test_Sce_Description": "This scenario is to test the performance of the system when processing a transaction where the customer's virtual card is on the Deny List. The system should quickly detect that the card is on the Deny List, remove it from the list, set it to blocked, and decline the transaction without any delays or errors."}, {"Function_Flow_Name": "Counters", "Sub_Flow_Name": "Increment", "Use_Case_Name": "Accepting Fare Payment on an Online SA Tool from a Virtual Card using Period Pass - Customer\u2019s Virtual Card Has Sufficient ePurse Balance and an Expired Period Pass", "Test_Scnario": "Security testing for transactions with virtual card on the Deny List", "Test_Sce_Description": "This scenario is to test the security of the system when processing a transaction where the customer's virtual card is on the Deny List. The system should securely process the transaction, ensuring that the customer's card status is correctly updated and that the transaction details are securely stored."}, {"Function_Flow_Name": "Counters", "Sub_Flow_Name": "Configure haptic feedback", "Use_Case_Name": "Tap-Off an SA Tool with Virtual Card Media \u2013 Customer uses audio jack to hear instructions", "Test_Scnario": "Offline Device Tap-Off", "Test_Sce_Description": "Validate that the device correctly collects offline tap details when not connected to ATS and successfully sends these details to ATS via bulk upload when the device returns online."}, {"Function_Flow_Name": "Counters", "Sub_Flow_Name": "Configure haptic feedback", "Use_Case_Name": "Tap-Off an SA Tool with Virtual Card Media \u2013 Customer uses audio jack to hear instructions", "Test_Scnario": "Hotlist and Tap Counter Check", "Test_Sce_Description": "Verify that the device checks if the media is contained on the local hotlist and if the hotlist parameter on the Virtual Card Scratchpad is enabled. Also, ensure that the tap counter is checked and incremented."}, {"Function_Flow_Name": "Counters", "Sub_Flow_Name": "Configure haptic feedback", "Use_Case_Name": "Tap-Off an SA Tool with Virtual Card Media \u2013 Customer uses audio jack to hear instructions", "Test_Scnario": "Right to Travel Conferment", "Test_Sce_Description": "Ensure that the right to travel is conferred to the Cardholder by updating the HMI of the SA Tool and the FPS \u2013 E-Purse Tap Off is provided to the cardholder."}, {"Function_Flow_Name": "Counters", "Sub_Flow_Name": "Configure haptic feedback", "Use_Case_Name": "Tap-Off an SA Tool with Virtual Card Media \u2013 Customer uses audio jack to hear instructions", "Test_Scnario": "Audio Assist Mode", "Test_Sce_Description": "Validate that the device automatically switches into audio assist mode when headphones are inserted into the Audio jack and provides audio instructions detailing how to adjust the volume and prompt the user to tap their media."}, {"Function_Flow_Name": "Counters", "Sub_Flow_Name": "Configure haptic feedback", "Use_Case_Name": "Tap-Off an SA Tool with Virtual Card Media \u2013 Customer uses audio jack to hear instructions", "Test_Scnario": "Non-Revenue Virtual Card Media Processing", "Test_Sce_Description": "Verify that the device correctly sends the tap of a non-revenue Virtual Card Media to ATS like any other Virtual Card Media."}, {"Function_Flow_Name": "Counters", "Sub_Flow_Name": "Configure haptic feedback", "Use_Case_Name": "Tap-Off an SA Tool with Virtual Card Media \u2013 Customer uses audio jack to hear instructions", "Test_Scnario": "Default Trip Override", "Test_Sce_Description": "Ensure that the device correctly processes the tap as a normal tap-off when the tap-off occurs while the device is in Override mode."}, {"Function_Flow_Name": "Counters", "Sub_Flow_Name": "Configure haptic feedback", "Use_Case_Name": "Tap-Off an SA Tool with Virtual Card Media \u2013 Customer uses audio jack to hear instructions", "Test_Scnario": "Card Authentication Failure", "Test_Sce_Description": "Validate that the device returns the appropriate feedback when the Virtual Card Media fails the Card Authentication check and that the declined tap is sent to ATS."}, {"Function_Flow_Name": "Counters", "Sub_Flow_Name": "Configure haptic feedback", "Use_Case_Name": "Tap-Off an SA Tool with Virtual Card Media \u2013 Customer uses audio jack to hear instructions", "Test_Scnario": "Multiple NFC Media Presentation", "Test_Sce_Description": "Verify how the device handles the scenario when multiple NFC media are presented to the device at one time."}, {"Function_Flow_Name": "Counters", "Sub_Flow_Name": "Configure haptic feedback", "Use_Case_Name": "Tap-Off an SA Tool with Virtual Card Media \u2013 Customer uses audio jack to hear instructions", "Test_Scnario": "Performance of Device", "Test_Sce_Description": "Check the performance of the device while processing the tap details, switching to audio assist mode, and sending tap details to ATS."}, {"Function_Flow_Name": "Counters", "Sub_Flow_Name": "Configure haptic feedback", "Use_Case_Name": "Tap-Off an SA Tool with Virtual Card Media \u2013 Customer uses audio jack to hear instructions", "Test_Scnario": "Security of Tap Details", "Test_Sce_Description": "Ensure that the tap details collected by the device are securely stored and transmitted to ATS."}, {"Function_Flow_Name": "Counters", "Sub_Flow_Name": "Configure haptic feedback", "Use_Case_Name": "Tap-Off an SA Tool with Virtual Card Media - Non-Revenue Virtual Card Media is tapped on the Device", "Test_Scnario": "Offline Device Tap-Off", "Test_Sce_Description": "Verify that when the device is offline and not connected to ATS, it collects offline tap details and once the device returns back online, offline taps are sent to ATS via bulk upload."}, {"Function_Flow_Name": "Counters", "Sub_Flow_Name": "Configure haptic feedback", "Use_Case_Name": "Tap-Off an SA Tool with Virtual Card Media - Non-Revenue Virtual Card Media is tapped on the Device", "Test_Scnario": "Hotlist and Tap Counter Check", "Test_Sce_Description": "Verify that the device checks if the media is contained on the local hotlist, and if the hotlist parameter on the Virtual Card Scratchpad is enabled. Also, the tap counter should be checked and incremented."}, {"Function_Flow_Name": "Counters", "Sub_Flow_Name": "Configure haptic feedback", "Use_Case_Name": "Tap-Off an SA Tool with Virtual Card Media - Non-Revenue Virtual Card Media is tapped on the Device", "Test_Scnario": "Latent Transaction Processor Functionality", "Test_Sce_Description": "Verify that the latent transaction processor stores the tap till the device goes back online and connects to ATS. The tap should then be rated in ATS."}, {"Function_Flow_Name": "Counters", "Sub_Flow_Name": "Configure haptic feedback", "Use_Case_Name": "Tap-Off an SA Tool with Virtual Card Media - Non-Revenue Virtual Card Media is tapped on the Device", "Test_Scnario": "Right to Travel Conferment", "Test_Sce_Description": "Verify that the right to travel is conferred to the Cardholder by updating the HMI of the SA Tool. The FPS \u2013 E-Purse Tap Off should be provided to the cardholder."}, {"Function_Flow_Name": "Counters", "Sub_Flow_Name": "Configure haptic feedback", "Use_Case_Name": "Tap-Off an SA Tool with Virtual Card Media - Non-Revenue Virtual Card Media is tapped on the Device", "Test_Scnario": "Audio Assist Mode Functionality", "Test_Sce_Description": "Verify that when the customer inserts headphones into the Audio jack, the device automatically switches into audio assist mode and provides audio instructions."}, {"Function_Flow_Name": "Counters", "Sub_Flow_Name": "Configure haptic feedback", "Use_Case_Name": "Tap-Off an SA Tool with Virtual Card Media - Non-Revenue Virtual Card Media is tapped on the Device", "Test_Scnario": "Non-Revenue Virtual Card Media Processing", "Test_Sce_Description": "Verify that when the Virtual Card media is a non-revenue media, the device sends the tap like any other Virtual Card Media to ATS."}, {"Function_Flow_Name": "Counters", "Sub_Flow_Name": "Configure haptic feedback", "Use_Case_Name": "Tap-Off an SA Tool with Virtual Card Media - Non-Revenue Virtual Card Media is tapped on the Device", "Test_Scnario": "Default Trip Override", "Test_Sce_Description": "Verify that if the tap-off occurs while the device is in Override mode, the device processes the tap as a normal tap-off."}, {"Function_Flow_Name": "Counters", "Sub_Flow_Name": "Configure haptic feedback", "Use_Case_Name": "Tap-Off an SA Tool with Virtual Card Media - Non-Revenue Virtual Card Media is tapped on the Device", "Test_Scnario": "Card Authentication Failure", "Test_Sce_Description": "Verify that if the Virtual Card Media fails the Card Authentication check, the device returns the appropriate feedback and the declined tap is sent to ATS."}, {"Function_Flow_Name": "Counters", "Sub_Flow_Name": "Configure haptic feedback", "Use_Case_Name": "Tap-Off an SA Tool with Virtual Card Media - Non-Revenue Virtual Card Media is tapped on the Device", "Test_Scnario": "Multiple NFC Media Presentation", "Test_Sce_Description": "Verify the device's behavior when multiple NFC media are presented to the device at one time."}, {"Function_Flow_Name": "Counters", "Sub_Flow_Name": "Configure haptic feedback", "Use_Case_Name": "Tap-Off an SA Tool with Virtual Card Media - Non-Revenue Virtual Card Media is tapped on the Device", "Test_Scnario": "Default O/D Tap-On", "Test_Sce_Description": "Verify that when the Virtual Card media contains a default trip and the current tap location is either the origin or destination, the device processes the tap correctly."}, {"Function_Flow_Name": "Counters", "Sub_Flow_Name": "Configure haptic feedback", "Use_Case_Name": "Tap-off and Virtual Card Media fails Card Authentication check", "Test_Scnario": "Virtual Card Media fails Card Authentication check", "Test_Sce_Description": "This scenario tests the functionality of the device when the Virtual Card Media fails the Card Authentication check. The device should perform the necessary validation and determine that the Virtual Card Media is unable to pass the checks. The Declined \u2013 Contact CLIENT Customer Service screen should be provided to the cardholder. An error should be captured and logged in the background when this occurs to help with troubleshooting the issue. This error should also be captured in the SOTI logs. The declined tap should be sent to ATS."}, {"Function_Flow_Name": "Counters", "Sub_Flow_Name": "Configure haptic feedback", "Use_Case_Name": "Tap-off and Virtual Card Media fails Card Authentication check", "Test_Scnario": "Multiple NFC media are presented to the device at one time", "Test_Sce_Description": "This scenario tests the functionality of the device when multiple NFC media are presented at one time. The device should block all fare payment functionality. The Anti-Collision Error Screen should be provided to the cardholder. An error should be captured and logged in the background when this occurs to help with troubleshooting the issue. This error should also be captured in the SOTI logs. The declined tap should be sent to ATS."}, {"Function_Flow_Name": "Counters", "Sub_Flow_Name": "Configure haptic feedback", "Use_Case_Name": "Tap-off and Virtual Card Media fails Card Authentication check", "Test_Scnario": "Tap-off a Virtual Card Media when SA Tool is in Out-of-Service state", "Test_Sce_Description": "This scenario tests the functionality of the device when it is in Out-of-Service state. The device should display the Not in Service screen to the cardholder. The device should not detect the media and should remain in Out-of-Service State."}, {"Function_Flow_Name": "Counters", "Sub_Flow_Name": "Configure haptic feedback", "Use_Case_Name": "Tap-off and Virtual Card Media fails Card Authentication check", "Test_Scnario": "Tap-off and an error has occurred", "Test_Sce_Description": "This scenario tests the functionality of the device when an error has occurred that does not cover the exception cases above. The device should record the tap and provide the Declined \u2013 See Customer Service Screen to the cardholder. An error should be captured and logged in the background when this occurs to help with troubleshooting the issue. This error should also be captured in the SOTI logs. The declined tap should be sent to ATS."}, {"Function_Flow_Name": "Counters", "Sub_Flow_Name": "Configure haptic feedback", "Use_Case_Name": "Tap-off and Virtual Card Media fails Card Authentication check", "Test_Scnario": "Tap-off and Virtual Card Media is on the local hotlist and device is offline", "Test_Sce_Description": "This scenario tests the functionality of the device when the Virtual Card Media is on the local hotlist and the device is offline. The device should check the local hotlist and return a response that the media is denied. The right to travel should not be conferred. The Declined \u2013 Blocked Screen should be provided to the cardholder. The Device should update the blocking parameter on the Virtual Card Scratchpad to be enabled. The device should remove the Virtual Card from the hotlist. An error should be captured and logged in the background when this occurs to help with troubleshooting the issue. This error should also be captured in the SOTI logs."}, {"Function_Flow_Name": "Counters", "Sub_Flow_Name": "Configure haptic feedback", "Use_Case_Name": "Tap-off and Virtual Card Media fails Card Authentication check", "Test_Scnario": "Tap-off and Virtual Card Media\u2019s blocked parameter on the scratchpad is enabled", "Test_Sce_Description": "This scenario tests the functionality of the device when the Virtual Card Media\u2019s scratchpad blocked parameter is set to enabled. The device should provide the appropriate feedback to the Cardholder of a successful tap. The FPS \u2013 Virtual Card E-Purse Flat Fare Accepted Screen should be provided to the cardholder. The tap counter should be checked and reset to 0 if it isn't already at 0. The Virtual Card scratchpad should be updated to remove the block parameter and prioritize the accepted response from ATS."}, {"Function_Flow_Name": "Counters", "Sub_Flow_Name": "Configure haptic feedback", "Use_Case_Name": "Tap-off and Virtual Card Media fails Card Authentication check", "Test_Scnario": "Virtual Media has already tapped-on using an Online Device", "Test_Sce_Description": "This scenario tests the functionality of the device when the cardholder taps-on again at an SA Tool at the same station within the SA Tool Tap-on anti-passback Window, whereby the initial device and secondary device tapped on were both online. The device should send the tap to ATS which returns a response that the cardholder has already tapped on at the same station and is within the Tap-on anti-passback Window. The Declined \u2013 Already Tapped Screen should be provided to the cardholder. An error should be captured and logged in the background when this occurs to help with troubleshooting the issue. This error should also be captured in the SOTI logs."}, {"Function_Flow_Name": "Counters", "Sub_Flow_Name": "Configure haptic feedback", "Use_Case_Name": "Tap-off and Virtual Card Media fails Card Authentication check", "Test_Scnario": "Virtual Card Media has already tapped-on using an Offline Device (Anti-passback)", "Test_Sce_Description": "This scenario tests the functionality of the device when the cardholder taps-on again at an SA Tool at the same station within the SA Tool Tap-on anti-passback Window whereby the initial device tapped, and secondary device(s) is the same device and is offline. The device should check the latent transaction processor on the same device for a previous tap within the anti-passback window. The tap should be stored on the device till it is connected to ATS where the transactions will be reconciled. The Declined \u2013 Already Tapped Screen should be provided to the cardholder. An error should be captured and logged in the background when this occurs to help with troubleshooting the issue. This error should also be captured in the SOTI logs."}, {"Function_Flow_Name": "Counters", "Sub_Flow_Name": "Configure haptic feedback", "Use_Case_Name": "Tap-off and Virtual Card Media fails Card Authentication check", "Test_Scnario": "Tap a Virtual Card Media when SA Tool is in Out-of-Service state", "Test_Sce_Description": "This scenario tests the functionality of the device when it is in Out-of-Service state. The device should display the Not in Service screen to the cardholder. The device should not detect the media and should remain in Out-of-Service State."}, {"Function_Flow_Name": "Counters", "Sub_Flow_Name": "Configure haptic feedback", "Use_Case_Name": "Tap-off and Multiple NFC media are presented to the device at one time", "Test_Scnario": "Multiple NFC media presented to the device", "Test_Sce_Description": "This scenario tests the functionality of the device when multiple NFC media are presented at once. The device should block all fare payment functionality and present an Anti-Collision toast message to the customer. An error should be captured and logged in the background for troubleshooting purposes."}, {"Function_Flow_Name": "Counters", "Sub_Flow_Name": "Configure haptic feedback", "Use_Case_Name": "Tap-off and Multiple NFC media are presented to the device at one time", "Test_Scnario": "Non-activated Farecard", "Test_Sce_Description": "This scenario tests the functionality of the device when a non-activated Farecard is tapped on the device. The device should detect that the Farecard is not activated and provide feedback to the Cardholder of an unsuccessful transaction due to inactive farecard. An error should be captured and logged in the background for troubleshooting purposes."}, {"Function_Flow_Name": "Counters", "Sub_Flow_Name": "Configure haptic feedback", "Use_Case_Name": "Tap-off and Multiple NFC media are presented to the device at one time", "Test_Scnario": "Card reading error", "Test_Sce_Description": "This scenario tests the functionality of the device when a Cardholder taps Farecard on an SA Tool and a Card reading error occurs. The device should not provide any feedback and screen remains \u201cIn-Service\u201d display. An error should be captured and logged in the background for troubleshooting purposes."}, {"Function_Flow_Name": "Counters", "Sub_Flow_Name": "Configure haptic feedback", "Use_Case_Name": "Tap-off and Multiple NFC media are presented to the device at one time", "Test_Scnario": "Card write error", "Test_Sce_Description": "This scenario tests the functionality of the device when a Farecard is tapped on an SA Tool and a card write error occurs. The device should not provide any feedback and screen remains \u201cIn-Service\u201d display. The device should delete the transaction information. An error should be captured and logged in the background for troubleshooting purposes."}, {"Function_Flow_Name": "Counters", "Sub_Flow_Name": "Configure haptic feedback", "Use_Case_Name": "Tap-off and Multiple NFC media are presented to the device at one time", "Test_Scnario": "Out-of-Service state", "Test_Sce_Description": "This scenario tests the functionality of the device when a Farecard is tapped on an SA Tool in Out-of-Service state. The device should display the Not in Service screen to the cardholder and not detect the media."}, {"Function_Flow_Name": "Counters", "Sub_Flow_Name": "Configure haptic feedback", "Use_Case_Name": "Tap-off and Multiple NFC media are presented to the device at one time", "Test_Scnario": "Tap-on immediately after tapping-off", "Test_Sce_Description": "This scenario tests the functionality of the device when a cardholder taps-on again at an SA Tool after just tapping-off at the same station within the SA Tool Tap-off anti-passback Window. The device should provide the cardholder with the appropriate feedback. An error should be captured and logged in the background for troubleshooting purposes."}, {"Function_Flow_Name": "Counters", "Sub_Flow_Name": "Configure haptic feedback", "Use_Case_Name": "Tap-off and Multiple NFC media are presented to the device at one time", "Test_Scnario": "Error occurred", "Test_Sce_Description": "This scenario tests the functionality of the device when an error has occurred on the device that does not cover the exception cases. The device should record the tap and provide the Declined \u2013 See Customer Service Screen to the cardholder. An error should be captured and logged in the background for troubleshooting purposes."}, {"Function_Flow_Name": "Counters", "Sub_Flow_Name": "Configure haptic feedback", "Use_Case_Name": "Tap-off and Multiple NFC media are presented to the device at one time", "Test_Scnario": "Insufficient E-Purse", "Test_Sce_Description": "This scenario tests the functionality of the device when a Virtual Card has insufficient E-Purse to cover the Tap-On Fare. The device should provide the appropriate feedback to the cardholder. An error should be captured and logged in the background for troubleshooting purposes."}, {"Function_Flow_Name": "GPS", "Sub_Flow_Name": "Enable/Disable GPS", "Use_Case_Name": "SA Tool auto-computes current location", "Test_Scnario": "SA Tool auto-computes current location", "Test_Sce_Description": "Verify that the SA Tool application is able to automatically compute the current location when the auto-location functionality is enabled. The application should compute the distance from all stops on the selected route and trip at a configurable duration. Once within a stop radius, the device should use this stop as the current stop on SA Tool application. The device should continue to use this stop as the current stop until a new stop radius is entered."}, {"Function_Flow_Name": "GPS", "Sub_Flow_Name": "Enable/Disable GPS", "Use_Case_Name": "SA Tool auto-computes current location", "Test_Scnario": "GPS signal quality changes", "Test_Sce_Description": "Verify that the SA Tool application is able to detect and reflect changes in GPS signal quality. The GPS signal quality indicator on the home screen should change to reflect the current GPS signal quality."}, {"Function_Flow_Name": "GPS", "Sub_Flow_Name": "Enable/Disable GPS", "Use_Case_Name": "SA Tool auto-computes current location", "Test_Scnario": "CLIENT backend connectivity changes", "Test_Sce_Description": "Verify that the SA Tool application is able to detect and reflect changes in connectivity to the CLIENT backend. The network icon should update to reflect the current connectivity status with the network, which reflects the status with CLIENT backend."}, {"Function_Flow_Name": "GPS", "Sub_Flow_Name": "Enable/Disable GPS", "Use_Case_Name": "SA Tool auto-computes current location", "Test_Scnario": "Operator Overrides Selects/Overrides Current Location", "Test_Sce_Description": "Verify that the operator is able to select or override the current location for inspection / fare payment purposes on the SA Tool. The Route Parameters should be updated to the operator selected location and should be automatically updated to the next station upon arrival at the next station."}, {"Function_Flow_Name": "GPS", "Sub_Flow_Name": "Enable/Disable GPS", "Use_Case_Name": "SA Tool auto-computes current location", "Test_Scnario": "Operator enables auto-positioning for current location", "Test_Sce_Description": "Verify that the operator is able to enable auto-location for route parameters on the SA Tool. The SA Tool should automatically compute the current inspection location and the auto location signal quality indicator on the home screen should start reflecting the auto location signal quality. The Stop ID should update to indicate to the operator the computed location."}, {"Function_Flow_Name": "GPS", "Sub_Flow_Name": "Enable/Disable GPS", "Use_Case_Name": "SA Tool auto-computes current location", "Test_Scnario": "GPS functionality is remotely enabled/disabled on the SA Tool", "Test_Sce_Description": "Verify that the SA Tool application is able to receive remote configuration and enables/disables the auto location functionality based on the new configuration in background. If the operator had auto location enabled, and the feature was remotely disabled, a greyed out icon should be shown."}, {"Function_Flow_Name": "GPS", "Sub_Flow_Name": "Enable/Disable GPS", "Use_Case_Name": "SA Tool auto-computes current location", "Test_Scnario": "Operator disables auto-location functionality", "Test_Sce_Description": "Verify that the operator is able to disable the auto-location functionality on the SA Tool. The operator should be able to turn off auto-location and save the changes, which should disable location positioning and calculation."}, {"Function_Flow_Name": "GPS", "Sub_Flow_Name": "Enable/Disable GPS", "Use_Case_Name": "GPS signal quality changes", "Test_Scnario": "SA Tool auto-computes current location", "Test_Sce_Description": "Verify that the SA Tool application is able to compute the distance from all stops on the selected route and trip at a configurable duration. Once within a stop radius, the device should use this stop as the current stop on SA Tool application. The device should continue to use this stop as the current stop until a new stop radius is entered."}, {"Function_Flow_Name": "GPS", "Sub_Flow_Name": "Enable/Disable GPS", "Use_Case_Name": "GPS signal quality changes", "Test_Scnario": "GPS signal quality changes", "Test_Sce_Description": "Verify that when the GPS signal quality changes on the SA Tool, the GPS signal quality indicator on the home screen is changed to reflect the same."}, {"Function_Flow_Name": "GPS", "Sub_Flow_Name": "Enable/Disable GPS", "Use_Case_Name": "GPS signal quality changes", "Test_Scnario": "CLIENT backend connectivity changes", "Test_Sce_Description": "Verify that when the SA Tool application loses connection to the CLIENT backend, it updates the network icon to reflect the connectivity status with the network which reflects the status with CLIENT backend."}, {"Function_Flow_Name": "GPS", "Sub_Flow_Name": "Enable/Disable GPS", "Use_Case_Name": "GPS signal quality changes", "Test_Scnario": "Operator Overrides Selects/Overrides Current Location", "Test_Sce_Description": "Verify that the operator is able to select the Additional Options menu on the SA Tool, select Route Parameters, and update current location. The Route Parameters should be updated to the operator selected location and should be automatically updated to the next station upon arrival at the next station."}, {"Function_Flow_Name": "GPS", "Sub_Flow_Name": "Enable/Disable GPS", "Use_Case_Name": "GPS signal quality changes", "Test_Scnario": "SA Tool in Real-Time Mode", "Test_Sce_Description": "Verify that in real-time mode, Open Payments fare payments & inspections provide a near real-time response to the Operator of the result for the customer\u2019s media. This mode requires the device to have an active internet connection to ATS in order to provide a near real-time response."}, {"Function_Flow_Name": "GPS", "Sub_Flow_Name": "Enable/Disable GPS", "Use_Case_Name": "GPS signal quality changes", "Test_Scnario": "SA Tool in Queued Mode", "Test_Sce_Description": "Verify that in Queued mode, the device sends the taps collected to ATS, whereby no true inspection or fare payment result is provided to the Operator. The Operator will rely on the local deny list in order to retrieve the tap results such as declined."}, {"Function_Flow_Name": "GPS", "Sub_Flow_Name": "Enable/Disable GPS", "Use_Case_Name": "GPS signal quality changes", "Test_Scnario": "SA Tool in Degraded Mode", "Test_Sce_Description": "Verify that when the device is configured in degraded mode, it can only accept Farecard taps. This mode can either be set through a configuration when Virtual Card is disabled, or after a configurable period of time the device is offline. In this state, a Virtual Card will not be accepted."}, {"Function_Flow_Name": "GPS", "Sub_Flow_Name": "Enable/Disable GPS", "Use_Case_Name": "CLIENT backend connectivity changes", "Test_Scnario": "Failure to connect to internet", "Test_Sce_Description": "Verify the system's behavior when there is no internet connection and the SA Tool Operator is performing an action that requires connection to the Internet. The system should time out and display the relevant error message with options to try again or cancel. If successful connection is restored, the system should resume the main use case. If the action is cancelled, the system should return to the previous screen."}, {"Function_Flow_Name": "GPS", "Sub_Flow_Name": "Enable/Disable GPS", "Use_Case_Name": "CLIENT backend connectivity changes", "Test_Scnario": "PIN pad transmits DECLINED message from Moneris", "Test_Sce_Description": "Verify the system's behavior when the SA Tool Operator is performing a credit or debit transaction and communication with Moneris fails. The system should attempt to reach Moneris and after an unsuccessful attempt, it should display the relevant error message and return to the payment means screen. The receipt printer should print a failure of payment means."}, {"Function_Flow_Name": "GPS", "Sub_Flow_Name": "Enable/Disable GPS", "Use_Case_Name": "CLIENT backend connectivity changes", "Test_Scnario": "Failure to load Farecard after payment has been processed", "Test_Sce_Description": "Verify the system's behavior when the operator is performing a Farecard transaction, the payment has been processed and successful, but the write to the card is not successful. The system should attempt to reach Moneris and after an unsuccessful attempt, it should display the relevant error message and the operator can choose to try again or cancel and refund the payment."}, {"Function_Flow_Name": "GPS", "Sub_Flow_Name": "Enable/Disable GPS", "Use_Case_Name": "CLIENT backend connectivity changes", "Test_Scnario": "Failure to connect to receipt printer", "Test_Sce_Description": "Verify the system's behavior when the SA Tool Operator is performing a transaction which requires printing, and connection with the receipt printer fails. The system should check the connection status to the receipt printer and if there is no connection, it should display the relevant error message and the operator can choose to proceed with the flow without printing capabilities, or exit the flow."}, {"Function_Flow_Name": "GPS", "Sub_Flow_Name": "Enable/Disable GPS", "Use_Case_Name": "CLIENT backend connectivity changes", "Test_Scnario": "Failure to connect to Pin Pad", "Test_Sce_Description": "Verify the system's behavior when the SA Tool Operator is performing a transaction which requires use of Pin Pad, and connection with the Pin Pad fails. The system should check the connection status to the Pin Pad and if there is no connection, it should display the relevant error message and the operator can choose to wait for the Pin Pad to connect in the background or exit the flow."}, {"Function_Flow_Name": "GPS", "Sub_Flow_Name": "Enable/Disable GPS", "Use_Case_Name": "CLIENT backend connectivity changes", "Test_Scnario": "Communication Interfaces - Fare Media", "Test_Sce_Description": "Verify the system's ability to communicate with the Subsystem over private cellular network or Wi-Fi for Farecard Transaction Data, Events, Device Mode and Audit Counters, Remote Lists, and Device Management."}, {"Function_Flow_Name": "GPS", "Sub_Flow_Name": "Enable/Disable GPS", "Use_Case_Name": "CLIENT backend connectivity changes", "Test_Scnario": "Communication Interfaces - Open Payments Media", "Test_Sce_Description": "Verify the system's ability to send all data related to Open Payments from the device to ATS, download the Open Payments Media local deny list from ATS via the Subsystem, and download Open Payments transactions from local FTPs onto the SA Tool Device via Wi-Fi P2P."}, {"Function_Flow_Name": "GPS", "Sub_Flow_Name": "Enable/Disable GPS", "Use_Case_Name": "Operator Overrides Selects/Overrides Current Location", "Test_Scnario": "Verify Operator Selects Route Parameters", "Test_Sce_Description": "Check if the operator is able to select the Route Parameters from the Additional Options menu on the SA Tool. The system should allow the operator to select and update the Route Parameters."}, {"Function_Flow_Name": "GPS", "Sub_Flow_Name": "Enable/Disable GPS", "Use_Case_Name": "Operator Overrides Selects/Overrides Current Location", "Test_Scnario": "Verify Operator Updates Current Location", "Test_Sce_Description": "Check if the operator is able to update the current location in the Route Parameters. The system should allow the operator to update the current location and reflect the changes."}, {"Function_Flow_Name": "GPS", "Sub_Flow_Name": "Enable/Disable GPS", "Use_Case_Name": "Operator Overrides Selects/Overrides Current Location", "Test_Scnario": "Verify Automatic Update of Route Parameters", "Test_Sce_Description": "Check if the Route Parameters are automatically updated to the next station upon arrival. The system should automatically update the Route Parameters to the next station when the operator arrives at the next station."}, {"Function_Flow_Name": "GPS", "Sub_Flow_Name": "Enable/Disable GPS", "Use_Case_Name": "Operator Overrides Selects/Overrides Current Location", "Test_Scnario": "Verify Operator Overrides Location in Manual Mode", "Test_Sce_Description": "Check if the operator is able to override the current location in manual mode when auto-location is disabled. The system should allow the operator to manually override the current location."}, {"Function_Flow_Name": "GPS", "Sub_Flow_Name": "Enable/Disable GPS", "Use_Case_Name": "Operator Overrides Selects/Overrides Current Location", "Test_Scnario": "Verify Operator Switches Device Mode", "Test_Sce_Description": "Check if the operator is able to switch the device mode between DISTANCE BASED TRANSIT and GO. The system should allow the operator to switch the device mode and validate the operator's credentials."}, {"Function_Flow_Name": "GPS", "Sub_Flow_Name": "Enable/Disable GPS", "Use_Case_Name": "Operator Overrides Selects/Overrides Current Location", "Test_Scnario": "Verify SP Switching is Disabled", "Test_Sce_Description": "Check if the SP switching functionality is disabled when no operator is logged in. The system should disable the SP switching functionality when no operator is logged in and enable it when an operator logs in."}, {"Function_Flow_Name": "GPS", "Sub_Flow_Name": "Enable/Disable GPS", "Use_Case_Name": "Operator Overrides Selects/Overrides Current Location", "Test_Scnario": "Verify Operator Selects New Line", "Test_Sce_Description": "Check if the operator is able to select a new line and the application resets the trip and stop selection. The system should allow the operator to select a new line and reset the trip and stop selection."}, {"Function_Flow_Name": "GPS", "Sub_Flow_Name": "Enable/Disable GPS", "Use_Case_Name": "Operator Overrides Selects/Overrides Current Location", "Test_Scnario": "Verify Operator Enables Auto-Positioning", "Test_Sce_Description": "Check if the operator is able to enable auto-location for route parameters on the SA Tool. The system should allow the operator to enable auto-location and compute the current inspection location."}, {"Function_Flow_Name": "GPS", "Sub_Flow_Name": "Enable/Disable GPS", "Use_Case_Name": "Operator Overrides Selects/Overrides Current Location", "Test_Scnario": "Verify GPS Functionality is Remotely Enabled/Disabled", "Test_Sce_Description": "Check if the SA Tool application receives remote configuration and enables/disables the auto location functionality based on the new configuration in background. The system should enable/disable the auto location functionality based on the remote configuration."}, {"Function_Flow_Name": "GPS", "Sub_Flow_Name": "Enable/Disable GPS", "Use_Case_Name": "Operator Overrides Selects/Overrides Current Location", "Test_Scnario": "Verify Operator Disables Auto-Location Functionality", "Test_Sce_Description": "Check if the operator is able to disable the auto-location functionality. The system should allow the operator to disable the auto-location functionality."}, {"Function_Flow_Name": "GPS", "Sub_Flow_Name": "Enable/Disable GPS", "Use_Case_Name": "Operator Selects/Overrides Location (Manual Mode)", "Test_Scnario": "Verify Operator Selects/Overrides Location (Manual Mode)", "Test_Sce_Description": "Check if the operator is able to select and override the current location manually when the auto-location is disabled on the SA Tool. The operator should be able to continue selecting stops within the route from the Tap Card Screen."}, {"Function_Flow_Name": "GPS", "Sub_Flow_Name": "Enable/Disable GPS", "Use_Case_Name": "Operator Selects/Overrides Location (Manual Mode)", "Test_Scnario": "Verify Route Parameters Update", "Test_Sce_Description": "Check if the Route Parameters are updated to the operator selected location. The Route Parameters should be automatically updated to the next station upon arrival at the next station."}, {"Function_Flow_Name": "GPS", "Sub_Flow_Name": "Enable/Disable GPS", "Use_Case_Name": "Operator Selects/Overrides Location (Manual Mode)", "Test_Scnario": "Verify Operator Switches Device Mode for Current SP", "Test_Sce_Description": "Check if the operator is able to switch the device mode between DISTANCE BASED TRANSIT and GO. The operator should be able to enter their login credentials and select \u201clogin\u201d. The SA Tool application should validate the credentials and the operator should be successfully logged in."}, {"Function_Flow_Name": "GPS", "Sub_Flow_Name": "Enable/Disable GPS", "Use_Case_Name": "Operator Selects/Overrides Location (Manual Mode)", "Test_Scnario": "Verify SP Switching is disabled", "Test_Sce_Description": "Check if the SP Switching is disabled when the operator taps on the SP icon on the login screen to switch between SPs. The operator should be displayed a toast message notification notifying SP switching is disabled."}, {"Function_Flow_Name": "GPS", "Sub_Flow_Name": "Enable/Disable GPS", "Use_Case_Name": "Operator Selects/Overrides Location (Manual Mode)", "Test_Scnario": "Verify Operator selects a new Line but doesn\u2019t select a trip", "Test_Sce_Description": "Check if the operator is able to select a new line but doesn\u2019t select a trip. The operator should be able to select the desired trip and stop. In case of bus, operator also enters the vehicle id."}, {"Function_Flow_Name": "GPS", "Sub_Flow_Name": "Enable/Disable GPS", "Use_Case_Name": "Operator Selects/Overrides Location (Manual Mode)", "Test_Scnario": "Verify FLATFARE BASED SA Tool operator selects new route parameters", "Test_Sce_Description": "Check if the FLATFARE BASED SA Tool operator is able to select new route parameters. The operator should be able to select the Additional Options menu on the SA Tool, select Route Parameters, select Surface (Bus / Streetcar) or Subway toggle. Surface should be selected by default."}, {"Function_Flow_Name": "GPS", "Sub_Flow_Name": "Enable/Disable GPS", "Use_Case_Name": "Operator Selects/Overrides Location (Manual Mode)", "Test_Scnario": "Verify Operator enables auto-positioning for current location", "Test_Sce_Description": "Check if the operator is able to enable auto-location for route parameters on the SA Tool. The operator should be able to select the Additional Options menu on the SA Tool, select Route Parameters, turn on automatic location, select the desired Line and Trip."}, {"Function_Flow_Name": "GPS", "Sub_Flow_Name": "Enable/Disable GPS", "Use_Case_Name": "Operator Selects/Overrides Location (Manual Mode)", "Test_Scnario": "Verify GPS functionality is remotely enabled/disabled on the SA Tool", "Test_Sce_Description": "Check if the GPS functionality is remotely enabled/disabled on the SA Tool. The SA Tool application should receive remote configuration and enable/disable the auto location functionality based on the new configuration in the background."}, {"Function_Flow_Name": "GPS", "Sub_Flow_Name": "Enable/Disable GPS", "Use_Case_Name": "Operator Selects/Overrides Location (Manual Mode)", "Test_Scnario": "Verify Operator disables auto-location functionality", "Test_Sce_Description": "Check if the operator is able to disable the auto-location functionality. The operator should be able to select the Additional Options menu on the SA Tool, select Route Parameters, and turn off automatic location."}, {"Function_Flow_Name": "GPS", "Sub_Flow_Name": "Enable/Disable GPS", "Use_Case_Name": "Operator selects a new Line but doesn\u2019t select a trip", "Test_Scnario": "Operator selects a new Line but doesn\u2019t select a trip", "Test_Sce_Description": "This scenario tests the functionality where the operator selects a new line but does not select a trip. The application should reset the trip and stop selection and the apply button should be greyed out, preventing the operator from saving the current inspection parameters."}, {"Function_Flow_Name": "GPS", "Sub_Flow_Name": "Enable/Disable GPS", "Use_Case_Name": "Operator selects a new Line but doesn\u2019t select a trip", "Test_Scnario": "Operator selects the desired trip and stop", "Test_Sce_Description": "This scenario tests the functionality where the operator selects the desired trip and stop. In case of a bus, the operator should also be able to enter the vehicle id. The application should allow the operator to save the selection."}, {"Function_Flow_Name": "GPS", "Sub_Flow_Name": "Enable/Disable GPS", "Use_Case_Name": "Operator selects a new Line but doesn\u2019t select a trip", "Test_Scnario": "Auto-selection of first stop/station as inspection location", "Test_Sce_Description": "This scenario tests the functionality where if the operator doesn\u2019t select a stop, the application auto-selects the first stop/station as the inspection location. The inspection location should be updated to Operator\u2019s selection."}, {"Function_Flow_Name": "GPS", "Sub_Flow_Name": "Enable/Disable GPS", "Use_Case_Name": "Operator selects a new Line but doesn\u2019t select a trip", "Test_Scnario": "FLATFARE BASED SA Tool operator selects new route parameters", "Test_Sce_Description": "This scenario tests the functionality where a FLATFARE BASED SA Tool operator selects new route parameters. The operator should be able to select the Additional Options menu on the SA Tool, select Route Parameters, select Surface (Bus / Streetcar) or Subway toggle, and fill in the mandatory fields."}, {"Function_Flow_Name": "GPS", "Sub_Flow_Name": "Enable/Disable GPS", "Use_Case_Name": "Operator selects a new Line but doesn\u2019t select a trip", "Test_Scnario": "Operator enables auto-positioning for current location", "Test_Sce_Description": "This scenario tests the functionality where the operator enables auto-location for route parameters on the SA Tool. The SA Tool should automatically compute the current inspection location and update the Stop ID to indicate to the operator the computed location."}, {"Function_Flow_Name": "GPS", "Sub_Flow_Name": "Enable/Disable GPS", "Use_Case_Name": "Operator selects a new Line but doesn\u2019t select a trip", "Test_Scnario": "GPS functionality is remotely enabled/disabled on the SA Tool", "Test_Sce_Description": "This scenario tests the functionality where the GPS functionality is remotely enabled/disabled on the SA Tool. The SA Tool application should receive remote configuration and enable/disable the auto location functionality based on the new configuration in background."}, {"Function_Flow_Name": "GPS", "Sub_Flow_Name": "Enable/Disable GPS", "Use_Case_Name": "Operator selects a new Line but doesn\u2019t select a trip", "Test_Scnario": "Operator disables auto-location functionality", "Test_Sce_Description": "This scenario tests the functionality where the operator disables auto-location functionality. The application should allow the operator to disable the auto-location functionality."}, {"Function_Flow_Name": "GPS", "Sub_Flow_Name": "Enable/Disable GPS", "Use_Case_Name": "Operator selects a new Line but doesn\u2019t select a trip", "Test_Scnario": "Operator Switches Device Mode for Current SP (DISTANCE BASED TRANSIT and GO Only)", "Test_Sce_Description": "This scenario tests the functionality where the operator changes device mode between DISTANCE BASED TRANSIT and GO. The application should allow the operator to switch between GO and DISTANCE BASED TRANSIT mode on the SA Tool."}, {"Function_Flow_Name": "GPS", "Sub_Flow_Name": "Enable/Disable GPS", "Use_Case_Name": "Operator selects a new Line but doesn\u2019t select a trip", "Test_Scnario": "SP Switching is disabled", "Test_Sce_Description": "This scenario tests the functionality where the SP Switching is disabled. The application should display a toast message notification notifying SP switching is disabled when the operator taps on the SP icon on login screen to switch between SPs."}, {"Function_Flow_Name": "GPS", "Sub_Flow_Name": "Enable/Disable GPS", "Use_Case_Name": "[FLATFARE BASED Only] FLATFARE BASED SA Tool operator selects new route parameters", "Test_Scnario": "Verify the selection of Additional Options menu on the SA Tool", "Test_Sce_Description": "Check if the operator is able to select the Additional Options menu on the SA Tool. The menu should open up successfully upon selection."}, {"Function_Flow_Name": "GPS", "Sub_Flow_Name": "Enable/Disable GPS", "Use_Case_Name": "[FLATFARE BASED Only] FLATFARE BASED SA Tool operator selects new route parameters", "Test_Scnario": "Verify the selection of Route Parameters", "Test_Sce_Description": "Check if the operator is able to select Route Parameters from the Additional Options menu. The Route Parameters options should be displayed upon selection."}, {"Function_Flow_Name": "GPS", "Sub_Flow_Name": "Enable/Disable GPS", "Use_Case_Name": "[FLATFARE BASED Only] FLATFARE BASED SA Tool operator selects new route parameters", "Test_Scnario": "Verify the selection of Surface or Subway toggle", "Test_Sce_Description": "Check if the operator is able to select either Surface (Bus / Streetcar) or Subway toggle. The selected option should be highlighted upon selection."}, {"Function_Flow_Name": "GPS", "Sub_Flow_Name": "Enable/Disable GPS", "Use_Case_Name": "[FLATFARE BASED Only] FLATFARE BASED SA Tool operator selects new route parameters", "Test_Scnario": "Verify the display of options upon Surface selection", "Test_Sce_Description": "Check if the following options are displayed when Surface is selected: Route ID, Vehicle ID, Stop ID, Region. All these options should be displayed correctly."}, {"Function_Flow_Name": "GPS", "Sub_Flow_Name": "Enable/Disable GPS", "Use_Case_Name": "[FLATFARE BASED Only] FLATFARE BASED SA Tool operator selects new route parameters", "Test_Scnario": "Verify the display of options upon Station selection", "Test_Sce_Description": "Check if the Station option is displayed when Station is selected. The Station option should be displayed correctly."}, {"Function_Flow_Name": "GPS", "Sub_Flow_Name": "Enable/Disable GPS", "Use_Case_Name": "[FLATFARE BASED Only] FLATFARE BASED SA Tool operator selects new route parameters", "Test_Scnario": "Verify the functionality of Save selection", "Test_Sce_Description": "Check if the operator is able to save the selection. The selection should be saved successfully and the operator should be notified of the same."}, {"Function_Flow_Name": "GPS", "Sub_Flow_Name": "Enable/Disable GPS", "Use_Case_Name": "[FLATFARE BASED Only] FLATFARE BASED SA Tool operator selects new route parameters", "Test_Scnario": "Verify the functionality of mandatory fields", "Test_Sce_Description": "Check if the Save/Apply selection option is enabled only when all the mandatory fields are filled in. The option should be disabled if any mandatory field is left empty."}, {"Function_Flow_Name": "GPS", "Sub_Flow_Name": "Enable/Disable GPS", "Use_Case_Name": "[FLATFARE BASED Only] FLATFARE BASED SA Tool operator selects new route parameters", "Test_Scnario": "Verify the functionality of auto-location", "Test_Sce_Description": "Check if the operator is able to enable auto-location for route parameters on the SA Tool. The auto-location should be enabled successfully and the current inspection location should be computed automatically."}, {"Function_Flow_Name": "GPS", "Sub_Flow_Name": "Enable/Disable GPS", "Use_Case_Name": "[FLATFARE BASED Only] FLATFARE BASED SA Tool operator selects new route parameters", "Test_Scnario": "Verify the functionality of GPS", "Test_Sce_Description": "Check if the SA Tool application receives remote configuration and enables/disables the auto location functionality based on the new configuration in background. The functionality should work as expected."}, {"Function_Flow_Name": "GPS", "Sub_Flow_Name": "Enable/Disable GPS", "Use_Case_Name": "[FLATFARE BASED Only] FLATFARE BASED SA Tool operator selects new route parameters", "Test_Scnario": "Verify the functionality of disabling auto-location", "Test_Sce_Description": "Check if the operator is able to disable auto-location functionality. The auto-location functionality should be disabled successfully upon selection."}, {"Function_Flow_Name": "GPS", "Sub_Flow_Name": "Enable/Disable GPS", "Use_Case_Name": "Operator enables auto-positioning for current location", "Test_Scnario": "SA Tool auto-computes current location", "Test_Sce_Description": "Verify that the SA Tool application is able to auto-compute the current location when the auto-location functionality is enabled. The application should compute the distance from all stops on the selected route and trip at a configurable duration. Once within a stop radius, the device should use this stop as the current stop on SA Tool application. The device should continue to use this stop as the current stop until a new stop radius is entered."}, {"Function_Flow_Name": "GPS", "Sub_Flow_Name": "Enable/Disable GPS", "Use_Case_Name": "Operator enables auto-positioning for current location", "Test_Scnario": "GPS signal quality changes", "Test_Sce_Description": "Verify that the SA Tool application is able to detect and reflect changes in the GPS signal quality. The GPS signal quality indicator on the home screen should change to reflect the same."}, {"Function_Flow_Name": "GPS", "Sub_Flow_Name": "Enable/Disable GPS", "Use_Case_Name": "Operator enables auto-positioning for current location", "Test_Scnario": "CLIENT backend connectivity changes", "Test_Sce_Description": "Verify that the SA Tool application is able to detect and reflect changes in the connectivity status with the CLIENT backend. The network icon should update to reflect the connectivity status with the network which reflects the status with CLIENT backend."}, {"Function_Flow_Name": "GPS", "Sub_Flow_Name": "Enable/Disable GPS", "Use_Case_Name": "Operator enables auto-positioning for current location", "Test_Scnario": "Operator Overrides Selects/Overrides Current Location", "Test_Sce_Description": "Verify that the operator is able to select/override the current location for inspection / fare payment purposes on the SA Tool. The Route Parameters should be updated to the operator selected location and should be automatically updated to the next station upon arrival at the next station."}, {"Function_Flow_Name": "GPS", "Sub_Flow_Name": "Enable/Disable GPS", "Use_Case_Name": "Operator enables auto-positioning for current location", "Test_Scnario": "Operator enables auto-positioning for current location", "Test_Sce_Description": "Verify that the operator is able to enable auto-location for route parameters on the SA Tool. The SA Tool should automatically compute the current inspection location and the auto location signal quality indicator on the home screen should start reflecting the auto location signal quality. The Stop ID should update to indicate to the operator the computed location."}, {"Function_Flow_Name": "GPS", "Sub_Flow_Name": "Enable/Disable GPS", "Use_Case_Name": "Operator enables auto-positioning for current location", "Test_Scnario": "GPS functionality is remotely enabled/disabled on the SA Tool", "Test_Sce_Description": "Verify that the SA Tool application is able to receive remote configuration and enables/disables the auto location functionality based on the new configuration in background. If the operator had auto location enabled, and the feature was remotely disabled, a greyed out icon should be shown."}, {"Function_Flow_Name": "GPS", "Sub_Flow_Name": "Enable/Disable GPS", "Use_Case_Name": "Operator enables auto-positioning for current location", "Test_Scnario": "Operator disables auto-location functionality", "Test_Sce_Description": "Verify that the operator is able to disable the auto-location functionality. The application should stop auto-computing the current location and the auto location signal quality indicator on the home screen should stop reflecting the auto location signal quality."}, {"Function_Flow_Name": "GPS", "Sub_Flow_Name": "Enable/Disable GPS", "Use_Case_Name": "GPS functionality is remotely enabled/disabled on the SA Tool", "Test_Scnario": "SA Tool auto-location functionality", "Test_Sce_Description": "Verify that the SA Tool application receives remote configuration and enables/disables the auto location functionality based on the new configuration in the background. If the operator had auto location enabled, and the feature was remotely disabled, a greyed out icon should be shown."}, {"Function_Flow_Name": "GPS", "Sub_Flow_Name": "Enable/Disable GPS", "Use_Case_Name": "GPS functionality is remotely enabled/disabled on the SA Tool", "Test_Scnario": "Operator disables auto-location functionality", "Test_Sce_Description": "Verify that the operator can successfully turn off auto-location and save the changes. After this, location positioning and calculation should be disabled."}, {"Function_Flow_Name": "GPS", "Sub_Flow_Name": "Enable/Disable GPS", "Use_Case_Name": "GPS functionality is remotely enabled/disabled on the SA Tool", "Test_Scnario": "SA Tool auto-computes current Location", "Test_Sce_Description": "Verify that the SA Tool application is computing the distance from all stops on the selected route and trip at a configurable duration. Once within a stop radius, the device should use this stop as the current stop on SA Tool application. The device should continue to use this stop as the current stop until a new stop radius is entered."}, {"Function_Flow_Name": "GPS", "Sub_Flow_Name": "Enable/Disable GPS", "Use_Case_Name": "GPS functionality is remotely enabled/disabled on the SA Tool", "Test_Scnario": "GPS Signal quality changes", "Test_Sce_Description": "Verify that when the GPS signal quality changes on the SA Tool, the GPS signal quality indicator on the home screen is changed to reflect the same."}, {"Function_Flow_Name": "GPS", "Sub_Flow_Name": "Enable/Disable GPS", "Use_Case_Name": "GPS functionality is remotely enabled/disabled on the SA Tool", "Test_Scnario": "CLIENT backend connectivity changes", "Test_Sce_Description": "Verify that when the SA Tool loses connection to the CLIENT backend, the application updates the network icon to reflect the connectivity status with the network which reflects the status with CLIENT backend."}, {"Function_Flow_Name": "GPS", "Sub_Flow_Name": "Enable/Disable GPS", "Use_Case_Name": "GPS functionality is remotely enabled/disabled on the SA Tool", "Test_Scnario": "Operator Overrides Selects/Overrides Current Location", "Test_Sce_Description": "Verify that the operator can select the Additional Options menu on the SA Tool, select Route Parameters, and update current location. The Route Parameters should be updated to the operator selected location and should be automatically updated to the next station upon arrival at the next station."}, {"Function_Flow_Name": "GPS", "Sub_Flow_Name": "Enable/Disable GPS", "Use_Case_Name": "GPS functionality is remotely enabled/disabled on the SA Tool", "Test_Scnario": "SA Tool in Out-of-Service State", "Test_Sce_Description": "Verify that when the SA Tool is in \u201cOut-of-Service\u201d state, it is unable to accept a Farecard for any kind of functionality and may require maintenance to restore out-of-order components. If an operator is signed-in and the device goes into out-of-service state, the SA Tool application should not close the operator\u2019s shift unless the operator has requested to sign-off."}, {"Function_Flow_Name": "GPS", "Sub_Flow_Name": "Enable/Disable GPS", "Use_Case_Name": "GPS functionality is remotely enabled/disabled on the SA Tool", "Test_Scnario": "SA Tool in Standby State", "Test_Sce_Description": "Verify that when the SA Tool remains inactive for a configurable period of time, the SA Tool switches into a Standby state where the screen turns off. Once in the standby mode, the SA tool should disconnect from all the peripherals i.e. the card reader, PIN pad and the printer to conserve battery life."}, {"Function_Flow_Name": "GPS", "Sub_Flow_Name": "Enable/Disable GPS", "Use_Case_Name": "GPS functionality is remotely enabled/disabled on the SA Tool", "Test_Scnario": "SA Tool application running in the background", "Test_Sce_Description": "Verify that the SA Tool device allows the operator to use authorized third-party applications as needed. The operator should be able to launch multiple applications on the android device and move between them. If the SA Tool PDS application is running but is not in the foreground, the application should be in Standby State."}, {"Function_Flow_Name": "GPS", "Sub_Flow_Name": "Enable/Disable GPS", "Use_Case_Name": "GPS functionality is remotely enabled/disabled on the SA Tool", "Test_Scnario": "SA Tool in Revenue Mode", "Test_Sce_Description": "Verify that upon logon the operator can select Revenue Mode to operate their shift in. In this mode, the operator should be able to perform inspection, fare payments, sales, refunds/reversals, farecard queries, and other customer service gestures. SA tool should only have access to the EPT in the revenue mode and should accept the credit and debit payments."}, {"Function_Flow_Name": "GPS", "Sub_Flow_Name": "Enable/Disable GPS", "Use_Case_Name": "GPS functionality is remotely enabled/disabled on the SA Tool", "Test_Scnario": "SA Tool in Training Mode", "Test_Sce_Description": "Verify that the Training Mode allows the SA Tool operator to mimic all functionality available within Sales Mode without accepting payment, and only sending non-revenue transactions. Only non-revenue Farecard should be accepted in Training Mode."}, {"Function_Flow_Name": "GPS", "Sub_Flow_Name": "Enable/Disable GPS", "Use_Case_Name": "GPS functionality is remotely enabled/disabled on the SA Tool", "Test_Scnario": "SA Tool Operators", "Test_Sce_Description": "Verify that SA Tool Operators have access to Revenue Mode, can perform core functionality - Sales, Fare Payment, Inspection, have SA Tool Remote Access, can Unblock Farecard, and Modify Card Concession."}, {"Function_Flow_Name": "GPS", "Sub_Flow_Name": "Enable/Disable GPS", "Use_Case_Name": "GPS functionality is remotely enabled/disabled on the SA Tool", "Test_Scnario": "Device Parameter Tool Configurations", "Test_Sce_Description": "Verify that the configurations for the SA Tool introduced under the Open Payments release in the Device Parameter Tool are working as expected."}, {"Function_Flow_Name": "GPS", "Sub_Flow_Name": "Enable/Disable GPS", "Use_Case_Name": "Operator disables auto-location functionality", "Test_Scnario": "SA Tool application receives remote configuration", "Test_Sce_Description": "Verify that the SA Tool application correctly receives and applies the remote configuration settings. Check if the application behavior changes according to the new configuration."}, {"Function_Flow_Name": "GPS", "Sub_Flow_Name": "Enable/Disable GPS", "Use_Case_Name": "Operator disables auto-location functionality", "Test_Scnario": "SA Tool application enables/disables auto location functionality", "Test_Sce_Description": "Verify that the SA Tool application correctly enables or disables the auto location functionality based on the new configuration. Check if the location tracking is turned on/off as per the settings."}, {"Function_Flow_Name": "GPS", "Sub_Flow_Name": "Enable/Disable GPS", "Use_Case_Name": "Operator disables auto-location functionality", "Test_Scnario": "Greyed out icon is shown when auto location is remotely disabled", "Test_Sce_Description": "Verify that when the auto location feature is remotely disabled, a greyed out icon is shown to the operator. Check if the icon is clearly visible and indicates the disabled status of the feature."}, {"Function_Flow_Name": "GPS", "Sub_Flow_Name": "Enable/Disable GPS", "Use_Case_Name": "Operator disables auto-location functionality", "Test_Scnario": "Operator disables auto-location functionality", "Test_Sce_Description": "Verify that the operator is able to manually disable the auto location functionality from the application. Check if the location tracking stops when this functionality is turned off."}, {"Function_Flow_Name": "GPS", "Sub_Flow_Name": "Enable/Disable GPS", "Use_Case_Name": "Operator disables auto-location functionality", "Test_Scnario": "Location positioning and calculation are disabled", "Test_Sce_Description": "Verify that when the auto location functionality is disabled, the location positioning and calculation are also disabled. Check if the application stops computing and displaying the current location."}, {"Function_Flow_Name": "GPS", "Sub_Flow_Name": "Enable/Disable GPS", "Use_Case_Name": "Operator disables auto-location functionality", "Test_Scnario": "SA Tool auto-computes current location", "Test_Sce_Description": "Verify that the SA Tool correctly auto-computes the current location when the auto location functionality is enabled. Check if the computed location is accurate and updates in real-time."}, {"Function_Flow_Name": "GPS", "Sub_Flow_Name": "Enable/Disable GPS", "Use_Case_Name": "Operator disables auto-location functionality", "Test_Scnario": "GPS signal quality changes", "Test_Sce_Description": "Verify that the application correctly detects and reflects changes in the GPS signal quality. Check if the GPS signal quality indicator on the home screen changes according to the actual signal quality."}, {"Function_Flow_Name": "GPS", "Sub_Flow_Name": "Enable/Disable GPS", "Use_Case_Name": "Operator disables auto-location functionality", "Test_Scnario": "CLIENT backend connectivity changes", "Test_Sce_Description": "Verify that the application correctly detects and reflects changes in the connectivity with the CLIENT backend. Check if the network icon updates to reflect the current connectivity status."}, {"Function_Flow_Name": "GPS", "Sub_Flow_Name": "Enable/Disable GPS", "Use_Case_Name": "Operator disables auto-location functionality", "Test_Scnario": "Operator Overrides Selects/Overrides Current Location", "Test_Sce_Description": "Verify that the operator is able to manually select or override the current location for inspection/fare payment purposes. Check if the selected location is correctly updated in the Route Parameters."}, {"Function_Flow_Name": "GPS", "Sub_Flow_Name": "Enable/Disable GPS", "Use_Case_Name": "Operator disables auto-location functionality", "Test_Scnario": "Operator enables auto-positioning for current location", "Test_Sce_Description": "Verify that the operator is able to enable auto-positioning for the current location. Check if the SA Tool correctly computes and updates the current inspection location when this feature is enabled."}, {"Function_Flow_Name": "GPS", "Sub_Flow_Name": "Select new route and line", "Use_Case_Name": "Operator Overrides Selects/Overrides Current Route Parameters", "Test_Scnario": "Verify Operator Selects Route Parameters", "Test_Sce_Description": "Check if the operator is able to select the Route Parameters from the Additional Options menu on the SA Tool. The system should allow the operator to select and update the current location."}, {"Function_Flow_Name": "GPS", "Sub_Flow_Name": "Select new route and line", "Use_Case_Name": "Operator Overrides Selects/Overrides Current Route Parameters", "Test_Scnario": "Verify Operator Updates Current Location", "Test_Sce_Description": "Check if the operator is able to update the current location in the Route Parameters. The system should reflect the updated location in the Route Parameters."}, {"Function_Flow_Name": "GPS", "Sub_Flow_Name": "Select new route and line", "Use_Case_Name": "Operator Overrides Selects/Overrides Current Route Parameters", "Test_Scnario": "Verify Automatic Update of Route Parameters", "Test_Sce_Description": "Check if the Route Parameters are automatically updated to the next station upon arrival. The system should automatically update the location in the Route Parameters when the operator arrives at the next station."}, {"Function_Flow_Name": "GPS", "Sub_Flow_Name": "Select new route and line", "Use_Case_Name": "Operator Overrides Selects/Overrides Current Route Parameters", "Test_Scnario": "Verify Operator Overrides Location in Manual Mode", "Test_Sce_Description": "Check if the operator is able to override the current location in manual mode when auto-location is disabled. The system should allow the operator to manually select and update the location."}, {"Function_Flow_Name": "GPS", "Sub_Flow_Name": "Select new route and line", "Use_Case_Name": "Operator Overrides Selects/Overrides Current Route Parameters", "Test_Scnario": "Verify Operator Switches Device Mode", "Test_Sce_Description": "Check if the operator is able to switch the device mode between DISTANCE BASED TRANSIT and GO. The system should allow the operator to switch modes and validate their credentials."}, {"Function_Flow_Name": "GPS", "Sub_Flow_Name": "Select new route and line", "Use_Case_Name": "Operator Overrides Selects/Overrides Current Route Parameters", "Test_Scnario": "Verify SP Switching is Disabled", "Test_Sce_Description": "Check if the SP switching functionality is disabled when no operator is logged in. The system should not allow the operator to switch between SPs when the switching functionality is disabled."}, {"Function_Flow_Name": "GPS", "Sub_Flow_Name": "Select new route and line", "Use_Case_Name": "Operator Overrides Selects/Overrides Current Route Parameters", "Test_Scnario": "Verify Operator Selects New Line Without Selecting a Trip", "Test_Sce_Description": "Check if the operator is able to select a new line without selecting a trip. The system should allow the operator to select a new line but should not allow them to save the inspection parameters without selecting a trip."}, {"Function_Flow_Name": "GPS", "Sub_Flow_Name": "Select new route and line", "Use_Case_Name": "Operator Overrides Selects/Overrides Current Route Parameters", "Test_Scnario": "Verify FLATFARE BASED SA Tool Operator Selects New Route Parameters", "Test_Sce_Description": "Check if a FLATFARE BASED SA Tool operator is able to select new route parameters. The system should allow the operator to select the route ID, vehicle ID, stop ID, and region."}, {"Function_Flow_Name": "GPS", "Sub_Flow_Name": "Select new route and line", "Use_Case_Name": "Operator Overrides Selects/Overrides Current Route Parameters", "Test_Scnario": "Verify Operator Enables Auto-Positioning for Current Location", "Test_Sce_Description": "Check if the operator is able to enable auto-location for route parameters on the SA Tool. The system should allow the operator to turn on automatic location and compute the current inspection location."}, {"Function_Flow_Name": "GPS", "Sub_Flow_Name": "Select new route and line", "Use_Case_Name": "Operator Overrides Selects/Overrides Current Route Parameters", "Test_Scnario": "Verify GPS Functionality is Remotely Enabled/Disabled", "Test_Sce_Description": "Check if the GPS functionality on the SA Tool can be remotely enabled or disabled. The system should be able to receive remote configuration and enable or disable the auto location functionality based on the new configuration."}, {"Function_Flow_Name": "GPS", "Sub_Flow_Name": "Select new route and line", "Use_Case_Name": "Operator Overrides Selects/Overrides Current Route Parameters", "Test_Scnario": "Verify Operator Disables Auto-Location Functionality", "Test_Sce_Description": "Check if the operator is able to disable the auto-location functionality on the SA Tool. The system should allow the operator to disable the auto-location functionality."}, {"Function_Flow_Name": "GPS", "Sub_Flow_Name": "Select new route and line", "Use_Case_Name": "Operator Switches Device Mode for Current SP (DISTANCE BASED TRANSIT and GO Only)", "Test_Scnario": "Verify Operator can switch device mode", "Test_Sce_Description": "Check if the operator is able to switch the device mode between DISTANCE BASED TRANSIT and GO. The operator should be able to select the desired mode on the login screen, enter their credentials and successfully log in."}, {"Function_Flow_Name": "GPS", "Sub_Flow_Name": "Select new route and line", "Use_Case_Name": "Operator Switches Device Mode for Current SP (DISTANCE BASED TRANSIT and GO Only)", "Test_Scnario": "Verify SA Tool application validates credentials", "Test_Sce_Description": "Ensure that the SA Tool application validates the operator's credentials when they attempt to log in. If the credentials are incorrect, the operator should not be able to log in."}, {"Function_Flow_Name": "GPS", "Sub_Flow_Name": "Select new route and line", "Use_Case_Name": "Operator Switches Device Mode for Current SP (DISTANCE BASED TRANSIT and GO Only)", "Test_Scnario": "Verify access to features based on selected mode", "Test_Sce_Description": "Check if the features accessible to the operator depend on the mode selected on the login screen. If a GO/DISTANCE BASED TRANSIT user signs in as GO, they should have access to GO Route Parameters, GO Fare Payments & Inspections, and GO & DISTANCE BASED TRANSIT Sales. If they sign in as DISTANCE BASED TRANSIT, they should have access to DISTANCE BASED TRANSIT Route Parameters, DISTANCE BASED TRANSIT Fare Payments & Inspections, and GO & DISTANCE BASED TRANSIT Sales."}, {"Function_Flow_Name": "GPS", "Sub_Flow_Name": "Select new route and line", "Use_Case_Name": "Operator Switches Device Mode for Current SP (DISTANCE BASED TRANSIT and GO Only)", "Test_Scnario": "Verify SP Switching is disabled", "Test_Sce_Description": "Check if the SP switching functionality is disabled when no operator is logged in. If an operator is logged in, the application should allow them to continue inspecting at their selected SP. Once they successfully sign out, they should only be able to inspect at the SP the device was provisioned for, if the switching functionality is disabled."}, {"Function_Flow_Name": "GPS", "Sub_Flow_Name": "Select new route and line", "Use_Case_Name": "Operator Switches Device Mode for Current SP (DISTANCE BASED TRANSIT and GO Only)", "Test_Scnario": "Verify toast message notification when SP switching is disabled", "Test_Sce_Description": "Ensure that a toast message notification is displayed to the operator when they attempt to switch between SPs and the SP switching is disabled."}, {"Function_Flow_Name": "GPS", "Sub_Flow_Name": "Select new route and line", "Use_Case_Name": "Operator Switches Device Mode for Current SP (DISTANCE BASED TRANSIT and GO Only)", "Test_Scnario": "Verify performance when switching between modes", "Test_Sce_Description": "Check the performance of the SA Tool application when the operator switches between DISTANCE BASED TRANSIT and GO modes. The application should not lag or crash during the switch."}, {"Function_Flow_Name": "GPS", "Sub_Flow_Name": "Select new route and line", "Use_Case_Name": "Operator Switches Device Mode for Current SP (DISTANCE BASED TRANSIT and GO Only)", "Test_Scnario": "Verify security when switching between modes", "Test_Sce_Description": "Ensure that the operator's credentials are securely stored and transmitted when they switch between DISTANCE BASED TRANSIT and GO modes. No unauthorized access should be possible."}, {"Function_Flow_Name": "GPS", "Sub_Flow_Name": "Select new route and line", "Use_Case_Name": "SP Switching is disabled", "Test_Scnario": "SP Switching Disabled", "Test_Sce_Description": "Verify that when SP Switching is disabled, the operator is unable to switch between SPs and a toast message notification is displayed notifying that SP switching is disabled."}, {"Function_Flow_Name": "GPS", "Sub_Flow_Name": "Select new route and line", "Use_Case_Name": "SP Switching is disabled", "Test_Scnario": "Adding Media to Pilot List", "Test_Sce_Description": "Verify that the operator is able to add media to the Pilot list by selecting the add option and tapping on the media. Ensure that a confirmation dialogue is presented stating Contactless Successfully Added along with the DPAN."}, {"Function_Flow_Name": "GPS", "Sub_Flow_Name": "Select new route and line", "Use_Case_Name": "SP Switching is disabled", "Test_Scnario": "Removing Media from Pilot List", "Test_Sce_Description": "Verify that the operator is able to remove media from the Pilot list by selecting the remove option and tapping on the media. Ensure that a confirmation dialogue is presented stating Contactless Successfully Removed along with the DPAN."}, {"Function_Flow_Name": "GPS", "Sub_Flow_Name": "Select new route and line", "Use_Case_Name": "SP Switching is disabled", "Test_Scnario": "Adding Media Already on Pilot List", "Test_Sce_Description": "Verify that when the operator attempts to add media that is already on the Pilot list, a confirmation dialogue is presented stating Notice and This card is already on the pilot list."}, {"Function_Flow_Name": "GPS", "Sub_Flow_Name": "Select new route and line", "Use_Case_Name": "SP Switching is disabled", "Test_Scnario": "Removing Media Not on Pilot List", "Test_Sce_Description": "Verify that when the operator attempts to remove media that is not on the Pilot list, a confirmation dialogue is presented stating Contactless Successfully Removed along with the DPAN, even if the media has already been removed."}, {"Function_Flow_Name": "GPS", "Sub_Flow_Name": "Select new route and line", "Use_Case_Name": "SP Switching is disabled", "Test_Scnario": "Adding/Removing Media that Failed ODA Check", "Test_Sce_Description": "Verify that when the operator attempts to add or remove media that has failed the ODA check, the device rejects the tap and a confirmation dialogue is presented stating Unsuccessful and This card is not compatible."}, {"Function_Flow_Name": "GPS", "Sub_Flow_Name": "Select new route and line", "Use_Case_Name": "SP Switching is disabled", "Test_Scnario": "Adding/Removing Expired Media", "Test_Sce_Description": "Verify that when the operator attempts to add or remove expired media, the device rejects the tap and a confirmation dialogue is presented stating Unsuccessful and This card is expired."}, {"Function_Flow_Name": "GPS", "Sub_Flow_Name": "Select new route and line", "Use_Case_Name": "SP Switching is disabled", "Test_Scnario": "Adding/Removing Media while Device is Offline", "Test_Sce_Description": "Verify that when the device is offline, the operator is unable to add or remove media from the Pilot list."}, {"Function_Flow_Name": "GPS", "Sub_Flow_Name": "Select new route and line", "Use_Case_Name": "SP Switching is disabled", "Test_Scnario": "Out-of-Service State", "Test_Sce_Description": "Verify that when the SA Tool is in Out-of-Service state, it is unable to accept a Farecard for any kind of functionality and may require maintenance to restore out-of-order components."}, {"Function_Flow_Name": "GPS", "Sub_Flow_Name": "Select new route and line", "Use_Case_Name": "SP Switching is disabled", "Test_Scnario": "Standby State", "Test_Sce_Description": "Verify that when the SA Tool is in Standby state, the screen is turned off and the SA tool disconnects from all the peripherals to conserve battery life."}, {"Function_Flow_Name": "GPS", "Sub_Flow_Name": "Select new route and line", "Use_Case_Name": "SP Switching is disabled", "Test_Scnario": "SA Tool Running in Background", "Test_Sce_Description": "Verify that when the SA Tool application is running in the background, the application is in Standby State and disconnects from all the peripherals to conserve battery life."}, {"Function_Flow_Name": "GPS", "Sub_Flow_Name": "Select new route and line", "Use_Case_Name": "SP Switching is disabled", "Test_Scnario": "Revenue Mode", "Test_Sce_Description": "Verify that in Revenue Mode, the operator can perform inspection, fare payments, sales, refunds/reversals, farecard queries, and other customer service gestures."}, {"Function_Flow_Name": "GPS", "Sub_Flow_Name": "Select new route and line", "Use_Case_Name": "SP Switching is disabled", "Test_Scnario": "Training Mode", "Test_Sce_Description": "Verify that in Training Mode, the operator can mimic all functionality available within Sales Mode without accepting payment, and only sending non-revenue transactions."}, {"Function_Flow_Name": "GPS", "Sub_Flow_Name": "Select new route and line", "Use_Case_Name": "SP Switching is disabled", "Test_Scnario": "User Access", "Test_Sce_Description": "Verify that different users have access to different functionalities as per their roles and permissions."}, {"Function_Flow_Name": "GPS", "Sub_Flow_Name": "Select new route and line", "Use_Case_Name": "SP Switching is disabled", "Test_Scnario": "Device Parameter Tool Configurations", "Test_Sce_Description": "Verify that the configurations for the SA Tool introduced under the Open Payments release in the Device Parameter Tool are working as expected."}, {"Function_Flow_Name": "Training Mode", "Sub_Flow_Name": "Power on / off / reboot SA Tool", "Use_Case_Name": "Out-of-Service State", "Test_Scnario": "Out-of-Service State", "Test_Sce_Description": "Verify that when the SA Tool is in the 'Out-of-Service' state, it does not accept a Farecard for any kind of functionality and may require maintenance to restore out-of-order components."}, {"Function_Flow_Name": "Training Mode", "Sub_Flow_Name": "Power on / off / reboot SA Tool", "Use_Case_Name": "Out-of-Service State", "Test_Scnario": "Operator Sign-in during Out-of-Service State", "Test_Sce_Description": "Verify that if an operator is signed-in and the device goes into out-of-service state, the SA Tool application does not close the operator\u2019s shift unless the operator has requested to sign-off."}, {"Function_Flow_Name": "Training Mode", "Sub_Flow_Name": "Power on / off / reboot SA Tool", "Use_Case_Name": "Out-of-Service State", "Test_Scnario": "Standby State", "Test_Sce_Description": "Verify that an operator can temporarily suspend all SA Tool functionality while in Standby state. After the SA Tool remains inactive for a configurable period of time, the SA Tool should switch into a Standby state where the screen will turn off."}, {"Function_Flow_Name": "Training Mode", "Sub_Flow_Name": "Power on / off / reboot SA Tool", "Use_Case_Name": "Out-of-Service State", "Test_Scnario": "Standby State with SA Tool application running in the background", "Test_Sce_Description": "Verify that if the SA Tool PDS application is running but is not in the foreground, the application will be in Standby State. Once in the standby mode, the SA tool should disconnect from all the peripherals i.e. the card reader, PIN pad and the printer to conserve battery life."}, {"Function_Flow_Name": "Training Mode", "Sub_Flow_Name": "Power on / off / reboot SA Tool", "Use_Case_Name": "Out-of-Service State", "Test_Scnario": "Resuming functionality of SA Tool application", "Test_Sce_Description": "Verify that in order to resume the functionality of the SA Tool application, the operator merely needs to switch back to the SA Tool application. The third-party applications may continue to run in the background."}, {"Function_Flow_Name": "Training Mode", "Sub_Flow_Name": "Power on / off / reboot SA Tool", "Use_Case_Name": "Out-of-Service State", "Test_Scnario": "Revenue Mode", "Test_Sce_Description": "Verify that in the Revenue Mode, the operator can perform inspection, fare payments, sales, refunds/reversals, farecard queries, and other customer service gestures. SA tool should only have access to the EPT in the revenue mode and should accept the credit and debit payments."}, {"Function_Flow_Name": "Training Mode", "Sub_Flow_Name": "Power on / off / reboot SA Tool", "Use_Case_Name": "Out-of-Service State", "Test_Scnario": "Training Mode", "Test_Sce_Description": "Verify that the Training Mode allows the SA Tool operator to mimic all functionality available within Sales Mode without accepting payment, and only sending non-revenue transactions. Only non-revenue Farecard should be accepted in Training Mode."}, {"Function_Flow_Name": "Training Mode", "Sub_Flow_Name": "Power on / off / reboot SA Tool", "Use_Case_Name": "Out-of-Service State", "Test_Scnario": "Out-of-Service State with Open Payments Media", "Test_Sce_Description": "Verify that when the device is in Out-of-Service state, it does not detect the Open Payments Media when a customer attempts to tap their Open Payments Media on the card reader."}, {"Function_Flow_Name": "Training Mode", "Sub_Flow_Name": "Power on / off / reboot SA Tool", "Use_Case_Name": "Out-of-Service State", "Test_Scnario": "Device configured for only farecard reversals", "Test_Sce_Description": "Verify that when the device is configured for only farecard reversals, it provides an error message 'Only Available for Farecards' to the cardholder when they attempt to tap their Open Payments Media on the card reader."}, {"Function_Flow_Name": "Training Mode", "Sub_Flow_Name": "Power on / off / reboot SA Tool", "Use_Case_Name": "Out-of-Service State", "Test_Scnario": "Device in Pilot mode with unapproved Open Payments media", "Test_Sce_Description": "Verify that when the device is provisioned in beta mode and an Open Payments media that is not on the approved media list is tapped on the device, it checks the approved media list and if the media is not found on the approved media list, the 'Declined \u2013 Not Accepted, Tap Farecard' screen is provided to the cardholder."}, {"Function_Flow_Name": "Training Mode", "Sub_Flow_Name": "Power on / off / reboot SA Tool", "Use_Case_Name": "Standby State", "Test_Scnario": "Switching SA Tool from Standby to In-Service State", "Test_Sce_Description": "Verify that the operator can successfully switch the SA Tool from standby to in-service state by pressing the physical power button on the device, entering the lock screen passcode and signing in to the SA Tool application as an existing user."}, {"Function_Flow_Name": "Training Mode", "Sub_Flow_Name": "Power on / off / reboot SA Tool", "Use_Case_Name": "Standby State", "Test_Scnario": "Switching SA Tool from Standby to In-Service State before threshold requiring login", "Test_Sce_Description": "Verify that if the operator has not been in \u201cstandby\u201d state longer than the configurable threshold value that requires logging in, the SA Tool displays the home screen without requiring sign in and navigation to the home screen."}, {"Function_Flow_Name": "Training Mode", "Sub_Flow_Name": "Power on / off / reboot SA Tool", "Use_Case_Name": "Standby State", "Test_Scnario": "Switching SA Tool from In-Service to Standby State", "Test_Sce_Description": "Verify that the operator can successfully switch the SA Tool from in-service to standby state by pressing the physical power button on the device once."}, {"Function_Flow_Name": "Training Mode", "Sub_Flow_Name": "Power on / off / reboot SA Tool", "Use_Case_Name": "Standby State", "Test_Scnario": "Switching SA Tool to Standby State when navigating away from the SA Tool Application", "Test_Sce_Description": "Verify that when the operator switches to a third party application on SA Tool, the SA Tool application runs in the background and goes into standby state."}, {"Function_Flow_Name": "Training Mode", "Sub_Flow_Name": "Power on / off / reboot SA Tool", "Use_Case_Name": "Standby State", "Test_Scnario": "Change SP after switching device from standby to in-service state", "Test_Sce_Description": "Verify that when the operator attempts to change SP on the login screen after switching the device from standby to in-service state, the SA Tool application notifies the operator with a corresponding error message."}, {"Function_Flow_Name": "Training Mode", "Sub_Flow_Name": "Power on / off / reboot SA Tool", "Use_Case_Name": "Standby State", "Test_Scnario": "Switching SA Tool to Out-of-Service State", "Test_Sce_Description": "Verify that when the SA Tool is in \u201cOut-of-Service\u201d state, it is unable to accept a Farecard for any kind of functionality and may require maintenance to restore out-of-order components."}, {"Function_Flow_Name": "Training Mode", "Sub_Flow_Name": "Power on / off / reboot SA Tool", "Use_Case_Name": "Standby State", "Test_Scnario": "Switching SA Tool to Standby State", "Test_Sce_Description": "Verify that an operator can temporarily suspend all SA Tool functionality while in Standby state and that the SA Tool switches into a Standby state where the screen turns off after remaining inactive for a configurable period of time."}, {"Function_Flow_Name": "Training Mode", "Sub_Flow_Name": "Power on / off / reboot SA Tool", "Use_Case_Name": "Standby State", "Test_Scnario": "Switching SA Tool to Standby State when using third-party applications", "Test_Sce_Description": "Verify that when the SA Tool PDS application is running but is not in the foreground (i.e., the operator is using another application), the application goes into Standby State."}, {"Function_Flow_Name": "Training Mode", "Sub_Flow_Name": "Power on / off / reboot SA Tool", "Use_Case_Name": "Standby State", "Test_Scnario": "Switching SA Tool to Revenue Mode", "Test_Sce_Description": "Verify that upon logon the operator can select the Revenue Mode which allows the SA Tool operator to interact with customers and perform inspection, fare payments, sales, refunds/reversals, farecard queries, and other customer service gestures."}, {"Function_Flow_Name": "Training Mode", "Sub_Flow_Name": "Power on / off / reboot SA Tool", "Use_Case_Name": "Standby State", "Test_Scnario": "Switching SA Tool to Training Mode", "Test_Sce_Description": "Verify that the Training Mode allows the SA Tool operator to mimic all functionality available within Sales Mode without accepting payment, and only sending non-revenue transactions."}, {"Function_Flow_Name": "Training Mode", "Sub_Flow_Name": "Power on / off / reboot SA Tool", "Use_Case_Name": "SA Tool application is running in the background", "Test_Scnario": "Launching the SA Tool Application", "Test_Sce_Description": "Verify that the authorized operator is able to launch the SA Tool Application successfully. The application should perform continuous diagnostic checks for network/cellular connection, battery level, and available storage space. After successful launch, the sign-in screen should be displayed."}, {"Function_Flow_Name": "Training Mode", "Sub_Flow_Name": "Power on / off / reboot SA Tool", "Use_Case_Name": "SA Tool application is running in the background", "Test_Scnario": "Continuous Diagnostic Check Unsuccessful - Network Connection", "Test_Sce_Description": "Verify that the application correctly identifies when the device is unable to connect to a network during the continuous diagnostic checks. The device should indicate this status and allow the operator to proceed in offline mode."}, {"Function_Flow_Name": "Training Mode", "Sub_Flow_Name": "Power on / off / reboot SA Tool", "Use_Case_Name": "SA Tool application is running in the background", "Test_Scnario": "Initial Self-Diagnostic Check Unsuccessful", "Test_Sce_Description": "Verify that the application correctly identifies critical failures during the initial self-diagnostic checks. The device should go to an error state."}, {"Function_Flow_Name": "Training Mode", "Sub_Flow_Name": "Power on / off / reboot SA Tool", "Use_Case_Name": "SA Tool application is running in the background", "Test_Scnario": "Continuous Diagnostic Check Unsuccessful - Storage, Battery or Secure Element", "Test_Sce_Description": "Verify that the application correctly identifies errors or failures in storage, battery or secure element during the continuous self-diagnostic checks. The device should go to an out-of-service state and a critical event should be sent to SOTI Mobicontrol and CSM."}, {"Function_Flow_Name": "Training Mode", "Sub_Flow_Name": "Power on / off / reboot SA Tool", "Use_Case_Name": "SA Tool application is running in the background", "Test_Scnario": "Switching between the PDS SA Tool application and third-party applications", "Test_Sce_Description": "Verify that the operator is able to switch between the SA Tool Application and the whitelisted third-party applications on the device. The operator should be able to navigate to the list of whitelisted third-party applications, find the desired app, and launch it."}, {"Function_Flow_Name": "Training Mode", "Sub_Flow_Name": "Power on / off / reboot SA Tool", "Use_Case_Name": "SA Tool application is running in the background", "Test_Scnario": "Switching to an Already Launched Application Running in the Background", "Test_Sce_Description": "Verify that the operator is able to switch to an application that is already launched and running in the background. The operator should be able to navigate through the list of open applications and launch the desired application."}, {"Function_Flow_Name": "Training Mode", "Sub_Flow_Name": "Power on / off / reboot SA Tool", "Use_Case_Name": "SA Tool application is running in the background", "Test_Scnario": "SA Tool Application Running in the Background", "Test_Sce_Description": "Verify that the SA Tool application can run in the background while the operator is using another application. The application should disconnect from all peripherals to conserve battery life and should resume functionality when the operator switches back to it."}, {"Function_Flow_Name": "Training Mode", "Sub_Flow_Name": "Power on / off / reboot SA Tool", "Use_Case_Name": "SA Tool application is running in the background", "Test_Scnario": "Switching SA Tool to Standby State", "Test_Sce_Description": "Verify that the operator can switch the SA Tool to Standby state by pressing the physical power button. The device should disconnect from all peripherals to conserve battery life and require the operator to press the power button and sign-in to return to In-Service state."}, {"Function_Flow_Name": "Training Mode", "Sub_Flow_Name": "Power on / off / reboot SA Tool", "Use_Case_Name": "SA Tool application is running in the background", "Test_Scnario": "Switching SA Tool to Out-of-Service State", "Test_Sce_Description": "Verify that the SA Tool correctly goes to 'Out-of-Service' state when it is unable to accept a Farecard for any kind of functionality. The application should not close the operator\u2019s shift unless the operator has requested to sign-off."}, {"Function_Flow_Name": "Training Mode", "Sub_Flow_Name": "Power on / off / reboot SA Tool", "Use_Case_Name": "SA Tool application is running in the background", "Test_Scnario": "Switching between Revenue and Training Modes", "Test_Sce_Description": "Verify that operators with access to both modes are able to select which Mode they would like to operate their shift in upon logon. 'Training' users should only have access to Training mode."}, {"Function_Flow_Name": "Training Mode", "Sub_Flow_Name": "Power on / off / reboot SA Tool", "Use_Case_Name": "SA Tool application is running in the background", "Test_Scnario": "Functionality in Revenue Mode", "Test_Sce_Description": "Verify that in Revenue Mode, the operator can perform inspection, fare payments, sales, refunds/reversals, farecard queries, and other customer service gestures. The SA tool should only have access to the EPT and accept credit and debit payments."}, {"Function_Flow_Name": "Training Mode", "Sub_Flow_Name": "Power on / off / reboot SA Tool", "Use_Case_Name": "SA Tool application is running in the background", "Test_Scnario": "Functionality in Training Mode", "Test_Sce_Description": "Verify that in Training Mode, the operator can mimic all functionality available within Sales Mode without accepting payment, and only sending non-revenue transactions. Only non-revenue Farecard should be accepted. Payment by credit/debit should not be enabled."}, {"Function_Flow_Name": "Training Mode", "Sub_Flow_Name": "Power on / off / reboot SA Tool", "Use_Case_Name": "Revenue Mode", "Test_Scnario": "Split Payment Refund/Reversal with Credit/Debit", "Test_Sce_Description": "Test the functionality of the SA Tool when a split payment refund/reversal has already begun and the customer has been refunded with at least one mean of payment that is credit or debit. The operator should be able to select to cancel the transaction, and the SA Tool should inform the operator that the payment means must be reversed. The operator should be able to confirm the cancellation, and the SA Tool should reverse non-credit and/or non-debit means of payment automatically. The operator should then choose the mean of payment and verbally prompt the customer to interact with the PIN pad to perform a refund void. The test should cover both successful and unsuccessful Moneris processing scenarios."}, {"Function_Flow_Name": "Training Mode", "Sub_Flow_Name": "Power on / off / reboot SA Tool", "Use_Case_Name": "Revenue Mode", "Test_Scnario": "Split Payment Refund/Reversal without Credit/Debit", "Test_Sce_Description": "Test the functionality of the SA Tool when a split payment refund/reversal has already begun and the customer has been refunded with at least one mean of payment that is not credit or debit. The operator should be able to select to cancel the transaction, and the SA Tool should inform the operator that the payment means must be reversed. The operator should be able to confirm the cancellation, and the SA Tool should reverse the payment means automatically and prompt the operator to begin a refund void."}, {"Function_Flow_Name": "Training Mode", "Sub_Flow_Name": "Power on / off / reboot SA Tool", "Use_Case_Name": "Revenue Mode", "Test_Scnario": "Exceeding Maximum Quantity", "Test_Sce_Description": "Test the functionality of the SA Tool when the quantity of product added to the cart exceeds the maximum allowable amount. The operator should be informed that they must process the customer's request in multiple transactions, and the SA Tool should not allow the operator to add more than the maximum allowable quantity to the shopping cart."}, {"Function_Flow_Name": "Training Mode", "Sub_Flow_Name": "Power on / off / reboot SA Tool", "Use_Case_Name": "Revenue Mode", "Test_Scnario": "No Eligible Products for Refund/Reversal", "Test_Sce_Description": "Test the functionality of the SA Tool when no eligible products for refund or reversal are detected. The SA Tool should display the relevant error message and the operator must acknowledge the message. The SA Tool should then return to the main menu."}, {"Function_Flow_Name": "Training Mode", "Sub_Flow_Name": "Power on / off / reboot SA Tool", "Use_Case_Name": "Revenue Mode", "Test_Scnario": "Eligible Products Not Requested by Customer", "Test_Sce_Description": "Test the functionality of the SA Tool when products are eligible for refund or reversal, but are not what the customer requested. The operator should inform the customer their product is not eligible for reversal or refund and return to the main menu."}, {"Function_Flow_Name": "Training Mode", "Sub_Flow_Name": "Power on / off / reboot SA Tool", "Use_Case_Name": "Revenue Mode", "Test_Scnario": "Internet Connection Failure", "Test_Sce_Description": "Test the functionality of the SA Tool when there is no internet connection and the operator is performing an action that requires connection to the Internet. The SA Tool should time out and display the relevant error message with options to try again or cancel. If successful connection is restored, the main use case should resume. If the action is cancelled, the SA Tool should return to the previous screen."}, {"Function_Flow_Name": "Training Mode", "Sub_Flow_Name": "Power on / off / reboot SA Tool", "Use_Case_Name": "Revenue Mode", "Test_Scnario": "Out-of-Service State", "Test_Sce_Description": "Test the functionality of the SA Tool when it is in \u201cOut-of-Service\u201d state. The SA Tool application should not close the operator\u2019s shift unless the operator has requested to sign-off."}, {"Function_Flow_Name": "Training Mode", "Sub_Flow_Name": "Power on / off / reboot SA Tool", "Use_Case_Name": "Revenue Mode", "Test_Scnario": "Standby State", "Test_Sce_Description": "Test the functionality of the SA Tool when it is in Standby state. The screen should turn off after a configurable period of time of inactivity, or when the operator presses the physical power button. The SA Tool should disconnect from all peripherals to conserve battery life. The operator should be able to press the physical power button and sign-in to the device lock screen to bring the device back into In-Service state."}, {"Function_Flow_Name": "Training Mode", "Sub_Flow_Name": "Power on / off / reboot SA Tool", "Use_Case_Name": "Revenue Mode", "Test_Scnario": "Revenue Mode", "Test_Sce_Description": "Test the functionality of the SA Tool in Revenue Mode. The operator should be able to interact with customers, perform inspection, fare payments, sales, refunds/reversals, farecard queries, and other customer service gestures. The SA Tool should only have access to the EPT in the revenue mode and accept credit and debit payments."}, {"Function_Flow_Name": "Training Mode", "Sub_Flow_Name": "Power on / off / reboot SA Tool", "Use_Case_Name": "Revenue Mode", "Test_Scnario": "Training Mode", "Test_Sce_Description": "Test the functionality of the SA Tool in Training Mode. The operator should be able to mimic all functionality available within Sales Mode without accepting payment, and only sending non-revenue transactions. Only non-revenue Farecard should be accepted in Training Mode. Payment by credit /debit should not be enabled. All paper tickets printed from the SA Tool should indicate that they were printed while in training mode."}, {"Function_Flow_Name": "Training Mode", "Sub_Flow_Name": "Power on / off / reboot SA Tool", "Use_Case_Name": "Training Mode", "Test_Scnario": "Verify Out-of-Service State", "Test_Sce_Description": "Check if the SA Tool goes into 'Out-of-Service' state when it is unable to accept a Farecard for any kind of functionality. Also, verify if it requires maintenance to restore out-of-order components."}, {"Function_Flow_Name": "Training Mode", "Sub_Flow_Name": "Power on / off / reboot SA Tool", "Use_Case_Name": "Training Mode", "Test_Scnario": "Verify Operator Sign-off in Out-of-Service State", "Test_Sce_Description": "Check if the SA Tool application does not close the operator\u2019s shift unless the operator has requested to sign-off when the device goes into out-of-service state."}, {"Function_Flow_Name": "Training Mode", "Sub_Flow_Name": "Power on / off / reboot SA Tool", "Use_Case_Name": "Training Mode", "Test_Scnario": "Verify Standby State", "Test_Sce_Description": "Check if the SA Tool switches into a Standby state after remaining inactive for a configurable period of time and if the screen turns off in this state. Also, verify if the operator can press the physical power button to switch the SA Tool into standby state directly."}, {"Function_Flow_Name": "Training Mode", "Sub_Flow_Name": "Power on / off / reboot SA Tool", "Use_Case_Name": "Training Mode", "Test_Scnario": "Verify Peripheral Disconnection in Standby State", "Test_Sce_Description": "Check if the SA tool disconnects from all the peripherals i.e. the card reader, PIN pad and the printer to conserve battery life when it is in the standby mode."}, {"Function_Flow_Name": "Training Mode", "Sub_Flow_Name": "Power on / off / reboot SA Tool", "Use_Case_Name": "Training Mode", "Test_Scnario": "Verify SA Tool Application Running in Background", "Test_Sce_Description": "Check if the SA Tool device allows the operator to use authorized third-party applications as needed and if the operator can launch multiple applications on the android device and move between them. Also, verify if the SA Tool PDS application goes into Standby State when it is running but is not in the foreground."}, {"Function_Flow_Name": "Training Mode", "Sub_Flow_Name": "Power on / off / reboot SA Tool", "Use_Case_Name": "Training Mode", "Test_Scnario": "Verify Revenue Mode", "Test_Sce_Description": "Check if the operator can select the Revenue Mode upon logon and if the operator can perform inspection, fare payments, sales, refunds/reversals, farecard queries, and other customer service gestures in this mode. Also, verify if the SA tool only has access to the EPT in the revenue mode and accepts the credit and debit payments."}, {"Function_Flow_Name": "Training Mode", "Sub_Flow_Name": "Power on / off / reboot SA Tool", "Use_Case_Name": "Training Mode", "Test_Scnario": "Verify Training Mode", "Test_Sce_Description": "Check if the operator can select the Training Mode upon logon and if the operator can mimic all functionality available within Sales Mode without accepting payment, and only sending non-revenue transactions in this mode. Also, verify if only non-revenue Farecard is accepted in Training Mode and if payment by credit /debit is not enabled."}, {"Function_Flow_Name": "Training Mode", "Sub_Flow_Name": "Power on / off / reboot SA Tool", "Use_Case_Name": "Training Mode", "Test_Scnario": "Verify Operator Overrides Selects/Overrides Current Route Parameters", "Test_Sce_Description": "Check if the operator can select the Additional Options menu on the SA Tool, select Route Parameters, update current location, and if the Route Parameters are updated to the operator selected location. Also, verify if the Route Parameters are automatically updated to the next station upon arrival at the next station."}, {"Function_Flow_Name": "Training Mode", "Sub_Flow_Name": "Power on / off / reboot SA Tool", "Use_Case_Name": "Training Mode", "Test_Scnario": "Verify Operator Switches Device Mode for Current SP", "Test_Sce_Description": "Check if the operator can select SP (DISTANCE BASED TRANSIT/GO) on the Login screen, enter their login credentials and select \u201clogin\u201d, and if the SA Tool application validates credentials and operator is successfully logged in. Also, verify if the features the operator will have access to only depend on the TA selected on the Login screen."}, {"Function_Flow_Name": "Training Mode", "Sub_Flow_Name": "Power on / off / reboot SA Tool", "Use_Case_Name": "Training Mode", "Test_Scnario": "Verify SP Switching is disabled", "Test_Sce_Description": "Check if the application enables / disables the SP switching functionality only if no operator is logged in and if the operator is displayed a toast message notification notifying SP switching is disabled when they tap on the SP icon on login screen to switch between SPs."}, {"Function_Flow_Name": "Training Mode", "Sub_Flow_Name": "Power on", "Use_Case_Name": "Configurable Functionality", "Test_Scnario": "Power On SA Tool", "Test_Sce_Description": "Verify that the SA Tool powers on correctly when the power button is pressed and held. The device should boot up, perform an initial self-diagnostic without finding errors or failures, and require the operator to enter the OS Lock screen passcode. After a valid passcode is entered, the device should launch the Android home screen of the SA Tool device."}, {"Function_Flow_Name": "Training Mode", "Sub_Flow_Name": "Power on", "Use_Case_Name": "Configurable Functionality", "Test_Scnario": "Access Revenue Mode", "Test_Sce_Description": "Verify that the SA Tool can access the revenue mode correctly. The tool should be able to switch between revenue mode and other modes without any issues."}, {"Function_Flow_Name": "Training Mode", "Sub_Flow_Name": "Power on", "Use_Case_Name": "Configurable Functionality", "Test_Scnario": "Core Functionality - Sales", "Test_Sce_Description": "Verify that the SA Tool can perform sales transactions correctly. The tool should be able to process sales transactions, update the sales data, and provide a receipt for the transaction."}, {"Function_Flow_Name": "Training Mode", "Sub_Flow_Name": "Power on", "Use_Case_Name": "Configurable Functionality", "Test_Scnario": "Core Functionality - Fare Payment", "Test_Sce_Description": "Verify that the SA Tool can process fare payments correctly. The tool should be able to accept fare payments, update the fare data, and provide a receipt for the payment."}, {"Function_Flow_Name": "Training Mode", "Sub_Flow_Name": "Power on", "Use_Case_Name": "Configurable Functionality", "Test_Scnario": "Core Functionality - Inspection", "Test_Sce_Description": "Verify that the SA Tool can perform inspections correctly. The tool should be able to inspect fare cards, update the inspection data, and provide a receipt for the inspection."}, {"Function_Flow_Name": "Training Mode", "Sub_Flow_Name": "Power on", "Use_Case_Name": "Configurable Functionality", "Test_Scnario": "SA Tool Remote Access", "Test_Sce_Description": "Verify that the SA Tool can be accessed remotely. The tool should be able to connect to a remote server, perform operations, and update data remotely."}, {"Function_Flow_Name": "Training Mode", "Sub_Flow_Name": "Power on", "Use_Case_Name": "Configurable Functionality", "Test_Scnario": "Unblock Farecard", "Test_Sce_Description": "Verify that the SA Tool can unblock a blocked fare card. The tool should be able to unblock the card, update the card status, and provide a receipt for the unblocking operation."}, {"Function_Flow_Name": "Training Mode", "Sub_Flow_Name": "Power on", "Use_Case_Name": "Configurable Functionality", "Test_Scnario": "Modify Card Concession", "Test_Sce_Description": "Verify that the SA Tool can modify the concession on a fare card. The tool should be able to modify the concession, update the card data, and provide a receipt for the modification operation."}, {"Function_Flow_Name": "Training Mode", "Sub_Flow_Name": "Power on", "Use_Case_Name": "Configurable Functionality", "Test_Scnario": "Device Parameter Tool Configurations", "Test_Sce_Description": "Verify that the SA Tool can be configured correctly using the Device Parameter Tool. The tool should be able to accept configuration changes, apply the changes, and operate correctly with the new configurations."}, {"Function_Flow_Name": "Training Mode", "Sub_Flow_Name": "Power on", "Use_Case_Name": "Configurable Functionality", "Test_Scnario": "User Functional Descriptions", "Test_Sce_Description": "Verify that the SA Tool operates correctly according to the User Functional Descriptions. The tool should be able to perform the described functions, update the relevant data, and provide a receipt for the operations."}, {"Function_Flow_Name": "Training Mode", "Sub_Flow_Name": "Power on", "Use_Case_Name": "Device Parameter Tool Configurations", "Test_Scnario": "Power On SA Tool", "Test_Sce_Description": "Verify that the SA Tool powers on correctly when the power button is pressed and held. Check that the device boot ups and displays the manufacturer's default start-up screen. Ensure that the device performs an initial self-diagnostic and does not find errors or failures. Confirm that the device requires the operator to enter the OS Lock screen passcode at the device lock screen. After a valid passcode is entered, the device should launch the Android home screen of the SA Tool device."}, {"Function_Flow_Name": "Training Mode", "Sub_Flow_Name": "Power on", "Use_Case_Name": "Device Parameter Tool Configurations", "Test_Scnario": "SA Tool Out-of-Service State", "Test_Sce_Description": "Verify that when the SA Tool is in 'Out-of-Service' state, it does not accept a Farecard for any kind of functionality and may require maintenance to restore out-of-order components. If an operator is signed-in and the device goes into out-of-service state, the SA Tool application should not close the operator\u2019s shift unless the operator has requested to sign-off."}, {"Function_Flow_Name": "Training Mode", "Sub_Flow_Name": "Power on", "Use_Case_Name": "Device Parameter Tool Configurations", "Test_Scnario": "SA Tool Standby State", "Test_Sce_Description": "Verify that the SA Tool can enter a Standby state where the screen turns off after a period of inactivity or when the power button is pressed. In this state, the SA Tool should disconnect from all peripherals to conserve battery life. An operator should be able to press the power button and sign-in to the device lock screen to bring the device back into In-Service state."}, {"Function_Flow_Name": "Training Mode", "Sub_Flow_Name": "Power on", "Use_Case_Name": "Device Parameter Tool Configurations", "Test_Scnario": "SA Tool Revenue Mode", "Test_Sce_Description": "Verify that in Revenue Mode, the SA Tool operator can interact with customers, perform inspection, fare payments, sales, refunds/reversals, farecard queries, and other customer service gestures. The SA Tool should only have access to the EPT in the revenue mode and should accept credit and debit payments."}, {"Function_Flow_Name": "Training Mode", "Sub_Flow_Name": "Power on", "Use_Case_Name": "Device Parameter Tool Configurations", "Test_Scnario": "SA Tool Training Mode", "Test_Sce_Description": "Verify that in Training Mode, the SA Tool operator can mimic all functionality available within Sales Mode without accepting payment, and only sending non-revenue transactions. Only non-revenue Farecard should be accepted in Training Mode. Payment by credit/debit should not be enabled. All paper tickets printed from the SA Tool should indicate that they were printed while in training mode and should not be a form of valid proof of payment."}, {"Function_Flow_Name": "Training Mode", "Sub_Flow_Name": "Power on", "Use_Case_Name": "Device Parameter Tool Configurations", "Test_Scnario": "SA Tool Configurable Functionality", "Test_Sce_Description": "Verify that the SA Tool provides configurable functionality for different user roles including SA Tool Operators, 3rd Party SA Tool Operators, Distance based Transitrvisors, Maintenance, and Training. Check that each user role has access to the appropriate functionalities."}, {"Function_Flow_Name": "Training Mode", "Sub_Flow_Name": "Power on", "Use_Case_Name": "Device Parameter Tool Configurations", "Test_Scnario": "SA Tool Core Functionality", "Test_Sce_Description": "Verify that the SA Tool provides core functionalities including Sales, Fare Payment, Inspection, Remote Access, Unblock Farecard, and Modify Card Concession. Check that each functionality works as expected and provides the correct output."}, {"Function_Flow_Name": "Training Mode", "Sub_Flow_Name": "Power on", "Use_Case_Name": "Device Parameter Tool Configurations", "Test_Scnario": "SA Tool Device Parameter Tool Configurations", "Test_Sce_Description": "Verify that the SA Tool configurations introduced under the Open Payments release in the Device Parameter Tool are correctly implemented and function as expected. Check that the configurations can be modified and saved correctly."},{"Function_Flow_Name": "Passcode", "Sub_Flow_Name": "Enter lock screen passcode", "Use_Case_Name": "The application is already launched and is running in the background", "Test_Scnario": "Launching the SA Tool Application", "Test_Sce_Description": "Verify that the authorized operator is able to launch the SA Tool Application from the home screen of the device. The application should perform continuous diagnostic checks for network/cellular connection, battery level, and available storage space. Upon successful launch, the sign-in screen should be displayed."}, {"Function_Flow_Name": "Passcode", "Sub_Flow_Name": "Enter lock screen passcode", "Use_Case_Name": "The application is already launched and is running in the background", "Test_Scnario": "Enter Lock Screen Passcode", "Test_Sce_Description": "Verify that the operator is able to enter a valid passcode on the lock screen. The device should recognize the correct passcode and display the home screen of the device. The home screen should provide access to the PDS SA Tool application as well as the other authorized third-party applications."}, {"Function_Flow_Name": "Passcode", "Sub_Flow_Name": "Enter lock screen passcode", "Use_Case_Name": "The application is already launched and is running in the background", "Test_Scnario": "Incorrect Passcode Entry", "Test_Sce_Description": "Verify that when the operator enters an invalid passcode, the device informs the operator that the passcode is incorrect. The device should start/increment the counter for device lock screen sign-in attempts. This counter should be maintained through device reboot and reset whenever a correct passcode is entered."}, {"Function_Flow_Name": "Passcode", "Sub_Flow_Name": "Enter lock screen passcode", "Use_Case_Name": "The application is already launched and is running in the background", "Test_Scnario": "User Sign-on Suspension", "Test_Sce_Description": "Verify that when the operator enters an invalid passcode at the 5th, 10th, etc. attempt, the device informs the operator that the passcode is incorrect and a re-try is permitted after 30 seconds. During the 30-second countdown, the user should not be allowed to attempt sign on."}, {"Function_Flow_Name": "Passcode", "Sub_Flow_Name": "Enter lock screen passcode", "Use_Case_Name": "The application is already launched and is running in the background", "Test_Scnario": "Switching between Applications", "Test_Sce_Description": "Verify that the operator is able to switch between the SA Tool Application and the whitelisted third-party applications on the device. The operator should be able to tap on the home button to navigate to the list of applications, swipe up or down to find other apps, or use the search bar to find an app."}, {"Function_Flow_Name": "Passcode", "Sub_Flow_Name": "Enter lock screen passcode", "Use_Case_Name": "The application is already launched and is running in the background", "Test_Scnario": "Launching an Already Running Application", "Test_Sce_Description": "Verify that if the application that the operator intends to launch is already running in the device background, the operator can tap on the App Overview button on the bottom navigation bar, swipe to navigate through the list of open applications, and press on the desired application to launch it."}, {"Function_Flow_Name": "Passcode", "Sub_Flow_Name": "Enter lock screen passcode", "Use_Case_Name": "The application is already launched and is running in the background", "Test_Scnario": "Continuous Self-Diagnostic Check Failure", "Test_Sce_Description": "Verify that if the SA Tool performs the continuous diagnostic checks and determines that the device is unable to connect to a network, this is indicated on the SA Tool. The SA Tool should be able to operate in offline mode in this case."}, {"Function_Flow_Name": "Passcode", "Sub_Flow_Name": "Enter lock screen passcode", "Use_Case_Name": "The application is already launched and is running in the background", "Test_Scnario": "Initial Self-Diagnostic Check Failure", "Test_Sce_Description": "Verify that if the SA Tool performs initial self-diagnostic checks and finds critical failures, the SA Tool goes to error state."}, {"Function_Flow_Name": "Passcode", "Sub_Flow_Name": "Enter lock screen passcode", "Use_Case_Name": "The application is already launched and is running in the background", "Test_Scnario": "Continuous Self-Diagnostic Check for Storage, Battery or Secure Element Failure", "Test_Sce_Description": "Verify that if the SA Tool application performs the continuous self-diagnostics for storage, battery or secure element and finds errors or failures in any of these elements, the SA Tool goes to out-of-service state and a critical event is sent to SOTI Mobicontrol and CSM."}, {"Function_Flow_Name": "Passcode", "Sub_Flow_Name": "Enter lock screen passcode", "Use_Case_Name": "Enter Lock Screen Passcode", "Test_Scnario": "Valid Passcode Entry", "Test_Sce_Description": "This scenario tests the functionality of entering a valid passcode on the lock screen. The operator enters the correct passcode and the device should recognize it and display the home screen."}, {"Function_Flow_Name": "Passcode", "Sub_Flow_Name": "Enter lock screen passcode", "Use_Case_Name": "Enter Lock Screen Passcode", "Test_Scnario": "Invalid Passcode Entry", "Test_Sce_Description": "This scenario tests the functionality when an invalid passcode is entered. The operator enters an incorrect passcode and the device should inform the operator that the passcode is incorrect and increment the counter for device lock screen sign-in attempts."}, {"Function_Flow_Name": "Passcode", "Sub_Flow_Name": "Enter lock screen passcode", "Use_Case_Name": "Enter Lock Screen Passcode", "Test_Scnario": "Counter Functionality at 5th and 10th Failed Attempt", "Test_Sce_Description": "This scenario tests the functionality of the counter at the 5th and 10th failed sign-in attempt. The operator enters an invalid passcode at the 5th and 10th attempt and the device should inform the operator that the passcode is incorrect and a re-try is permitted after 30 seconds."}, {"Function_Flow_Name": "Passcode", "Sub_Flow_Name": "Enter lock screen passcode", "Use_Case_Name": "Enter Lock Screen Passcode", "Test_Scnario": "Counter Functionality after 10th Failed Attempt", "Test_Sce_Description": "This scenario tests the functionality of the counter after the 10th failed sign-in attempt. The operator enters an invalid passcode after the 10th attempt and the device should inform the operator that the passcode is incorrect and a re-try is permitted after 30 seconds."}, {"Function_Flow_Name": "Passcode", "Sub_Flow_Name": "Enter lock screen passcode", "Use_Case_Name": "Enter Lock Screen Passcode", "Test_Scnario": "Same New and Current Passcode", "Test_Sce_Description": "This scenario tests the functionality when the new passcode is the same as the current passcode. The SA Tool application should detect this and notify the operator of the error."}, {"Function_Flow_Name": "Passcode", "Sub_Flow_Name": "Enter lock screen passcode", "Use_Case_Name": "Enter Lock Screen Passcode", "Test_Scnario": "New Passcode Length", "Test_Sce_Description": "This scenario tests the functionality of the passcode length. The SA Tool application should not enable the submit button until the passcode entered is the correct length."}, {"Function_Flow_Name": "Passcode", "Sub_Flow_Name": "Enter lock screen passcode", "Use_Case_Name": "Enter Lock Screen Passcode", "Test_Scnario": "Maximum Number of Change Attempts", "Test_Sce_Description": "This scenario tests the functionality when the maximum number of change attempts is reached. The SA Tool application should lock the operator user account and redirect the user to the SA Tool sign-in screen, informing the operator that the user account is locked."}, {"Function_Flow_Name": "Passcode", "Sub_Flow_Name": "Enter lock screen passcode", "Use_Case_Name": "Enter Lock Screen Passcode", "Test_Scnario": "Account Validation after Passcode Reset", "Test_Sce_Description": "This scenario tests the functionality of account validation after the passcode has been reset. The SA Tool application should perform the account validation check and if it fails due to loss of connectivity, it should redirect the user to the SA Tool home screen and inform the operator that the passcode has been successfully reset."}, {"Function_Flow_Name": "Passcode", "Sub_Flow_Name": "Enter lock screen passcode", "Use_Case_Name": "Enter lock screen passcode: incorrect passcode entered", "Test_Scnario": "Validating correct passcode entry", "Test_Sce_Description": "This scenario will test the functionality of the system when the operator enters the correct passcode. The system should recognize the correct passcode and display the home screen of the device."}, {"Function_Flow_Name": "Passcode", "Sub_Flow_Name": "Enter lock screen passcode", "Use_Case_Name": "Enter lock screen passcode: incorrect passcode entered", "Test_Scnario": "Validating incorrect passcode entry", "Test_Sce_Description": "This scenario will test the system's response when an incorrect passcode is entered. The system should inform the operator that the passcode is incorrect and increment the counter for device lock screen sign-in attempts."}, {"Function_Flow_Name": "Passcode", "Sub_Flow_Name": "Enter lock screen passcode", "Use_Case_Name": "Enter lock screen passcode: incorrect passcode entered", "Test_Scnario": "Testing passcode entry after 4th, 9th failed attempts", "Test_Sce_Description": "This scenario will test the system's response when an incorrect passcode is entered at the 4th, 9th attempts. The system should inform the operator that the passcode is incorrect and a re-try is permitted after 30 seconds."}, {"Function_Flow_Name": "Passcode", "Sub_Flow_Name": "Enter lock screen passcode", "Use_Case_Name": "Enter lock screen passcode: incorrect passcode entered", "Test_Scnario": "Testing passcode entry after 10th failed attempt", "Test_Sce_Description": "This scenario will test the system's response when an incorrect passcode is entered at the 10th attempt. The system should inform the operator that the passcode is incorrect and a re-try is permitted after 30 seconds."}, {"Function_Flow_Name": "Passcode", "Sub_Flow_Name": "Enter lock screen passcode", "Use_Case_Name": "Enter lock screen passcode: incorrect passcode entered", "Test_Scnario": "Testing first-time user sign-in", "Test_Sce_Description": "This scenario will test the procedures for authorized operators to sign-in to the SA Tool application as a first-time user. The operators will enter their operator badge ID and temporary passcode as login credentials for the SA Tool application."}, {"Function_Flow_Name": "Passcode", "Sub_Flow_Name": "Enter lock screen passcode", "Use_Case_Name": "Enter lock screen passcode: incorrect passcode entered", "Test_Scnario": "Testing online authentication", "Test_Sce_Description": "This scenario will test the online authentication process where the SA Tool communicates with the User management service to authenticate user login."}, {"Function_Flow_Name": "Passcode", "Sub_Flow_Name": "Enter lock screen passcode", "Use_Case_Name": "Enter lock screen passcode: incorrect passcode entered", "Test_Scnario": "Testing local authentication", "Test_Sce_Description": "This scenario will test the local authentication process where no connectivity to the user management service is required. Local authentication is used for users re-logging into the same SA Tool and whose credentials have not been cleaned based on the configurable credential caching duration."}, {"Function_Flow_Name": "Passcode", "Sub_Flow_Name": "Enter lock screen passcode", "Use_Case_Name": "Enter lock screen passcode: incorrect passcode entered", "Test_Scnario": "Testing security setup for first-time users", "Test_Sce_Description": "This scenario will test the security setup process for first-time users. The operator will need to set up security questions and a new passcode."}, {"Function_Flow_Name": "Passcode", "Sub_Flow_Name": "Enter lock screen passcode", "Use_Case_Name": "Enter lock screen passcode: incorrect passcode entered", "Test_Scnario": "Testing passcode change functionality", "Test_Sce_Description": "This scenario will test the functionality of the system when the operator changes their passcode. The system should validate that the new passcode meets passcode length criteria and does not match the temporary passcode."}, {"Function_Flow_Name": "Passcode", "Sub_Flow_Name": "Enter lock screen passcode", "Use_Case_Name": "Enter lock screen passcode: incorrect passcode entered", "Test_Scnario": "Testing shift parameters selection", "Test_Sce_Description": "This scenario will test the functionality of the system when the operator selects their parameters for the shift. The system should display a confirmation screen to the operator and start the operator\u2019s shift."}, {"Function_Flow_Name": "Passcode", "Sub_Flow_Name": "Enter lock screen passcode", "Use_Case_Name": "Enter Lock Screen Passcode\u2014user sign-on is suspended for 30 seconds at every 5th failed sign on attempt (5th, 10th)", "Test_Scnario": "Verify correct passcode entry", "Test_Sce_Description": "Ensure that the system correctly recognizes and accepts a valid passcode entered by the operator. The device should unlock and display the home screen."}, {"Function_Flow_Name": "Passcode", "Sub_Flow_Name": "Enter lock screen passcode", "Use_Case_Name": "Enter Lock Screen Passcode\u2014user sign-on is suspended for 30 seconds at every 5th failed sign on attempt (5th, 10th)", "Test_Scnario": "Verify incorrect passcode entry", "Test_Sce_Description": "Ensure that the system correctly recognizes an invalid passcode entered by the operator. The device should not unlock and should inform the operator that the passcode is incorrect."}, {"Function_Flow_Name": "Passcode", "Sub_Flow_Name": "Enter lock screen passcode", "Use_Case_Name": "Enter Lock Screen Passcode\u2014user sign-on is suspended for 30 seconds at every 5th failed sign on attempt (5th, 10th)", "Test_Scnario": "Verify passcode entry counter", "Test_Sce_Description": "Ensure that the system correctly increments the counter for device lock screen sign-in attempts after each incorrect passcode entry. The counter should be maintained through device reboot and reset whenever a correct passcode is entered."}, {"Function_Flow_Name": "Passcode", "Sub_Flow_Name": "Enter lock screen passcode", "Use_Case_Name": "Enter Lock Screen Passcode\u2014user sign-on is suspended for 30 seconds at every 5th failed sign on attempt (5th, 10th)", "Test_Scnario": "Verify sign-on suspension at 5th failed attempt", "Test_Sce_Description": "Ensure that the system correctly suspends the user sign-on for 30 seconds at every 5th failed sign-in attempt (5th, 10th). During the 30-second countdown, the operator should not be allowed to attempt sign on."}, {"Function_Flow_Name": "Passcode", "Sub_Flow_Name": "Enter lock screen passcode", "Use_Case_Name": "Enter Lock Screen Passcode\u2014user sign-on is suspended for 30 seconds at every 5th failed sign on attempt (5th, 10th)", "Test_Scnario": "Verify sign-on suspension at 10th failed attempt", "Test_Sce_Description": "Ensure that the system correctly suspends the user sign-on for 30 seconds at every failed attempt after the 10th try. During the 30-second countdown, the operator should not be allowed to attempt sign on."}, {"Function_Flow_Name": "Passcode", "Sub_Flow_Name": "Enter lock screen passcode", "Use_Case_Name": "Enter Lock Screen Passcode\u2014user sign-on is suspended for 30 seconds at every 5th failed sign on attempt (5th, 10th)", "Test_Scnario": "Verify system response after sign-on suspension", "Test_Sce_Description": "Ensure that the system allows the operator to try again after the 30-second countdown. The operator should be able to enter the passcode and attempt sign on."}, {"Function_Flow_Name": "Passcode", "Sub_Flow_Name": "Enter lock screen passcode", "Use_Case_Name": "Enter Lock Screen Passcode\u2014user sign-on is suspended for 30 seconds at every 5th failed sign on attempt (5th, 10th)", "Test_Scnario": "Verify system performance during sign-on suspension", "Test_Sce_Description": "Ensure that the system performance is not adversely affected during the 30-second countdown. The system should continue to function normally and not crash or freeze."}, {"Function_Flow_Name": "Passcode", "Sub_Flow_Name": "Enter lock screen passcode", "Use_Case_Name": "Enter Lock Screen Passcode\u2014user sign-on is suspended for 30 seconds at every 5th failed sign on attempt (5th, 10th)", "Test_Scnario": "Verify system security during sign-on suspension", "Test_Sce_Description": "Ensure that the system security is not compromised during the 30-second countdown. Unauthorized users should not be able to bypass the lock screen or gain access to the device."}, {"Function_Flow_Name": "Passcode", "Sub_Flow_Name": "Enter lock screen passcode", "Use_Case_Name": "Enter Lock Screen Passcode\u2014user sign-on is suspended for 30 seconds at every failed attempt after the 10th try", "Test_Scnario": "Verify the correct passcode entry", "Test_Sce_Description": "Ensure that the system allows access when the correct passcode is entered. The system should display the home screen of the device after the correct passcode is entered."}, {"Function_Flow_Name": "Passcode", "Sub_Flow_Name": "Enter lock screen passcode", "Use_Case_Name": "Enter Lock Screen Passcode\u2014user sign-on is suspended for 30 seconds at every failed attempt after the 10th try", "Test_Scnario": "Verify the incorrect passcode entry", "Test_Sce_Description": "Ensure that the system denies access when an incorrect passcode is entered. The system should inform the operator that the passcode is incorrect."}, {"Function_Flow_Name": "Passcode", "Sub_Flow_Name": "Enter lock screen passcode", "Use_Case_Name": "Enter Lock Screen Passcode\u2014user sign-on is suspended for 30 seconds at every failed attempt after the 10th try", "Test_Scnario": "Verify the counter for device lock screen sign-in attempts", "Test_Sce_Description": "Ensure that the system starts/increments the counter for device lock screen sign-in attempts whenever an incorrect passcode is entered. This counter should be maintained through device reboot and reset whenever a correct passcode is entered."}, {"Function_Flow_Name": "Passcode", "Sub_Flow_Name": "Enter lock screen passcode", "Use_Case_Name": "Enter Lock Screen Passcode\u2014user sign-on is suspended for 30 seconds at every failed attempt after the 10th try", "Test_Scnario": "Verify the sign-on suspension after 5th and 10th failed attempts", "Test_Sce_Description": "Ensure that the system suspends the user sign-on for 30 seconds after every 5th failed sign-in attempt (5th, 10th). During the 30-second countdown, the user should not be allowed to attempt sign on."}, {"Function_Flow_Name": "Passcode", "Sub_Flow_Name": "Enter lock screen passcode", "Use_Case_Name": "Enter Lock Screen Passcode\u2014user sign-on is suspended for 30 seconds at every failed attempt after the 10th try", "Test_Scnario": "Verify the sign-on suspension after every failed attempt after the 10th try", "Test_Sce_Description": "Ensure that the system suspends the user sign-on for 30 seconds at every failed attempt after the 10th try. During the 30-second countdown, the user should not be allowed to attempt sign on."}, {"Function_Flow_Name": "Passcode", "Sub_Flow_Name": "Enter lock screen passcode", "Use_Case_Name": "Enter Lock Screen Passcode\u2014user sign-on is suspended for 30 seconds at every failed attempt after the 10th try", "Test_Scnario": "Verify the system response after the suspension period", "Test_Sce_Description": "Ensure that the system allows the operator to try again after the 30-second suspension period."}, {"Function_Flow_Name": "Passcode", "Sub_Flow_Name": "Enter lock screen passcode", "Use_Case_Name": "Enter Lock Screen Passcode\u2014user sign-on is suspended for 30 seconds at every failed attempt after the 10th try", "Test_Scnario": "Verify the system performance during the suspension period", "Test_Sce_Description": "Ensure that the system performance is not affected during the 30-second suspension period. The system should function normally and not crash or freeze."}, {"Function_Flow_Name": "Passcode", "Sub_Flow_Name": "Enter lock screen passcode", "Use_Case_Name": "Enter Lock Screen Passcode\u2014user sign-on is suspended for 30 seconds at every failed attempt after the 10th try", "Test_Scnario": "Verify the security of the system during the suspension period", "Test_Sce_Description": "Ensure that the system security is not compromised during the 30-second suspension period. The system should not allow any unauthorized access."}, {"Function_Flow_Name": "Passcode", "Sub_Flow_Name": "Enter lock screen passcode", "Use_Case_Name": "Enter Lock Screen Passcode\u2014user sign-on is suspended for 30 seconds at every failed attempt after the 10th try", "Test_Scnario": "Verify the system response to multiple failed attempts", "Test_Sce_Description": "Ensure that the system handles multiple failed attempts correctly. The system should not crash or freeze and should display the correct error messages."}, {"Function_Flow_Name": "Passcode", "Sub_Flow_Name": "Enter lock screen passcode", "Use_Case_Name": "Enter Lock Screen Passcode\u2014user sign-on is suspended for 30 seconds at every failed attempt after the 10th try", "Test_Scnario": "Verify the system response to a correct passcode entry after multiple failed attempts", "Test_Sce_Description": "Ensure that the system allows access when a correct passcode is entered after multiple failed attempts. The system should display the home screen of the device."}, {"Function_Flow_Name": "Passcode", "Sub_Flow_Name": "Enter lock screen passcode", "Use_Case_Name": "Sign-In to SA Tool application (First-Time User)", "Test_Scnario": "Launching the SA Tool Application", "Test_Sce_Description": "Verify that an authorized operator can successfully launch the SA Tool Application from the home screen of the SA Tool device. The application should perform continuous diagnostic checks for network/cellular connection, battery level, and available storage space. Upon successful launch, the sign-in screen should be displayed."}, {"Function_Flow_Name": "Passcode", "Sub_Flow_Name": "Enter lock screen passcode", "Use_Case_Name": "Sign-In to SA Tool application (First-Time User)", "Test_Scnario": "Network Connection Unavailable", "Test_Sce_Description": "Verify that the SA Tool Application can operate in offline mode when the device is unable to connect to a network. The device should indicate the lack of network connection and the operator should still be able to proceed to step 3 as stated in the Main Use Case."}, {"Function_Flow_Name": "Passcode", "Sub_Flow_Name": "Enter lock screen passcode", "Use_Case_Name": "Sign-In to SA Tool application (First-Time User)", "Test_Scnario": "Initial Self-Diagnostic Check Unsuccessful", "Test_Sce_Description": "Verify that the SA Tool Application goes to error state when initial self-diagnostic checks find critical failures. The operator should still be able to proceed to step 1 as stated in the Main Use Case."}, {"Function_Flow_Name": "Passcode", "Sub_Flow_Name": "Enter lock screen passcode", "Use_Case_Name": "Sign-In to SA Tool application (First-Time User)", "Test_Scnario": "Continuous Self-Diagnostic Check Unsuccessful", "Test_Sce_Description": "Verify that the SA Tool Application goes to out-of-service state when continuous self-diagnostic checks for storage, battery or secure element find errors or failures. A critical event should be sent to SOTI Mobicontrol and CSM."}, {"Function_Flow_Name": "Passcode", "Sub_Flow_Name": "Enter lock screen passcode", "Use_Case_Name": "Sign-In to SA Tool application (First-Time User)", "Test_Scnario": "Switching between the PDS SA Tool application and third-party applications", "Test_Sce_Description": "Verify that an authorized operator can successfully switch between the SA Tool Application and the whitelisted third-party applications on the device. The operator should be able to navigate to the list of whitelisted third-party applications by tapping on the home button present on the android navigation bar."}, {"Function_Flow_Name": "Passcode", "Sub_Flow_Name": "Enter lock screen passcode", "Use_Case_Name": "Sign-In to SA Tool application (First-Time User)", "Test_Scnario": "Application Already Launched and Running in the Background", "Test_Sce_Description": "Verify that the operator can successfully launch an application that is already running in the device background. The operator should be able to navigate through the list of open applications until they find the desired application and press on it to launch it."}, {"Function_Flow_Name": "Passcode", "Sub_Flow_Name": "Enter lock screen passcode", "Use_Case_Name": "Sign-In to SA Tool application (First-Time User)", "Test_Scnario": "Sign-In to SA Tool application (First-Time User)", "Test_Sce_Description": "Verify that a first-time user can successfully sign-in to the SA Tool application using their operator badge ID and temporary passcode. Upon successful sign-in, the user should be required to set up security questions and a new passcode."}, {"Function_Flow_Name": "Passcode", "Sub_Flow_Name": "Enter lock screen passcode", "Use_Case_Name": "Sign-In to SA Tool application (First-Time User)", "Test_Scnario": "Operator Enters Incorrect Username or Passcode", "Test_Sce_Description": "Verify that the device informs the operator that the passcode is incorrect for the counted number of times, and a re-try is permitted after 30 seconds. During the 30-second countdown, the user should not be allowed to attempt sign on. After 30 seconds, the operator can try again."}, {"Function_Flow_Name": "Passcode", "Sub_Flow_Name": "Enter lock screen passcode", "Use_Case_Name": "Operator Enters Incorrect Username or Passcode", "Test_Scnario": "First Time User Sign-In", "Test_Sce_Description": "Verify that a first-time user can successfully sign-in to the SA Tool application using their operator badge ID and temporary passcode. The user should be prompted to change their temporary passcode upon initial log-in."}, {"Function_Flow_Name": "Passcode", "Sub_Flow_Name": "Enter lock screen passcode", "Use_Case_Name": "Operator Enters Incorrect Username or Passcode", "Test_Scnario": "Online Authentication", "Test_Sce_Description": "Verify that the SA Tool communicates with the User management service to authenticate user login. This should be required when the device is online for first time users and after the local cache is cleaned based on a configurable credential caching duration."}, {"Function_Flow_Name": "Passcode", "Sub_Flow_Name": "Enter lock screen passcode", "Use_Case_Name": "Operator Enters Incorrect Username or Passcode", "Test_Scnario": "Local Authentication", "Test_Sce_Description": "Verify that local authentication is used for users re-logging into the same SA Tool and whose credentials have not been cleaned based on the configurable credential caching duration. The local credential cache should only store the credentials of users who have logged in to the specific device previously."}, {"Function_Flow_Name": "Passcode", "Sub_Flow_Name": "Enter lock screen passcode", "Use_Case_Name": "Operator Enters Incorrect Username or Passcode", "Test_Scnario": "Security Setup", "Test_Sce_Description": "Verify that the SA Tool application notifies the operator that they will need to set up security questions and a new passcode. The new passcode must be a 4-digit number."}, {"Function_Flow_Name": "Passcode", "Sub_Flow_Name": "Enter lock screen passcode", "Use_Case_Name": "Operator Enters Incorrect Username or Passcode", "Test_Scnario": "Passcode Validation", "Test_Sce_Description": "Verify that the SA Tool application validates that the new passcode meets passcode length criteria by connecting to the user management service. If the new passcode length meets the defined criteria, the SA Tool application should indicate to the operator that the passcode was successfully changed."}, {"Function_Flow_Name": "Passcode", "Sub_Flow_Name": "Enter lock screen passcode", "Use_Case_Name": "Operator Enters Incorrect Username or Passcode", "Test_Scnario": "Incorrect Username or Passcode", "Test_Sce_Description": "Verify that the SA Tool application records a cumulative number of unsuccessful sign on attempts for a single valid operator badge ID on a SA Tool. When the number of unsuccessful sign-in attempts reaches the maximum number of sign-on attempts, the SA Tool application should deny access to that operator until the operator badge ID is unlocked by the CLIENT Operations user or automatically unlocked after a configurable amount of time."}, {"Function_Flow_Name": "Passcode", "Sub_Flow_Name": "Enter lock screen passcode", "Use_Case_Name": "Operator Enters Incorrect Username or Passcode", "Test_Scnario": "Network Unavailability", "Test_Sce_Description": "Verify that the SA Tool application displays a message to the operator requesting them to sign in when network is available, if the network is unavailable during the first time sign-in using a temporary passcode."}, {"Function_Flow_Name": "Passcode", "Sub_Flow_Name": "Enter lock screen passcode", "Use_Case_Name": "Operator Enters Incorrect Username or Passcode", "Test_Scnario": "New Passcode is Same as Temporary Passcode", "Test_Sce_Description": "Verify that the SA Tool application detects that the new passcode is the same as the temporary passcode in the Subsystem and informs the user of the error and clears the new passcode fields."}, {"Function_Flow_Name": "Passcode", "Sub_Flow_Name": "Enter lock screen passcode", "Use_Case_Name": "Operator Enters Incorrect Username or Passcode", "Test_Scnario": "New Passcode Length Does Not Meet Pre-Defined Criteria", "Test_Sce_Description": "Verify that the SA Tool will not enable the submit button until the passcode entered is the correct length."}, {"Function_Flow_Name": "Passcode", "Sub_Flow_Name": "Change passcode", "Use_Case_Name": "Change Passcode", "Test_Scnario": "Change Passcode - Valid Inputs", "Test_Sce_Description": "Verify that the operator can successfully change their passcode when they enter their current passcode correctly and their new passcode twice correctly and the new passcode meets the passcode length criteria."}, {"Function_Flow_Name": "Passcode", "Sub_Flow_Name": "Change passcode", "Use_Case_Name": "Change Passcode", "Test_Scnario": "Change Passcode - Invalid Current Passcode", "Test_Sce_Description": "Verify that the operator receives an error message when they enter an incorrect current passcode."}, {"Function_Flow_Name": "Passcode", "Sub_Flow_Name": "Change passcode", "Use_Case_Name": "Change Passcode", "Test_Scnario": "Change Passcode - New Passcodes Do Not Match", "Test_Sce_Description": "Verify that the operator receives an error message when the two new passcodes they enter do not match."}, {"Function_Flow_Name": "Passcode", "Sub_Flow_Name": "Change passcode", "Use_Case_Name": "Change Passcode", "Test_Scnario": "Change Passcode - New Passcode Same as Old Passcode", "Test_Sce_Description": "Verify that the operator receives an error message when the new passcode they enter is the same as their current passcode."}, {"Function_Flow_Name": "Passcode", "Sub_Flow_Name": "Change passcode", "Use_Case_Name": "Change Passcode", "Test_Scnario": "Change Passcode - New Passcode Length Does Not Meet Criteria", "Test_Sce_Description": "Verify that the operator receives an error message when the new passcode they enter does not meet the passcode length criteria."}, {"Function_Flow_Name": "Passcode", "Sub_Flow_Name": "Change passcode", "Use_Case_Name": "Change Passcode", "Test_Scnario": "Change Passcode - Maximum Number of Change Attempts Reached", "Test_Sce_Description": "Verify that the operator is locked out of changing their passcode after a certain number of unsuccessful change attempts."}, {"Function_Flow_Name": "Passcode", "Sub_Flow_Name": "Change passcode", "Use_Case_Name": "Change Passcode", "Test_Scnario": "Change Passcode - Network Connectivity Unavailable", "Test_Sce_Description": "Verify that the change passcode option is invalid and the operator cannot access this function when network connectivity is unavailable."}, {"Function_Flow_Name": "Passcode", "Sub_Flow_Name": "Change passcode", "Use_Case_Name": "Change Passcode", "Test_Scnario": "Change Passcode - Account Validation Fails After Passcode Reset", "Test_Sce_Description": "Verify that the operator is redirected to the sign-in screen and informed that the passcode has been successfully reset when the account validation check fails due to loss of connectivity after the passcode has been reset."}, {"Function_Flow_Name": "Passcode", "Sub_Flow_Name": "Change passcode", "Use_Case_Name": "Change Passcode", "Test_Scnario": "Operator Sign-Off - Valid Inputs", "Test_Sce_Description": "Verify that the operator can successfully sign-off the SA Tool application and a shift statistics email is sent to the established email distribution list."}, {"Function_Flow_Name": "Passcode", "Sub_Flow_Name": "Change passcode", "Use_Case_Name": "Change Passcode", "Test_Scnario": "Operator Sign-Off - Printer Not Connected", "Test_Sce_Description": "Verify that the statistics report is not printed when the printer is not enabled or connected."}, {"Function_Flow_Name": "Passcode", "Sub_Flow_Name": "Change passcode", "Use_Case_Name": "Attempt to change passcode when network connectivity is unavailable", "Test_Scnario": "Network Unavailability during Passcode Change", "Test_Sce_Description": "Verify that the application correctly handles a situation where the network is unavailable during a passcode change attempt. The application should display an appropriate error message and prevent the user from proceeding with the passcode change."}, {"Function_Flow_Name": "Passcode", "Sub_Flow_Name": "Change passcode", "Use_Case_Name": "Attempt to change passcode when network connectivity is unavailable", "Test_Scnario": "Mismatched New Passcodes", "Test_Sce_Description": "Verify that the application correctly identifies when the new passcodes entered by the user do not match. The application should display an appropriate error message and prevent the user from proceeding with the passcode change."}, {"Function_Flow_Name": "Passcode", "Sub_Flow_Name": "Change passcode", "Use_Case_Name": "Attempt to change passcode when network connectivity is unavailable", "Test_Scnario": "Incorrect Current Passcode", "Test_Sce_Description": "Verify that the application correctly identifies when the current passcode entered by the user does not match the passcode stored in the system. The application should display an appropriate error message and prevent the user from proceeding with the passcode change."}, {"Function_Flow_Name": "Passcode", "Sub_Flow_Name": "Change passcode", "Use_Case_Name": "Attempt to change passcode when network connectivity is unavailable", "Test_Scnario": "New Passcode Identical to Old Passcode", "Test_Sce_Description": "Verify that the application correctly identifies when the new passcode entered by the user is identical to the current passcode. The application should display an appropriate error message and prevent the user from proceeding with the passcode change."}, {"Function_Flow_Name": "Passcode", "Sub_Flow_Name": "Change passcode", "Use_Case_Name": "Attempt to change passcode when network connectivity is unavailable", "Test_Scnario": "New Passcode Length Validation", "Test_Sce_Description": "Verify that the application correctly validates the length of the new passcode entered by the user. The application should not enable the submit button until the passcode entered is of the correct length."}, {"Function_Flow_Name": "Passcode", "Sub_Flow_Name": "Change passcode", "Use_Case_Name": "Attempt to change passcode when network connectivity is unavailable", "Test_Scnario": "Maximum Number of Change Attempts", "Test_Sce_Description": "Verify that the application correctly handles a situation where the user has had multiple unsuccessful change attempts for the same operator ID. The application should lock the user account after a certain number of unsuccessful attempts and display an appropriate error message."}, {"Function_Flow_Name": "Passcode", "Sub_Flow_Name": "Change passcode", "Use_Case_Name": "New passcodes do not match", "Test_Scnario": "Reset Passcode: Account validation fails after passcode has been reset", "Test_Sce_Description": "This scenario tests the functionality of the system when the account validation fails after the passcode has been reset. The system should redirect the user to the sign-in screen and inform the operator that the passcode has been successfully reset. The operator should be able to sign in to the application with their new passcode when connectivity is reached, or account is unlocked."}, {"Function_Flow_Name": "Passcode", "Sub_Flow_Name": "Change passcode", "Use_Case_Name": "New passcodes do not match", "Test_Scnario": "Forgot Passcode - New passcode is the same as the current passcode", "Test_Sce_Description": "This scenario tests the system's ability to detect when the new passcode is the same as the current passcode. The system should notify the operator with a corresponding error message and clear the new passcode fields. The system should also increment the invalid answer counter by one to track the number of invalid reset passcode attempts."}, {"Function_Flow_Name": "Passcode", "Sub_Flow_Name": "Change passcode", "Use_Case_Name": "New passcodes do not match", "Test_Scnario": "Operator Sign-Off", "Test_Sce_Description": "This scenario tests the procedures for authorized operators to sign-off the application. The system should send a shift statistics email to the established email distribution list once the operator successfully signs-off. The language toggle should be reset to the default EN (English) when the operator is signed-off at the end of their shift."}, {"Function_Flow_Name": "Passcode", "Sub_Flow_Name": "Change passcode", "Use_Case_Name": "New passcodes do not match", "Test_Scnario": "Change Passcode", "Test_Sce_Description": "This scenario tests the procedures for authorized operators to change their passcodes on the application. The system should validate that the new passcode meets passcode length criteria and that the new passcodes that were entered twice match each other. If the criteria are valid, the Operator\u2019s passcode should be changed to the new passcode."}, {"Function_Flow_Name": "Passcode", "Sub_Flow_Name": "Change passcode", "Use_Case_Name": "New passcodes do not match", "Test_Scnario": "Attempt to change passcode when network connectivity is unavailable", "Test_Sce_Description": "This scenario tests the system's behavior when the network connectivity is unavailable. The change passcode option should be invalid in the application and the operator should not be able to access this function."}, {"Function_Flow_Name": "Passcode", "Sub_Flow_Name": "Change passcode", "Use_Case_Name": "New passcodes do not match", "Test_Scnario": "New passcodes do not match", "Test_Sce_Description": "This scenario tests the system's ability to detect when the new passcodes (entered twice) do not match. The system should notify the operator that the new passcodes do not match."}, {"Function_Flow_Name": "Passcode", "Sub_Flow_Name": "Change passcode", "Use_Case_Name": "New passcodes do not match", "Test_Scnario": "Current passcode does not match passcode stored in Subsystem", "Test_Sce_Description": "This scenario tests the system's ability to detect when the operator entered current passcode does not match the current passcode stored in the user management service. The system should notify the operator of the error."}, {"Function_Flow_Name": "Passcode", "Sub_Flow_Name": "Change passcode", "Use_Case_Name": "New passcodes do not match", "Test_Scnario": "New passcode is the same as the old passcode", "Test_Sce_Description": "This scenario tests the system's ability to detect that the new passcode is the same as the current passcode in the User management service. The system should notify the operator of the error."}, {"Function_Flow_Name": "Passcode", "Sub_Flow_Name": "Change passcode", "Use_Case_Name": "New passcodes do not match", "Test_Scnario": "New passcode length does not meet pre-defined criteria", "Test_Sce_Description": "This scenario tests the system's ability to detect when the new passcode length does not meet pre-defined criteria. The system should not enable the submit button until the passcode entered is the correct length."}, {"Function_Flow_Name": "Passcode", "Sub_Flow_Name": "Change passcode", "Use_Case_Name": "New passcodes do not match", "Test_Scnario": "Reach maximum number of change attempts", "Test_Sce_Description": "This scenario tests the system's behavior when the user has had multiple unsuccessful change attempts for the same operator ID. The system should lock the account after a certain number of unsuccessful attempts."}, {"Function_Flow_Name": "Passcode", "Sub_Flow_Name": "Change passcode", "Use_Case_Name": "Current passcode does not match passcode stored in Subsystem", "Test_Scnario": "Reset Passcode: Account validation fails after passcode has been reset", "Test_Sce_Description": "Verify that the system handles the scenario where account validation fails after a passcode reset. This could be due to loss of connectivity or the operator account being locked. The system should redirect the user to the sign-in screen and inform them that the passcode has been successfully reset. The operator should be able to sign in with the new passcode when connectivity is restored or the account is unlocked."}, {"Function_Flow_Name": "Passcode", "Sub_Flow_Name": "Change passcode", "Use_Case_Name": "Current passcode does not match passcode stored in Subsystem", "Test_Scnario": "Forgot Passcode - New passcode is the same as the current passcode", "Test_Sce_Description": "Verify that the system correctly identifies when the new passcode entered by the user is the same as the current passcode. In this case, the system should display an error message and clear the new passcode fields. The system should also increment the invalid answer counter by one to track the number of invalid reset passcode attempts."}, {"Function_Flow_Name": "Passcode", "Sub_Flow_Name": "Change passcode", "Use_Case_Name": "Current passcode does not match passcode stored in Subsystem", "Test_Scnario": "Operator Sign-Off", "Test_Sce_Description": "Verify that the system correctly handles the operator sign-off process. The operator should be able to select the sign-off option, confirm their decision, and view a digital end-of-shift statistics report. The system should then close the current shift, print the statistics report if a printer is connected, and send a copy of the report to the Subsystem. An email with the shift statistics should also be sent to the established email distribution list."}, {"Function_Flow_Name": "Passcode", "Sub_Flow_Name": "Change passcode", "Use_Case_Name": "Current passcode does not match passcode stored in Subsystem", "Test_Scnario": "Change Passcode", "Test_Sce_Description": "Verify that the system correctly handles the passcode change process. The operator should be able to select the change passcode option, enter their current passcode and new passcode twice, and submit the change. The system should validate the new passcode, perform a final account validation, and return the user to the home screen with a confirmation message. The operator should be able to use the new passcode during their next sign-in."}, {"Function_Flow_Name": "Passcode", "Sub_Flow_Name": "Change passcode", "Use_Case_Name": "Current passcode does not match passcode stored in Subsystem", "Test_Scnario": "Attempt to change passcode when network connectivity is unavailable", "Test_Sce_Description": "Verify that the system correctly handles the scenario where the operator attempts to change their passcode while the system is offline. In this case, the change passcode option should be invalid and the operator should not be able to access this function."}, {"Function_Flow_Name": "Passcode", "Sub_Flow_Name": "Change passcode", "Use_Case_Name": "Current passcode does not match passcode stored in Subsystem", "Test_Scnario": "New passcodes do not match", "Test_Sce_Description": "Verify that the system correctly identifies when the new passcodes entered by the operator do not match. In this case, the system should display an error message to the operator."}, {"Function_Flow_Name": "Passcode", "Sub_Flow_Name": "Change passcode", "Use_Case_Name": "Current passcode does not match passcode stored in Subsystem", "Test_Scnario": "Current passcode does not match passcode stored in Subsystem", "Test_Sce_Description": "Verify that the system correctly identifies when the current passcode entered by the operator does not match the passcode stored in the Subsystem. In this case, the system should display an error message to the operator."}, {"Function_Flow_Name": "Passcode", "Sub_Flow_Name": "Change passcode", "Use_Case_Name": "Current passcode does not match passcode stored in Subsystem", "Test_Scnario": "New passcode is the same as the old passcode", "Test_Sce_Description": "Verify that the system correctly identifies when the new passcode entered by the operator is the same as their current passcode. In this case, the system should display an error message to the operator."}, {"Function_Flow_Name": "Passcode", "Sub_Flow_Name": "Change passcode", "Use_Case_Name": "Current passcode does not match passcode stored in Subsystem", "Test_Scnario": "New passcode length does not meet pre-defined criteria", "Test_Sce_Description": "Verify that the system correctly identifies when the new passcode entered by the operator does not meet the pre-defined length criteria. In this case, the system should not enable the submit button until the passcode entered is the correct length."}, {"Function_Flow_Name": "Passcode", "Sub_Flow_Name": "Change passcode", "Use_Case_Name": "Current passcode does not match passcode stored in Subsystem", "Test_Scnario": "Reach maximum number of change attempts", "Test_Sce_Description": "Verify that the system correctly handles the scenario where the operator has had multiple unsuccessful change attempts for the same operator ID. The system should track the number of unsuccessful attempts and take appropriate action when the maximum number is reached."}, {"Function_Flow_Name": "Passcode", "Sub_Flow_Name": "Change passcode", "Use_Case_Name": "New passcode is the same as the old passcode", "Test_Scnario": "Reset Passcode: Account validation fails after passcode has been reset", "Test_Sce_Description": "Verify that the system handles the scenario where account validation fails after a passcode reset due to loss of connectivity. The system should redirect the user to the sign-in screen and inform the operator that the passcode has been successfully reset. The operator should be able to sign in with the new passcode when connectivity is restored or the account is unlocked."}, {"Function_Flow_Name": "Passcode", "Sub_Flow_Name": "Change passcode", "Use_Case_Name": "New passcode is the same as the old passcode", "Test_Scnario": "Forgot Passcode - New passcode is the same as the current passcode", "Test_Sce_Description": "Verify that the system detects when the new passcode entered by the user is the same as the current passcode. The system should notify the operator with an error message and clear the new passcode fields. The system should also increment the invalid answer counter by one to track the number of invalid reset passcode attempts."}, {"Function_Flow_Name": "Passcode", "Sub_Flow_Name": "Change passcode", "Use_Case_Name": "New passcode is the same as the old passcode", "Test_Scnario": "Operator Sign-Off", "Test_Sce_Description": "Verify that the system allows authorized operators to sign-off the application at the end of their shift. The system should request for a confirmation, display a digital end-of-shift statistics report, and send a shift statistics email to the established email distribution list. The language toggle should be reset to the default English when the operator signs off."}, {"Function_Flow_Name": "Passcode", "Sub_Flow_Name": "Change passcode", "Use_Case_Name": "New passcode is the same as the old passcode", "Test_Scnario": "New passcode length does not meet pre-defined criteria", "Test_Sce_Description": "Verify that the system does not enable the submit button until the passcode entered by the user meets the pre-defined length criteria. The system should notify the operator if the new passcode length does not meet the pre-defined criteria."}, {"Function_Flow_Name": "Passcode", "Sub_Flow_Name": "Change passcode", "Use_Case_Name": "New passcode is the same as the old passcode", "Test_Scnario": "Reach maximum number of change attempts", "Test_Sce_Description": "Verify that the system handles the scenario where the user reaches the maximum number of change passcode attempts. The system should lock the operator user account and redirect the user to the sign-in screen, informing the operator that the user account associated with the operator ID is locked."}, {"Function_Flow_Name": "Passcode", "Sub_Flow_Name": "Change passcode", "Use_Case_Name": "New passcode is the same as the old passcode", "Test_Scnario": "Account validation fails after passcode has been reset", "Test_Sce_Description": "Verify that the system handles the scenario where account validation fails after a passcode reset due to loss of connectivity. The system should redirect the user to the home screen and inform the operator that the passcode has been successfully reset."}, {"Function_Flow_Name": "Passcode", "Sub_Flow_Name": "Change passcode", "Use_Case_Name": "New passcode length does not meet pre-defined criteria", "Test_Scnario": "New passcode length does not meet pre-defined criteria", "Test_Sce_Description": "This scenario will test if the SA Tool application correctly identifies and prevents the user from submitting a new passcode that does not meet the pre-defined length criteria. The test will involve entering a new passcode that is shorter or longer than the required length and verifying that the submit button remains disabled."}, {"Function_Flow_Name": "Passcode", "Sub_Flow_Name": "Change passcode", "Use_Case_Name": "New passcode length does not meet pre-defined criteria", "Test_Scnario": "New passcode is the same as the current passcode", "Test_Sce_Description": "This scenario will test if the SA Tool application correctly identifies when the new passcode entered by the user is the same as the current passcode. The test will involve entering the current passcode as the new passcode and verifying that the application displays an error message."}, {"Function_Flow_Name": "Passcode", "Sub_Flow_Name": "Change passcode", "Use_Case_Name": "New passcode length does not meet pre-defined criteria", "Test_Scnario": "Maximum number of change attempts reached", "Test_Sce_Description": "This scenario will test if the SA Tool application correctly locks the operator account after the maximum number of unsuccessful change passcode attempts has been reached. The test will involve entering an incorrect current passcode multiple times until the maximum number of attempts is reached and verifying that the account is locked."}, {"Function_Flow_Name": "Passcode", "Sub_Flow_Name": "Change passcode", "Use_Case_Name": "New passcode length does not meet pre-defined criteria", "Test_Scnario": "Account validation fails after passcode reset", "Test_Sce_Description": "This scenario will test if the SA Tool application correctly handles a situation where account validation fails after the passcode has been reset. The test will involve simulating a loss of connectivity during the account validation check after a passcode reset and verifying that the application redirects the user to the home screen and informs them that the passcode has been successfully reset."}, {"Function_Flow_Name": "Passcode", "Sub_Flow_Name": "Change passcode", "Use_Case_Name": "New passcode length does not meet pre-defined criteria", "Test_Scnario": "Forgot Passcode - New passcode is the same as the current passcode", "Test_Sce_Description": "This scenario will test if the SA Tool application correctly identifies when the new passcode entered by the user in the Forgot Passcode flow is the same as the current passcode. The test will involve entering the current passcode as the new passcode in the Forgot Passcode flow and verifying that the application displays an error message and increments the invalid answer counter."}, {"Function_Flow_Name": "Passcode", "Sub_Flow_Name": "Change passcode", "Use_Case_Name": "New passcode length does not meet pre-defined criteria", "Test_Scnario": "Operator Sign-Off", "Test_Sce_Description": "This scenario will test if the SA Tool application correctly handles the operator sign-off process. The test will involve selecting the sign-off option, confirming the sign-off, and verifying that the application displays the end-of-shift statistics report, sends the report to the established email distribution list, and redirects the user to the sign-in screen."}, {"Function_Flow_Name": "Passcode", "Sub_Flow_Name": "Change passcode", "Use_Case_Name": "Reach maximum number of change attempts", "Test_Scnario": "Detecting same new and current passcode", "Test_Sce_Description": "Verify that the SA Tool application correctly detects when the new passcode entered by the operator is the same as the current passcode. The application should notify the operator of the error."}, {"Function_Flow_Name": "Passcode", "Sub_Flow_Name": "Change passcode", "Use_Case_Name": "Reach maximum number of change attempts", "Test_Scnario": "New passcode length validation", "Test_Sce_Description": "Check if the SA Tool application correctly validates the length of the new passcode entered by the operator. The submit button should not be enabled until the passcode entered meets the pre-defined length criteria."}, {"Function_Flow_Name": "Passcode", "Sub_Flow_Name": "Change passcode", "Use_Case_Name": "Reach maximum number of change attempts", "Test_Scnario": "Maximum change attempts reached", "Test_Sce_Description": "Verify that the SA Tool application correctly tracks and records the number of unsuccessful change passcode attempts for a single valid operator ID. When the maximum number of attempts is reached, the application should lock the operator account and redirect the user to the sign-in screen with an appropriate notification."}, {"Function_Flow_Name": "Passcode", "Sub_Flow_Name": "Change passcode", "Use_Case_Name": "Reach maximum number of change attempts", "Test_Scnario": "Account validation after passcode reset", "Test_Sce_Description": "Check if the SA Tool application correctly performs the final account validation after the passcode has been reset. In case of loss of connectivity, the application should redirect the user to the home screen and inform the operator that the passcode has been successfully reset."}, {"Function_Flow_Name": "Passcode", "Sub_Flow_Name": "Change passcode", "Use_Case_Name": "Reach maximum number of change attempts", "Test_Scnario": "Maximum sign-in attempts reached", "Test_Sce_Description": "Verify that the SA Tool application correctly tracks and records the number of unsuccessful sign-in attempts for a single valid operator badge ID. When the maximum number of attempts is reached, the application should lock the operator account and display an appropriate error message."}, {"Function_Flow_Name": "Passcode", "Sub_Flow_Name": "Change passcode", "Use_Case_Name": "Reach maximum number of change attempts", "Test_Scnario": "Sign-in with no network connectivity", "Test_Sce_Description": "Check if the SA Tool application correctly handles the scenario when there is no network connectivity and the operator's login credentials are not stored in the local cache. The application should display an error message and clear the passcode field."}, {"Function_Flow_Name": "Passcode", "Sub_Flow_Name": "Change passcode", "Use_Case_Name": "Reach maximum number of change attempts", "Test_Scnario": "Sign-in to a disabled operator account", "Test_Sce_Description": "Verify that the SA Tool application correctly detects when an operator attempts to sign-in with an account that has been disabled due to inactivity. The application should display a corresponding error message and clear the passcode field."}, {"Function_Flow_Name": "Passcode", "Sub_Flow_Name": "Change passcode", "Use_Case_Name": "Reach maximum number of change attempts", "Test_Scnario": "Sign-in to a deleted operator account", "Test_Sce_Description": "Check if the SA Tool application correctly detects when an operator attempts to sign-in with a deleted account. The application should display a corresponding error message and clear the passcode field."}, {"Function_Flow_Name": "Passcode", "Sub_Flow_Name": "Change passcode", "Use_Case_Name": "Reach maximum number of change attempts", "Test_Scnario": "Change passcode functionality", "Test_Sce_Description": "Verify that the SA Tool application allows authorized operators to change their passcodes after they have signed-in. The application should correctly validate the new passcode and update the operator's account with the new passcode."}, {"Function_Flow_Name": "Passcode", "Sub_Flow_Name": "Change passcode", "Use_Case_Name": "Reset Passcode: Account validation fails after passcode has been reset", "Test_Scnario": "Account validation fails after passcode reset due to loss of connectivity", "Test_Sce_Description": "This scenario tests the functionality of the SA Tool application when it loses connectivity during the final account validation after the passcode has been reset. The test will check if the application redirects the user to the sign-in screen and informs the operator that the passcode has been successfully reset."}, {"Function_Flow_Name": "Passcode", "Sub_Flow_Name": "Change passcode", "Use_Case_Name": "Reset Passcode: Account validation fails after passcode has been reset", "Test_Scnario": "Account validation fails after passcode reset due to account lock", "Test_Sce_Description": "This scenario tests the functionality of the SA Tool application when the Operator account is locked during the final account validation after the passcode has been reset. The test will check if the application redirects the user to the sign-in screen and informs the operator that the passcode has been successfully reset."}, {"Function_Flow_Name": "Passcode", "Sub_Flow_Name": "Change passcode", "Use_Case_Name": "Reset Passcode: Account validation fails after passcode has been reset", "Test_Scnario": "New passcode is the same as the current passcode", "Test_Sce_Description": "This scenario tests the functionality of the SA Tool application when the new passcode entered by the operator is the same as the current passcode. The test will check if the application detects this and notifies the operator with a corresponding error message, clears the new passcode fields, and increments the invalid answer counter."}, {"Function_Flow_Name": "Passcode", "Sub_Flow_Name": "Change passcode", "Use_Case_Name": "Reset Passcode: Account validation fails after passcode has been reset", "Test_Scnario": "Operator sign-off functionality", "Test_Sce_Description": "This scenario tests the functionality of the SA Tool application when an operator signs off. The test will check if the application displays a digital end-of-shift statistics report, closes off the current shift, prints the statistics report if the printer is connected, and sends a shift statistics email to the established email distribution list."}, {"Function_Flow_Name": "Passcode", "Sub_Flow_Name": "Change passcode", "Use_Case_Name": "Reset Passcode: Account validation fails after passcode has been reset", "Test_Scnario": "Reset passcode when network connectivity is unavailable", "Test_Sce_Description": "This scenario tests the functionality of the SA Tool application when it is offline and the operator attempts to reset their passcode. The test will check if the application notifies the operator with a corresponding error message."}, {"Function_Flow_Name": "Passcode", "Sub_Flow_Name": "Change passcode", "Use_Case_Name": "Reset Passcode: Account validation fails after passcode has been reset", "Test_Scnario": "Reset passcode for a locked operator account", "Test_Sce_Description": "This scenario tests the functionality of the SA Tool application when the operator has reached the maximum number of operator account log-in attempts, has been locked out, and is trying to reset their passcode. The test will check if the application detects that the operator account has been locked and notifies the operator with a corresponding error message."}, {"Function_Flow_Name": "Passcode", "Sub_Flow_Name": "Change passcode", "Use_Case_Name": "Reset Passcode: Account validation fails after passcode has been reset", "Test_Scnario": "Reset passcode with an invalid operator badge ID", "Test_Sce_Description": "This scenario tests the functionality of the SA Tool application when the operator enters an invalid badge ID while resetting their passcode. The test will check if the application checks with the User management service, determines that the operator badge ID is invalid, and notifies the operator with a corresponding error message."}, {"Function_Flow_Name": "Passcode", "Sub_Flow_Name": "Change passcode", "Use_Case_Name": "Reset Passcode: Account validation fails after passcode has been reset", "Test_Scnario": "Reset passcode with invalid security question answers", "Test_Sce_Description": "This scenario tests the functionality of the SA Tool application when the operator enters invalid answers to the security questions while resetting their passcode. The test will check if the application validates the security question answers, determines that they do not match those stored in the User management service, and notifies the operator with a corresponding error message."}, {"Function_Flow_Name": "Passcode", "Sub_Flow_Name": "Change passcode", "Use_Case_Name": "Reset Passcode: Account validation fails after passcode has been reset", "Test_Scnario": "Reset passcode with mismatched new passcodes", "Test_Sce_Description": "This scenario tests the functionality of the SA Tool application when the operator enters a new passcode twice, but the passcodes do not match. The test will check if the application detects this and notifies the operator with a corresponding error message."}, {"Function_Flow_Name": "Passcode", "Sub_Flow_Name": "Change passcode", "Use_Case_Name": "Forgot Passcode - New passcode is the same as the current passcode", "Test_Scnario": "Reset Passcode: Account validation fails after passcode has been reset", "Test_Sce_Description": "This scenario is to test the functionality of the SA Tool application when it loses connectivity or the Operator account is locked after the passcode has been reset. The application should redirect the user to the sign-in screen and inform the operator that the passcode has been successfully reset. The operator should be able to sign in to the application with their new passcode when connectivity is reached or account is unlocked."}, {"Function_Flow_Name": "Passcode", "Sub_Flow_Name": "Change passcode", "Use_Case_Name": "Forgot Passcode - New passcode is the same as the current passcode", "Test_Scnario": "Forgot Passcode - New passcode is the same as the current passcode", "Test_Sce_Description": "This scenario is to test the functionality of the SA Tool application when the new passcode entered by the operator is the same as the current passcode. The application should detect this and notify the operator with a corresponding error message, clear the new passcode fields, and increment the invalid answer counter by one to track the number of invalid reset passcode attempts."}, {"Function_Flow_Name": "Passcode", "Sub_Flow_Name": "Change passcode", "Use_Case_Name": "Forgot Passcode - New passcode is the same as the current passcode", "Test_Scnario": "Operator Sign-Off", "Test_Sce_Description": "This scenario is to test the functionality of the SA Tool application when the operator signs off. The application should request for a confirmation that the Operator would like to sign-out of their current shift, display a digital end-of-shift statistics report to the operator, and close off the current shift. A shift statistics email should be sent to the established email distribution list once the operator successfully signs-off."}, {"Function_Flow_Name": "Passcode", "Sub_Flow_Name": "Change passcode", "Use_Case_Name": "Forgot Passcode - New passcode is the same as the current passcode", "Test_Scnario": "Reset Passcode: Operator attempts to reset the passcode to their locked operator account", "Test_Sce_Description": "This scenario is to test the functionality of the SA Tool application when the operator attempts to reset the passcode to their locked operator account. The application should detect that the operator account has been locked and notify the operator with a corresponding error message."}, {"Function_Flow_Name": "Passcode", "Sub_Flow_Name": "Change passcode", "Use_Case_Name": "Forgot Passcode - New passcode is the same as the current passcode", "Test_Scnario": "Reset Passcode: Operator enters an invalid operator badge ID when resetting their passcode", "Test_Sce_Description": "This scenario is to test the functionality of the SA Tool application when the operator enters an invalid operator badge ID when resetting their passcode. The application should check with the User management service and determine that the operator badge ID is invalid, and notify the operator with a corresponding error message."}, {"Function_Flow_Name": "Passcode", "Sub_Flow_Name": "Change passcode", "Use_Case_Name": "Forgot Passcode - New passcode is the same as the current passcode", "Test_Scnario": "Reset Passcode: Operator enters invalid security question answers", "Test_Sce_Description": "This scenario is to test the functionality of the SA Tool application when the operator enters invalid security question answers. The application should validate that the security question answers entered do not match those stored in the User management service, and notify the operator with a corresponding error message."}, {"Function_Flow_Name": "Passcode", "Sub_Flow_Name": "Change passcode", "Use_Case_Name": "Forgot Passcode - New passcode is the same as the current passcode", "Test_Scnario": "Reset Passcode: Operator enters new passcode twice, but new passcodes do not match", "Test_Sce_Description": "This scenario is to test the functionality of the SA Tool application when the operator enters new passcode twice, but the new passcodes do not match. The application should validate that the new passcodes entered twice are not the same, and notify the operator with a corresponding error message."}, {"Function_Flow_Name": "Passcode", "Sub_Flow_Name": "Change passcode", "Use_Case_Name": "Operator Sign-Off", "Test_Scnario": "Operator Sign-Off", "Test_Sce_Description": "Verify that the operator is able to successfully sign-off from the SA Tool. This includes entering the correct user ID and passcode, receiving a confirmation message, and successfully being signed off from the tool."}, {"Function_Flow_Name": "Passcode", "Sub_Flow_Name": "Change passcode", "Use_Case_Name": "Operator Sign-Off", "Test_Scnario": "Shut Down SA Tool via Physical Device Button", "Test_Sce_Description": "Verify that the operator is able to shut down the SA Tool by pressing and holding the physical power button. The tool should display a confirmation message with the options 'Power off' and other options. The operator should be able to select 'Power off' and confirm shut-down. The device should then turn off."}, {"Function_Flow_Name": "Passcode", "Sub_Flow_Name": "Change passcode", "Use_Case_Name": "Operator Sign-Off", "Test_Scnario": "Reboot SA Tool", "Test_Sce_Description": "Verify that the operator is able to reboot the SA Tool by pressing and holding the physical power button. The tool should display a confirmation message with the options 'Power off' and other options. The operator should be able to select the restart option and the device should then restart by turning off and powering on."}, {"Function_Flow_Name": "Passcode", "Sub_Flow_Name": "Change passcode", "Use_Case_Name": "Operator Sign-Off", "Test_Scnario": "Device is turned off after the operator confirms that they would like to sign-out", "Test_Sce_Description": "Verify that the SA Tool is turned off after the operator confirms that they would like to sign-out of their current shift. The SA Tool application should close off the current shift and generate the inspection shift statistics email that is stored on the device. The email should be sent once the SA Tool is powered on and re-establishes connection to the network."}, {"Function_Flow_Name": "Passcode", "Sub_Flow_Name": "Change passcode", "Use_Case_Name": "Operator Sign-Off", "Test_Scnario": "Operator Signs-Off while the SA Tool is Offline", "Test_Sce_Description": "Verify that the operator is able to sign-off while the SA Tool is offline. The SA Tool application should close the current shift and generate the shift statistics email that is stored on the device. The email should be sent once the SA Tool is powered on and re-establishes connection to the network."}, {"Function_Flow_Name": "Passcode", "Sub_Flow_Name": "Change passcode", "Use_Case_Name": "Operator Sign-Off", "Test_Scnario": "New operator signs into current operator\u2019s shift", "Test_Sce_Description": "Verify that a new operator is able to sign into the current operator\u2019s shift. The new operator should enter their own user ID and passcode and select Sign In. A message should indicate that the current Operator is currently signed in, and ask if the new Operator wants to sign in anyway. The new Operator should select Yes and the current Operator should be signed off from the SA Tool."}, {"Function_Flow_Name": "Passcode", "Sub_Flow_Name": "Reset passcode", "Use_Case_Name": "Reset passcode when network connectivity is unavailable", "Test_Scnario": "Reset Passcode with Valid Inputs", "Test_Sce_Description": "Verify that the user is able to reset their passcode successfully when all the required fields are entered correctly. The new passcode should be updated in the User management service and stored in the local cache."}, {"Function_Flow_Name": "Passcode", "Sub_Flow_Name": "Reset passcode", "Use_Case_Name": "Reset passcode when network connectivity is unavailable", "Test_Scnario": "Reset Passcode with Invalid Security Answers", "Test_Sce_Description": "Verify that the user is unable to reset their passcode when the security question answers entered do not match those stored in the User management service. The system should display an appropriate error message."}, {"Function_Flow_Name": "Passcode", "Sub_Flow_Name": "Reset passcode", "Use_Case_Name": "Reset passcode when network connectivity is unavailable", "Test_Scnario": "Reset Passcode with Mismatched New Passcodes", "Test_Sce_Description": "Verify that the user is unable to reset their passcode when the new passcodes entered twice do not match. The system should display an appropriate error message."}, {"Function_Flow_Name": "Passcode", "Sub_Flow_Name": "Reset passcode", "Use_Case_Name": "Reset passcode when network connectivity is unavailable", "Test_Scnario": "Reset Passcode with Invalid Operator Badge ID", "Test_Sce_Description": "Verify that the user is unable to reset their passcode when an invalid operator badge ID is entered. The system should check with the User management service and display an appropriate error message."}, {"Function_Flow_Name": "Passcode", "Sub_Flow_Name": "Reset passcode", "Use_Case_Name": "Reset passcode when network connectivity is unavailable", "Test_Scnario": "Reset Passcode for Locked Operator Account", "Test_Sce_Description": "Verify that the user is unable to reset their passcode when their operator account has been locked due to maximum number of login attempts. The system should display an appropriate error message."}, {"Function_Flow_Name": "Passcode", "Sub_Flow_Name": "Reset passcode", "Use_Case_Name": "Reset passcode when network connectivity is unavailable", "Test_Scnario": "Reset Passcode without Network Connectivity", "Test_Sce_Description": "Verify that the user is unable to reset their passcode when the SA Tool is offline. The system should display an appropriate error message."}, {"Function_Flow_Name": "Passcode", "Sub_Flow_Name": "Reset passcode", "Use_Case_Name": "Reset passcode when network connectivity is unavailable", "Test_Scnario": "Reset Passcode with New Passcode Same as Current", "Test_Sce_Description": "Verify that the user is unable to reset their passcode when the new passcode entered is the same as the current passcode. The system should display an appropriate error message and clear the new passcode fields."}, {"Function_Flow_Name": "Passcode", "Sub_Flow_Name": "Reset passcode", "Use_Case_Name": "Reset passcode when network connectivity is unavailable", "Test_Scnario": "Account Validation after Passcode Reset", "Test_Sce_Description": "Verify that the account validation check is performed after the passcode has been reset. If the validation fails due to loss of connectivity, the user should be redirected to the sign-in screen and informed that the passcode has been successfully reset."}, {"Function_Flow_Name": "Passcode", "Sub_Flow_Name": "Reset passcode", "Use_Case_Name": "Reset passcode when network connectivity is unavailable", "Test_Scnario": "Operator Sign-Off", "Test_Sce_Description": "Verify that the operator is able to sign-off the SA Tool application successfully at the end of their shift. A shift statistics email should be sent to the established email distribution list."}, {"Function_Flow_Name": "Passcode", "Sub_Flow_Name": "Reset passcode", "Use_Case_Name": "Reset passcode when network connectivity is unavailable", "Test_Scnario": "Performance of SA Tool Application", "Test_Sce_Description": "Verify that the SA Tool application performs efficiently when multiple operators are trying to reset their passcodes simultaneously."}, {"Function_Flow_Name": "Passcode", "Sub_Flow_Name": "Reset passcode", "Use_Case_Name": "Reset passcode when network connectivity is unavailable", "Test_Scnario": "Security of New Passcode", "Test_Sce_Description": "Verify that the new passcode entered by the operator is securely stored in the User management service and not visible to anyone."}, {"Function_Flow_Name": "Passcode", "Sub_Flow_Name": "Reset passcode", "Use_Case_Name": "Reset Passcode: Operator attempts to reset the passcode to their locked operator account", "Test_Scnario": "Reset Passcode: Operator attempts to reset the passcode to their locked operator account", "Test_Sce_Description": "This scenario tests the functionality of the SA Tool application when an operator attempts to reset the passcode of their locked operator account. The application should detect that the operator account has been locked by checking the User management service and notify the operator with a corresponding error message."}, {"Function_Flow_Name": "Passcode", "Sub_Flow_Name": "Reset passcode", "Use_Case_Name": "Reset Passcode: Operator attempts to reset the passcode to their locked operator account", "Test_Scnario": "Reset Passcode: Operator enters an invalid operator badge ID when resetting their passcode", "Test_Sce_Description": "This scenario tests the functionality of the SA Tool application when an operator enters an invalid operator badge ID while trying to reset their passcode. The application should check with the User management service and determine that the operator badge ID is invalid, and then notify the operator with a corresponding error message."}, {"Function_Flow_Name": "Passcode", "Sub_Flow_Name": "Reset passcode", "Use_Case_Name": "Reset Passcode: Operator attempts to reset the passcode to their locked operator account", "Test_Scnario": "Reset Passcode: Operator enters invalid security question answers", "Test_Sce_Description": "This scenario tests the functionality of the SA Tool application when an operator enters invalid answers to the security questions while trying to reset their passcode. The application should validate that the security question answers entered do not match those stored in the User management service, and then notify the operator with a corresponding error message."}, {"Function_Flow_Name": "Passcode", "Sub_Flow_Name": "Reset passcode", "Use_Case_Name": "Reset Passcode: Operator attempts to reset the passcode to their locked operator account", "Test_Scnario": "Reset Passcode: Operator enters new passcode twice, but new passcodes do not match", "Test_Sce_Description": "This scenario tests the functionality of the SA Tool application when an operator enters a new passcode twice, but the passcodes do not match. The application should validate that the new passcodes entered twice are not the same, and then notify the operator with a corresponding error message."}, {"Function_Flow_Name": "Passcode", "Sub_Flow_Name": "Reset passcode", "Use_Case_Name": "Reset Passcode: Operator attempts to reset the passcode to their locked operator account", "Test_Scnario": "Reset Passcode: Account validation fails after passcode has been reset", "Test_Sce_Description": "This scenario tests the functionality of the SA Tool application when the account validation fails after the passcode has been reset. The application should perform the account validation check and fail due to loss of connectivity, then redirect the user to the SA Tool sign-in screen and inform the operator that the passcode has been successfully reset."}, {"Function_Flow_Name": "Passcode", "Sub_Flow_Name": "Reset passcode", "Use_Case_Name": "Reset Passcode: Operator attempts to reset the passcode to their locked operator account", "Test_Scnario": "Forgot Passcode - New passcode is the same as the current passcode", "Test_Sce_Description": "This scenario tests the functionality of the SA Tool application when the new passcode entered by the operator is the same as the current passcode. The application should detect that the new passcode is the same as the current passcode in the User management service, notify the operator with a corresponding error message and clear the new passcode fields."}, {"Function_Flow_Name": "Passcode", "Sub_Flow_Name": "Reset passcode", "Use_Case_Name": "Reset Passcode: Operator attempts to reset the passcode to their locked operator account", "Test_Scnario": "Operator Sign-Off", "Test_Sce_Description": "This scenario tests the functionality of the SA Tool application when an operator signs off. The application should request for a confirmation that the Operator would like to sign-out of their current shift, display a digital end-of-shift statistics report to the operator, and send a shift statistics email to the established email distribution list once the operator successfully signs-off."}, {"Function_Flow_Name": "Passcode", "Sub_Flow_Name": "Reset passcode", "Use_Case_Name": "Reset Passcode: Operator attempts to reset the passcode to their locked operator account", "Test_Scnario": "Reset passcode when network connectivity is unavailable", "Test_Sce_Description": "This scenario tests the functionality of the SA Tool application when the network connectivity is unavailable. The application should notify the operator with a corresponding error message when the operator tries to reset their passcode while the SA Tool is offline."}, {"Function_Flow_Name": "Passcode", "Sub_Flow_Name": "Reset passcode", "Use_Case_Name": "Reset Passcode: Operator enters an invalid operator badge ID when resetting their passcode", "Test_Scnario": "Reset Passcode: Account validation fails after passcode has been reset", "Test_Sce_Description": "This scenario tests the functionality of the system when the account validation fails after the passcode has been reset. The system should redirect the user to the sign-in screen and inform the operator that the passcode has been successfully reset. The operator should be able to sign in to the application with their new passcode when connectivity is reached, or account is unlocked."}, {"Function_Flow_Name": "Passcode", "Sub_Flow_Name": "Reset passcode", "Use_Case_Name": "Reset Passcode: Operator enters an invalid operator badge ID when resetting their passcode", "Test_Scnario": "Forgot Passcode - New passcode is the same as the current passcode", "Test_Sce_Description": "This scenario tests the functionality of the system when the new passcode entered by the user is the same as the current passcode. The system should detect this and notify the operator with a corresponding error message and clear the new passcode fields. The system should also increment the invalid answer counter by one to track the number of invalid reset passcode attempts."}, {"Function_Flow_Name": "Passcode", "Sub_Flow_Name": "Reset passcode", "Use_Case_Name": "Reset Passcode: Operator enters an invalid operator badge ID when resetting their passcode", "Test_Scnario": "Operator Sign-Off", "Test_Sce_Description": "This scenario tests the functionality of the system when the operator signs off. The system should request for a confirmation that the Operator would like to sign-out of their current shift. Once confirmed, the system should display a digital end-of-shift statistics report to the operator. The system should also close off the current shift and automatically print the statistics report if the printer is connected to the tool. A shift statistics email should be generated and sent to the established email distribution list whenever a shift is closed."}, {"Function_Flow_Name": "Passcode", "Sub_Flow_Name": "Reset passcode", "Use_Case_Name": "Reset Passcode: Operator enters an invalid operator badge ID when resetting their passcode", "Test_Scnario": "Operator Signs in for the First Time Using a Temporary Passcode and Network is Not Available", "Test_Sce_Description": "This scenario tests the functionality of the system when the operator signs in for the first time using a temporary passcode and the network is not available. The system should display a message to the operator requesting them to sign in when network is available."}, {"Function_Flow_Name": "Passcode", "Sub_Flow_Name": "Reset passcode", "Use_Case_Name": "Reset Passcode: Operator enters an invalid operator badge ID when resetting their passcode", "Test_Scnario": "Operator Reaches the Maximum Number of Login Attempts", "Test_Sce_Description": "This scenario tests the functionality of the system when the operator reaches the maximum number of login attempts. The system should deny access to that operator until the operator badge ID is unlocked by the Operations user or automatically unlocked after a configurable amount of time."}, {"Function_Flow_Name": "Passcode", "Sub_Flow_Name": "Reset passcode", "Use_Case_Name": "Reset Passcode: Operator enters an invalid operator badge ID when resetting their passcode", "Test_Scnario": "New Passcode is the Same as The Temporary Passcode", "Test_Sce_Description": "This scenario tests the functionality of the system when the new passcode entered by the operator is the same as the temporary passcode. The system should detect this and inform the user of the error and clear the new passcode fields."}, {"Function_Flow_Name": "Passcode", "Sub_Flow_Name": "Reset passcode", "Use_Case_Name": "Reset Passcode: Operator enters an invalid operator badge ID when resetting their passcode", "Test_Scnario": "New Passcode Length Does Not Meet Pre-Defined Criteria", "Test_Sce_Description": "This scenario tests the functionality of the system when the new passcode entered by the operator does not meet the pre-defined criteria. The system should not enable the submit button until the passcode entered is the correct length."}, {"Function_Flow_Name": "Passcode", "Sub_Flow_Name": "Reset passcode", "Use_Case_Name": "Reset Passcode: Operator enters invalid security question answers", "Test_Scnario": "Reset Passcode: Operator enters invalid security question answers", "Test_Sce_Description": "This scenario tests the functionality of the system when the operator enters invalid security question answers during the passcode reset process. The system should validate the entered answers against the ones stored in the User management service and display an error message if they do not match."}, {"Function_Flow_Name": "Passcode", "Sub_Flow_Name": "Reset passcode", "Use_Case_Name": "Reset Passcode: Operator enters invalid security question answers", "Test_Scnario": "Reset Passcode: Operator enters new passcode twice, but new passcodes do not match", "Test_Sce_Description": "This scenario tests the functionality of the system when the operator enters a new passcode twice, but the entered passcodes do not match. The system should validate the entered passcodes and display an error message if they do not match."}, {"Function_Flow_Name": "Passcode", "Sub_Flow_Name": "Reset passcode", "Use_Case_Name": "Reset Passcode: Operator enters invalid security question answers", "Test_Scnario": "Reset Passcode: Operator enters an invalid operator badge ID when resetting their passcode", "Test_Sce_Description": "This scenario tests the functionality of the system when the operator enters an invalid badge ID during the passcode reset process. The system should validate the entered badge ID against the ones stored in the User management service and display an error message if it is invalid."}, {"Function_Flow_Name": "Passcode", "Sub_Flow_Name": "Reset passcode", "Use_Case_Name": "Reset Passcode: Operator enters invalid security question answers", "Test_Scnario": "Reset Passcode: Operator attempts to reset the passcode to their locked operator account", "Test_Sce_Description": "This scenario tests the functionality of the system when the operator attempts to reset the passcode of a locked account. The system should detect that the account is locked and display an error message."}, {"Function_Flow_Name": "Passcode", "Sub_Flow_Name": "Reset passcode", "Use_Case_Name": "Reset Passcode: Operator enters invalid security question answers", "Test_Scnario": "Reset passcode when network connectivity is unavailable", "Test_Sce_Description": "This scenario tests the functionality of the system when the network connectivity is unavailable during the passcode reset process. The system should detect the lack of network connectivity and display an error message."}, {"Function_Flow_Name": "Passcode", "Sub_Flow_Name": "Reset passcode", "Use_Case_Name": "Reset Passcode: Operator enters invalid security question answers", "Test_Scnario": "Reset Passcode: Account validation fails after passcode has been reset", "Test_Sce_Description": "This scenario tests the functionality of the system when the account validation fails after the passcode has been reset. The system should perform a final account validation after the passcode reset and display an error message if the validation fails."}, {"Function_Flow_Name": "Passcode", "Sub_Flow_Name": "Reset passcode", "Use_Case_Name": "Reset Passcode: Operator enters invalid security question answers", "Test_Scnario": "Forgot Passcode - New passcode is the same as the current passcode", "Test_Sce_Description": "This scenario tests the functionality of the system when the operator enters a new passcode that is the same as the current passcode during the passcode reset process. The system should validate the new passcode against the current passcode and display an error message if they are the same."}, {"Function_Flow_Name": "Passcode", "Sub_Flow_Name": "Reset passcode", "Use_Case_Name": "Reset Passcode: Operator enters invalid security question answers", "Test_Scnario": "Operator Sign-Off", "Test_Sce_Description": "This scenario tests the functionality of the system when the operator signs off from the SA Tool application. The system should close off the current shift, generate and send a shift statistics email, and display the Operator sign-in screen."}, {"Function_Flow_Name": "Passcode", "Sub_Flow_Name": "Reset passcode", "Use_Case_Name": "Reset Passcode: Operator enters new passcode twice, but new passcodes do not match", "Test_Scnario": "Reset Passcode: Account validation fails after passcode has been reset", "Test_Sce_Description": "This scenario tests the functionality of the SA Tool application when it loses connectivity or the Operator account is locked after the passcode has been reset. The application should redirect the user to the sign-in screen and inform the operator that the passcode has been successfully reset."}, {"Function_Flow_Name": "Passcode", "Sub_Flow_Name": "Reset passcode", "Use_Case_Name": "Reset Passcode: Operator enters new passcode twice, but new passcodes do not match", "Test_Scnario": "Forgot Passcode - New passcode is the same as the current passcode", "Test_Sce_Description": "This scenario tests the functionality of the SA Tool application when the new passcode entered by the operator is the same as the current passcode. The application should notify the operator with an error message and clear the new passcode fields."}, {"Function_Flow_Name": "Passcode", "Sub_Flow_Name": "Reset passcode", "Use_Case_Name": "Reset Passcode: Operator enters new passcode twice, but new passcodes do not match", "Test_Scnario": "Operator Sign-Off", "Test_Sce_Description": "This scenario tests the procedures for authorized operators to sign-off the SA Tool application. The application should send a shift statistics email to the established email distribution list once the operator successfully signs-off."}, {"Function_Flow_Name": "Passcode", "Sub_Flow_Name": "Reset passcode", "Use_Case_Name": "Reset Passcode: Operator enters new passcode twice, but new passcodes do not match", "Test_Scnario": "Reset Passcode: Operator enters new passcode twice, but new passcodes do not match", "Test_Sce_Description": "This scenario tests the functionality of the SA Tool application when the operator enters a new passcode twice, but the new passcodes do not match. The application should notify the operator with a corresponding error message."}, {"Function_Flow_Name": "Passcode", "Sub_Flow_Name": "Reset passcode", "Use_Case_Name": "Reset Passcode: Operator enters new passcode twice, but new passcodes do not match", "Test_Scnario": "Reset Passcode: Operator attempts to reset the passcode to their locked operator account", "Test_Sce_Description": "This scenario tests the functionality of the SA Tool application when the operator attempts to reset the passcode to their locked operator account. The application should notify the operator with a corresponding error message."}, {"Function_Flow_Name": "Passcode", "Sub_Flow_Name": "Reset passcode", "Use_Case_Name": "Reset Passcode: Operator enters new passcode twice, but new passcodes do not match", "Test_Scnario": "Reset Passcode: Operator enters an invalid operator badge ID when resetting their passcode", "Test_Sce_Description": "This scenario tests the functionality of the SA Tool application when the operator enters an invalid operator badge ID when resetting their passcode. The application should notify the operator with a corresponding error message."}, {"Function_Flow_Name": "Passcode", "Sub_Flow_Name": "Reset passcode", "Use_Case_Name": "Reset Passcode: Operator enters new passcode twice, but new passcodes do not match", "Test_Scnario": "Reset Passcode: Operator enters invalid security question answers", "Test_Sce_Description": "This scenario tests the functionality of the SA Tool application when the operator enters invalid security question answers. The application should notify the operator with a corresponding error message."}, {"Function_Flow_Name": "Operator sign-in", "Sub_Flow_Name": "First-time user", "Use_Case_Name": "Operator Signs in for the First Time Using a Temporary Passcode and Network is Not Available", "Test_Scnario": "Network Unavailability during First Time Sign-in", "Test_Sce_Description": "Verify that the application correctly handles the scenario when the network is unavailable during the first time sign-in. The application should display a message to the operator requesting them to sign in when network is available."}, {"Function_Flow_Name": "Operator sign-in", "Sub_Flow_Name": "First-time user", "Use_Case_Name": "Operator Signs in for the First Time Using a Temporary Passcode and Network is Not Available", "Test_Scnario": "Maximum Number of Login Attempts", "Test_Sce_Description": "Verify that the application correctly handles the scenario when the maximum number of sign-in attempts has been reached. The application should lock the operator user account and inform the operator that the user account associated with the operator ID is locked."}, {"Function_Flow_Name": "Operator sign-in", "Sub_Flow_Name": "First-time user", "Use_Case_Name": "Operator Signs in for the First Time Using a Temporary Passcode and Network is Not Available", "Test_Scnario": "New Passcode is Same as Temporary Passcode", "Test_Sce_Description": "Verify that the application correctly handles the scenario when the new passcode entered by the operator is the same as the temporary passcode. The application should inform the user of the error and clear the new passcode fields."}, {"Function_Flow_Name": "Operator sign-in", "Sub_Flow_Name": "First-time user", "Use_Case_Name": "Operator Signs in for the First Time Using a Temporary Passcode and Network is Not Available", "Test_Scnario": "New Passcode Length Does Not Meet Pre-Defined Criteria", "Test_Sce_Description": "Verify that the application correctly handles the scenario when the new passcode length does not meet the pre-defined criteria. The application should not enable the submit button until the passcode entered is the correct length."}, {"Function_Flow_Name": "Operator sign-in", "Sub_Flow_Name": "First-time user", "Use_Case_Name": "Operator Signs in for the First Time Using a Temporary Passcode and Network is Not Available", "Test_Scnario": "Incorrect Sign-on Attempts", "Test_Sce_Description": "Verify that the application correctly handles the scenario when the operator enters an invalid passcode at the 10th attempt. The device should inform the operator that the passcode is incorrect for the counted number of times, and a re-try is permitted after 30 seconds."}, {"Function_Flow_Name": "Operator sign-in", "Sub_Flow_Name": "First-time user", "Use_Case_Name": "Operator Signs in for the First Time Using a Temporary Passcode and Network is Not Available", "Test_Scnario": "Successful First-Time Sign-in", "Test_Sce_Description": "Verify that the application correctly handles the scenario when the operator enters a valid operator badge ID and temporary passcode combination. The application should inform the operator of successful first-time sign-in and display the Security Setup screen."}, {"Function_Flow_Name": "Operator sign-in", "Sub_Flow_Name": "First-time user", "Use_Case_Name": "Operator Signs in for the First Time Using a Temporary Passcode and Network is Not Available", "Test_Scnario": "Security Questions and New Passcode Setup", "Test_Sce_Description": "Verify that the application correctly handles the scenario when the operator sets up security questions and a new passcode. The application should validate that the new passcode meets passcode length criteria and does not match the temporary passcode."}, {"Function_Flow_Name": "Operator sign-in", "Sub_Flow_Name": "First-time user", "Use_Case_Name": "Operator Signs in for the First Time Using a Temporary Passcode and Network is Not Available", "Test_Scnario": "Shift Parameters Selection", "Test_Sce_Description": "Verify that the application correctly handles the scenario when the operator selects their parameters for the shift. A confirmation screen should be displayed to the operator and the SA Tool should start the operator\u2019s shift."}, {"Function_Flow_Name": "Operator sign-in", "Sub_Flow_Name": "First-time user", "Use_Case_Name": "Operator Signs in for the First Time Using a Temporary Passcode and Network is Not Available", "Test_Scnario": "Operator Enters Incorrect Username or Passcode", "Test_Sce_Description": "Verify that the application correctly handles the scenario when the operator enters an incorrect username or passcode. The application should display an error message and prompt the operator to re-enter the correct credentials."}, {"Function_Flow_Name": "Operator sign-in", "Sub_Flow_Name": "First-time user", "Use_Case_Name": "Operator Reaches the Maximum Number of Login Attempts", "Test_Scnario": "Network Unavailability", "Test_Sce_Description": "Verify that the application displays a message to the operator requesting them to sign in when network is available when the operator tries to sign in for the first time using a temporary passcode and the network is not available."}, {"Function_Flow_Name": "Operator sign-in", "Sub_Flow_Name": "First-time user", "Use_Case_Name": "Operator Reaches the Maximum Number of Login Attempts", "Test_Scnario": "Maximum Number of Login Attempts", "Test_Sce_Description": "Verify that the application records a cumulative number of unsuccessful sign on attempts for a single valid operator badge ID on a SA Tool. This counter should be maintained throughout the device reboot. When the number of unsuccessful sign-in attempts reaches the maximum number of sign-on attempts, the SA Tool application should deny access to that operator until the operator badge ID is unlocked by the CLIENT Operations user or automatically unlocked after a configurable amount of time."}, {"Function_Flow_Name": "Operator sign-in", "Sub_Flow_Name": "First-time user", "Use_Case_Name": "Operator Reaches the Maximum Number of Login Attempts", "Test_Scnario": "Account Locking", "Test_Sce_Description": "Verify that the SA Tool application locks the operator user account when the maximum number of sign-in attempts has been reached. The application should inform the operator that the user account associated with the operator ID is locked and clear the passcode field in the sign-in screen."}, {"Function_Flow_Name": "Operator sign-in", "Sub_Flow_Name": "First-time user", "Use_Case_Name": "Operator Reaches the Maximum Number of Login Attempts", "Test_Scnario": "New Passcode is Same as Temporary Passcode", "Test_Sce_Description": "Verify that the SA Tool application detects that the new passcode is the same as the temporary passcode in the Subsystem and informs the user of the error and clears the new passcode fields."}, {"Function_Flow_Name": "Operator sign-in", "Sub_Flow_Name": "First-time user", "Use_Case_Name": "Operator Reaches the Maximum Number of Login Attempts", "Test_Scnario": "New Passcode Length Does Not Meet Pre-Defined Criteria", "Test_Sce_Description": "Verify that the SA Tool will not enable the submit button until the passcode entered is the correct length."}, {"Function_Flow_Name": "Operator sign-in", "Sub_Flow_Name": "First-time user", "Use_Case_Name": "Operator Reaches the Maximum Number of Login Attempts", "Test_Scnario": "Incorrect Sign-On Attempts", "Test_Sce_Description": "Verify that the device informs the operator that the passcode is incorrect for the counted number of times, and a re-try is permitted after 30 seconds. During the 30-second countdown, the user should not be allowed to attempt sign on. After 30 seconds, the operator should be able to try again."}, {"Function_Flow_Name": "Operator sign-in", "Sub_Flow_Name": "First-time user", "Use_Case_Name": "Operator Reaches the Maximum Number of Login Attempts", "Test_Scnario": "First-Time User Sign-In", "Test_Sce_Description": "Verify that the application allows authorized operators to sign-in to the SA Tool application as a first-time user. The operators should be able to enter their operator badge ID and temporary passcode as login credentials for the SA Tool application. The operator should be required to change their temporary passcode upon initial log-in."}, {"Function_Flow_Name": "Operator sign-in", "Sub_Flow_Name": "First-time user", "Use_Case_Name": "Operator Reaches the Maximum Number of Login Attempts", "Test_Scnario": "Online and Local Authentication", "Test_Sce_Description": "Verify that the application supports two types of login authentications - Online Authentication and Local Authentication. Online authentication should be required when the device is online for first time users and after the local cache is cleaned based on a configurable credential caching duration. Local authentication should be used for users re-logging into the same SA Tool and whose credentials have not been cleaned based on the configurable credential caching duration."}, {"Function_Flow_Name": "Operator sign-in", "Sub_Flow_Name": "First-time user", "Use_Case_Name": "Operator Reaches the Maximum Number of Login Attempts", "Test_Scnario": "Security Setup", "Test_Sce_Description": "Verify that the SA Tool application notifies the operator that they will need to set up security questions and a new passcode. The new passcode must be a 4-digit number. The operator should be able to select 2 security questions from a list of pre-defined security questions and provide their answers to the questions."}, {"Function_Flow_Name": "Operator sign-in", "Sub_Flow_Name": "First-time user", "Use_Case_Name": "Operator Reaches the Maximum Number of Login Attempts", "Test_Scnario": "Passcode Validation", "Test_Sce_Description": "Verify that the SA Tool application validates that the new passcode meets passcode length criteria by connecting to the user management service. If the new passcode length meets the defined criteria, the SA Tool application should indicate to the operator that the passcode was successfully changed and displays the Inspection Parameters screen."}, {"Function_Flow_Name": "Operator sign-in", "Sub_Flow_Name": "First-time user", "Use_Case_Name": "New Passcode is the Same as The Temporary Passcode", "Test_Scnario": "Network Unavailability during First Time Sign-in", "Test_Sce_Description": "Verify that the application displays a message to the operator requesting them to sign in when network is available, when the operator tries to sign in for the first time using a temporary passcode and the network is not available."}, {"Function_Flow_Name": "Operator sign-in", "Sub_Flow_Name": "First-time user", "Use_Case_Name": "New Passcode is the Same as The Temporary Passcode", "Test_Scnario": "Maximum Number of Login Attempts", "Test_Sce_Description": "Verify that the application records a cumulative number of unsuccessful sign on attempts for a single valid operator badge ID on a SA Tool. This counter should be maintained throughout the device reboot. When the number of unsuccessful sign-in attempts reaches the maximum number of sign-on attempts, the application should deny access to that operator until the operator badge ID is unlocked by the CLIENT Operations user or automatically unlocked after a configurable amount of time."}, {"Function_Flow_Name": "Operator sign-in", "Sub_Flow_Name": "First-time user", "Use_Case_Name": "New Passcode is the Same as The Temporary Passcode", "Test_Scnario": "New Passcode is the Same as The Temporary Passcode", "Test_Sce_Description": "Verify that the application detects that the new passcode is the same as the temporary passcode in the Subsystem and informs the user of the error and clears the new passcode fields."}, {"Function_Flow_Name": "Operator sign-in", "Sub_Flow_Name": "First-time user", "Use_Case_Name": "New Passcode is the Same as The Temporary Passcode", "Test_Scnario": "New Passcode Length Does Not Meet Pre-Defined Criteria", "Test_Sce_Description": "Verify that the application does not enable the submit button until the passcode entered is the correct length."}, {"Function_Flow_Name": "Operator sign-in", "Sub_Flow_Name": "First-time user", "Use_Case_Name": "New Passcode is the Same as The Temporary Passcode", "Test_Scnario": "Sign-In to SA Tool application at the beginning of shift (Existing User)", "Test_Sce_Description": "Verify that the application allows authorized operators to sign-in to the SA Tool application as an existing user (not a first-time user). Authorized operators should be able to enter their operator badge ID and passcode as login credentials for the SA Tool application."}, {"Function_Flow_Name": "Operator sign-in", "Sub_Flow_Name": "First-time user", "Use_Case_Name": "New Passcode is the Same as The Temporary Passcode", "Test_Scnario": "Sign-in without network connection: Operator\u2019s log-in details are stored in the local cache", "Test_Sce_Description": "Verify that the application checks that the operator badge ID and passcode combination entered are valid based on operator credentials stored in the local cache when the SA Tool does not have network connection."}, {"Function_Flow_Name": "Operator sign-in", "Sub_Flow_Name": "First-time user", "Use_Case_Name": "New Passcode is the Same as The Temporary Passcode", "Test_Scnario": "Sign-in while another operator is signed-in to the same device", "Test_Sce_Description": "Verify that the application allows an operator to sign-in while another operator is signed-in to the same device."}, {"Function_Flow_Name": "Operator sign-in", "Sub_Flow_Name": "First-time user", "Use_Case_Name": "New Passcode Length Does Not Meet Pre-Defined Criteria", "Test_Scnario": "New passcode is the same as the current passcode", "Test_Sce_Description": "Verify that the system detects and notifies the operator when the new passcode entered is the same as the current passcode. The system should not allow the operator to proceed with the same passcode."}, {"Function_Flow_Name": "Operator sign-in", "Sub_Flow_Name": "First-time user", "Use_Case_Name": "New Passcode Length Does Not Meet Pre-Defined Criteria", "Test_Scnario": "New passcode length does not meet pre-defined criteria", "Test_Sce_Description": "Verify that the system checks the length of the new passcode entered by the operator. The system should not enable the submit button until the passcode entered meets the pre-defined length criteria."}, {"Function_Flow_Name": "Operator sign-in", "Sub_Flow_Name": "First-time user", "Use_Case_Name": "New Passcode Length Does Not Meet Pre-Defined Criteria", "Test_Scnario": "Maximum number of change attempts reached", "Test_Sce_Description": "Verify that the system tracks the number of unsuccessful change passcode attempts for a single valid operator ID. When the maximum number of attempts is reached, the system should lock the operator account and redirect the user to the sign-in screen with a notification that the account is locked."}, {"Function_Flow_Name": "Operator sign-in", "Sub_Flow_Name": "First-time user", "Use_Case_Name": "New Passcode Length Does Not Meet Pre-Defined Criteria", "Test_Scnario": "Account validation fails after passcode reset", "Test_Sce_Description": "Verify that the system handles the scenario where account validation fails due to loss of connectivity after the passcode has been reset. The system should redirect the user to the home screen and inform the operator that the passcode has been successfully reset."}, {"Function_Flow_Name": "Operator sign-in", "Sub_Flow_Name": "First-time user", "Use_Case_Name": "New Passcode Length Does Not Meet Pre-Defined Criteria", "Test_Scnario": "First time sign-in with temporary passcode and network is unavailable", "Test_Sce_Description": "Verify that the system handles the scenario where the network is unavailable when the operator tries to sign in for the first time using a temporary passcode. The system should display a message requesting the operator to sign in when the network is available."}, {"Function_Flow_Name": "Operator sign-in", "Sub_Flow_Name": "First-time user", "Use_Case_Name": "New Passcode Length Does Not Meet Pre-Defined Criteria", "Test_Scnario": "Maximum number of login attempts reached", "Test_Sce_Description": "Verify that the system tracks the number of unsuccessful sign-in attempts for a single valid operator badge ID. When the maximum number of attempts is reached, the system should lock the operator account and inform the operator that the account is locked."}, {"Function_Flow_Name": "Operator sign-in", "Sub_Flow_Name": "First-time user", "Use_Case_Name": "New Passcode Length Does Not Meet Pre-Defined Criteria", "Test_Scnario": "New passcode is the same as the temporary passcode", "Test_Sce_Description": "Verify that the system detects and notifies the operator when the new passcode entered is the same as the temporary passcode. The system should not allow the operator to proceed with the same passcode."}, {"Function_Flow_Name": "Operator sign-in", "Sub_Flow_Name": "First-time user", "Use_Case_Name": "New Passcode Length Does Not Meet Pre-Defined Criteria", "Test_Scnario": "Performance of the SA Tool application", "Test_Sce_Description": "Verify the performance of the SA Tool application by simulating multiple operators trying to change their passcodes at the same time. The system should be able to handle the load without any degradation in performance."}, {"Function_Flow_Name": "Operator sign-in", "Sub_Flow_Name": "First-time user", "Use_Case_Name": "New Passcode Length Does Not Meet Pre-Defined Criteria", "Test_Scnario": "Security of the SA Tool application", "Test_Sce_Description": "Verify the security of the SA Tool application by attempting to bypass the passcode change process or trying to unlock a locked account without proper authorization. The system should prevent any unauthorized access."}, {"Function_Flow_Name": "Operator sign-in", "Sub_Flow_Name": "Operator sign-off", "Use_Case_Name": "Shut-Down SA Tool via Physical Device Button", "Test_Scnario": "Shut-Down SA Tool via Physical Device Button", "Test_Sce_Description": "Verify that the operator is able to shut down the SA Tool by pressing and holding the physical power button. The SA Tool should display a confirmation message with the options 'Power off' and other options. Upon selecting 'Power off' and confirming shut-down, the device should turn off."}, {"Function_Flow_Name": "Operator sign-in", "Sub_Flow_Name": "Operator sign-off", "Use_Case_Name": "Shut-Down SA Tool via Physical Device Button", "Test_Scnario": "Sign In New Operator", "Test_Sce_Description": "Verify that a new operator is able to sign in to the SA Tool using their user ID and passcode. The system should display a message indicating that the current operator is signed in and ask if the new operator wants to sign in anyway. Upon selecting 'Yes', the current operator should be signed off from the SA Tool."}, {"Function_Flow_Name": "Operator sign-in", "Sub_Flow_Name": "Operator sign-off", "Use_Case_Name": "Shut-Down SA Tool via Physical Device Button", "Test_Scnario": "SA Tool Out-of-Service State", "Test_Sce_Description": "Verify that when the SA Tool is in 'Out-of-Service' state, it is unable to accept a Farecard for any kind of functionality and may require maintenance to restore out-of-order components. If an operator is signed-in and the device goes into out-of-service state, the SA Tool application should not close the operator\u2019s shift unless the operator has requested to sign off."}, {"Function_Flow_Name": "Operator sign-in", "Sub_Flow_Name": "Operator sign-off", "Use_Case_Name": "Shut-Down SA Tool via Physical Device Button", "Test_Scnario": "SA Tool Standby State", "Test_Sce_Description": "Verify that the SA Tool switches into a Standby state where the screen turns off after remaining inactive for a configurable period of time. In this state, the SA tool should disconnect from all the peripherals i.e. the card reader, PIN pad and the printer to conserve battery life. An operator should be able to bring the device back into In-Service state by pressing the physical power button and signing in to the device lock screen."}, {"Function_Flow_Name": "Operator sign-in", "Sub_Flow_Name": "Operator sign-off", "Use_Case_Name": "Shut-Down SA Tool via Physical Device Button", "Test_Scnario": "SA Tool Reboot", "Test_Sce_Description": "Verify that the operator is able to manually reboot the SA Tool by pressing and holding the physical power button. The SA Tool should display a confirmation message with the options 'Power off' and other options. Upon selecting the restart option, the device should restart by turning off and powering on."}, {"Function_Flow_Name": "Operator sign-in", "Sub_Flow_Name": "Operator sign-off", "Use_Case_Name": "Shut-Down SA Tool via Physical Device Button", "Test_Scnario": "SA Tool Revenue Mode", "Test_Sce_Description": "Verify that upon logon, the operator is able to select the Revenue Mode which allows them to interact with customers. In this mode, the operator should be able to perform inspection, fare payments, sales, refunds/reversals, farecard queries, and other customer service gestures. The SA tool should only have access to the EPT in the revenue mode and accept the credit and debit payments."}, {"Function_Flow_Name": "Operator sign-in", "Sub_Flow_Name": "Operator sign-off", "Use_Case_Name": "Shut-Down SA Tool via Physical Device Button", "Test_Scnario": "SA Tool Training Mode", "Test_Sce_Description": "Verify that the Training Mode allows the SA Tool operator to mimic all functionality available within Sales Mode without accepting payment, and only sending non-revenue transactions. Only non-revenue Farecard should be accepted in Training Mode. All paper tickets printed from the SA Tool should indicate that they were printed while in training mode."}, {"Function_Flow_Name": "Operator sign-in", "Sub_Flow_Name": "Operator sign-off", "Use_Case_Name": "Shut-Down SA Tool via Physical Device Button", "Test_Scnario": "SA Tool User Access", "Test_Sce_Description": "Verify that different users have different access rights. For example, SA Tool Operators should have access to Revenue Mode, Core Functionality - Sales, Fare Payment, Inspection, SA Tool Remote Access, Unblock Farecard, and Modify Card Concession. However, Training users should not have access to these functionalities."}, {"Function_Flow_Name": "Operator sign-in", "Sub_Flow_Name": "Operator sign-off", "Use_Case_Name": "Shut-Down SA Tool via Physical Device Button", "Test_Scnario": "SA Tool Device Parameter Tool Configurations", "Test_Sce_Description": "Verify that the configurations for the SA Tool introduced under the Open Payments release in the Device Parameter Tool are correctly implemented and functioning as expected."}, {"Function_Flow_Name": "Operator sign-in", "Sub_Flow_Name": "Operator sign-off", "Use_Case_Name": "Reboot SA Tool", "Test_Scnario": "Reboot SA Tool - Normal Flow", "Test_Sce_Description": "Verify that the SA Tool reboots successfully when the operator selects the restart option from the power menu. The device should turn off and then power on again."}, {"Function_Flow_Name": "Operator sign-in", "Sub_Flow_Name": "Operator sign-off", "Use_Case_Name": "Reboot SA Tool", "Test_Scnario": "Reboot SA Tool - Airplane Mode", "Test_Sce_Description": "Verify that the SA Tool does not perform any inspections, counters, and queries when the Airplane Mode is enabled. The operator should be able to disable the Airplane Mode by pressing and holding the power button and selecting the Airplane Mode option."}, {"Function_Flow_Name": "Operator sign-in", "Sub_Flow_Name": "Operator sign-off", "Use_Case_Name": "Reboot SA Tool", "Test_Scnario": "Reboot SA Tool - Sound Levels", "Test_Sce_Description": "Verify that the device sound levels can be adjusted using the side buttons on the SA Tool. The minimum limit for volume should be configurable."}, {"Function_Flow_Name": "Operator sign-in", "Sub_Flow_Name": "Operator sign-off", "Use_Case_Name": "Reboot SA Tool", "Test_Scnario": "Reboot SA Tool - Power Off Option", "Test_Sce_Description": "Verify that the SA Tool turns off when the operator selects the 'Power off' option from the power menu."}, {"Function_Flow_Name": "Operator sign-in", "Sub_Flow_Name": "Operator sign-off", "Use_Case_Name": "Reboot SA Tool", "Test_Scnario": "Reboot SA Tool - Other Options", "Test_Sce_Description": "Verify that the other options in the power menu (e.g. Reset, Airplane Mode, etc.) are standard functions from the device\u2019s operating system and cannot be modified. These options should not be required for running the SA Tool application."}, {"Function_Flow_Name": "Operator sign-in", "Sub_Flow_Name": "Operator sign-off", "Use_Case_Name": "Reboot SA Tool", "Test_Scnario": "Reboot SA Tool - Exception Flow", "Test_Sce_Description": "Verify that the SA Tool goes to error state when it performs initial self-diagnostic checks and finds critical failures."}, {"Function_Flow_Name": "Operator sign-in", "Sub_Flow_Name": "Operator sign-off", "Use_Case_Name": "Reboot SA Tool", "Test_Scnario": "Reboot SA Tool - Alternate Flow", "Test_Sce_Description": "Verify that the SA Tool can operate in offline mode when the device is unable to connect to a network. The 'Forget passcode' and 'passcode change' functionalities should be unavailable when the device is offline."}, {"Function_Flow_Name": "Operator sign-in", "Sub_Flow_Name": "Operator sign-off", "Use_Case_Name": "Reboot SA Tool", "Test_Scnario": "Reboot SA Tool - Performance", "Test_Sce_Description": "Verify that the SA Tool reboots within an acceptable time frame when the operator selects the restart option from the power menu."}, {"Function_Flow_Name": "Operator sign-in", "Sub_Flow_Name": "Operator sign-off", "Use_Case_Name": "Reboot SA Tool", "Test_Scnario": "Reboot SA Tool - Security", "Test_Sce_Description": "Verify that the SA Tool maintains the security of the data during the reboot process. No data should be lost or corrupted during the reboot."}, {"Function_Flow_Name": "Operator sign-in", "Sub_Flow_Name": "Operator sign-off", "Use_Case_Name": "Sign-in without network connection: Operator\u2019s log-in details are stored in the local cache", "Test_Scnario": "Sign-in without network connection", "Test_Sce_Description": "Verify that the operator is able to sign-in to the SA Tool application without a network connection using the log-in details stored in the local cache. The application should validate the operator badge ID and passcode combination based on the credentials stored in the local cache."}, {"Function_Flow_Name": "Operator sign-in", "Sub_Flow_Name": "Operator sign-off", "Use_Case_Name": "Sign-in without network connection: Operator\u2019s log-in details are stored in the local cache", "Test_Scnario": "Sign-in while another operator is signed-in", "Test_Sce_Description": "Verify that the SA Tool application notifies the operator that another operator is currently signed-in to the same device. The application should ask the operator if they would like to continue signing in with their credentials. If yes, the application should close the shift of the currently signed-in operator and open a shift for the new operator."}, {"Function_Flow_Name": "Operator sign-in", "Sub_Flow_Name": "Operator sign-off", "Use_Case_Name": "Sign-in without network connection: Operator\u2019s log-in details are stored in the local cache", "Test_Scnario": "Sign-in while the device is on standby state", "Test_Sce_Description": "Verify that the operator is able to activate the device from standby state and sign-in to the SA Tool application. The application should require the operator to enter a passcode at the device lock screen and then display the sign-in screen. If the operator badge ID and passcode combination are valid, the application should resume the operator\u2019s current shift."}, {"Function_Flow_Name": "Operator sign-in", "Sub_Flow_Name": "Operator sign-off", "Use_Case_Name": "Sign-in without network connection: Operator\u2019s log-in details are stored in the local cache", "Test_Scnario": "Sign-in with no network connectivity after passcode reset", "Test_Sce_Description": "Verify that the operator is able to sign-in to the SA Tool application without network connectivity after the passcode has been reset. The new login credentials should be stored in the application after the passcode reset, allowing the operator to log-in."}, {"Function_Flow_Name": "Operator sign-in", "Sub_Flow_Name": "Operator sign-off", "Use_Case_Name": "Sign-in without network connection: Operator\u2019s log-in details are stored in the local cache", "Test_Scnario": "Operator enters new security questions/answers and passcode", "Test_Sce_Description": "Verify that the SA Tool application prompts the operator to select 2 new security questions and provide a new passcode when the operator\u2019s security questions/answers and passcode had been reset. The operator should be able to save the new security questions/answers and passcode successfully."}, {"Function_Flow_Name": "Operator sign-in", "Sub_Flow_Name": "Operator sign-off", "Use_Case_Name": "Sign-in without network connection: Operator\u2019s log-in details are stored in the local cache", "Test_Scnario": "Operator\u2019s current passcode has expired", "Test_Sce_Description": "Verify that the SA Tool application prompts the operator to enter a new passcode when the operator\u2019s current passcode has expired. The operator should be able to save the new passcode successfully."}, {"Function_Flow_Name": "Operator sign-in", "Sub_Flow_Name": "Operator sign-off", "Use_Case_Name": "Sign-in without network connection: Operator\u2019s log-in details are stored in the local cache", "Test_Scnario": "Operator\u2019s passcode will expire in the future", "Test_Sce_Description": "Verify that the SA Tool application notifies the operator that their passcode will expire in the future. The operator should be able to update their passcode before it expires."}, {"Function_Flow_Name": "Operator sign-in", "Sub_Flow_Name": "Operator sign-off", "Use_Case_Name": "Sign-in without network connection: Operator\u2019s log-in details are stored in the local cache", "Test_Scnario": "Operator signs in for the first time using a temporary passcode and network is not available", "Test_Sce_Description": "Verify that the SA Tool application displays a message to the operator requesting them to sign in when network is available if the operator is signing in for the first time using a temporary passcode and network is not available."}, {"Function_Flow_Name": "Operator sign-in", "Sub_Flow_Name": "Operator sign-off", "Use_Case_Name": "Sign-in without network connection: Operator\u2019s log-in details are stored in the local cache", "Test_Scnario": "Operator reaches the maximum number of login attempts", "Test_Sce_Description": "Verify that the SA Tool application locks the operator user account when the number of unsuccessful sign-in attempts reaches the maximum number of sign-on attempts. The application should deny access to that operator until the operator badge ID is unlocked by the CLIENT Operations user or automatically unlocked after a configurable amount of time."}, {"Function_Flow_Name": "Operator sign-in", "Sub_Flow_Name": "Operator sign-off", "Use_Case_Name": "Sign-in without network connection: Operator\u2019s log-in details are stored in the local cache", "Test_Scnario": "New passcode is the same as the temporary passcode", "Test_Sce_Description": "Verify that the SA Tool application detects that the new passcode is the same as the temporary passcode in the Subsystem and informs the user of the error."}, {"Function_Flow_Name": "Operator sign-in", "Sub_Flow_Name": "Operator sign-off", "Use_Case_Name": "Sign-in without network connection: Operator\u2019s log-in details are stored in the local cache", "Test_Scnario": "New passcode length does not meet pre-defined criteria", "Test_Sce_Description": "Verify that the SA Tool application does not enable the submit button until the passcode entered is the correct length."}, {"Function_Flow_Name": "Operator sign-in", "Sub_Flow_Name": "Operator sign-off", "Use_Case_Name": "Sign-in while another operator is signed-in to the same device", "Test_Scnario": "First Time User Sign-In", "Test_Sce_Description": "Verify that a first-time user can successfully sign-in to the SA Tool application using their operator badge ID and temporary passcode. The user should be able to change their temporary passcode upon initial log-in and set up security questions."}, {"Function_Flow_Name": "Operator sign-in", "Sub_Flow_Name": "Operator sign-off", "Use_Case_Name": "Sign-in while another operator is signed-in to the same device", "Test_Scnario": "Online Authentication", "Test_Sce_Description": "Verify that the SA Tool communicates with the User management service to authenticate user login. This should be required when the device is online for first time users and after the local cache is cleaned based on a configurable credential caching duration."}, {"Function_Flow_Name": "Operator sign-in", "Sub_Flow_Name": "Operator sign-off", "Use_Case_Name": "Sign-in while another operator is signed-in to the same device", "Test_Scnario": "Local Authentication", "Test_Sce_Description": "Verify that local authentication is used for users re-logging into the same SA Tool and whose credentials have not been cleaned based on the configurable credential caching duration. The local credential cache should only store the credentials of users who have logged in to the specific device previously."}, {"Function_Flow_Name": "Operator sign-in", "Sub_Flow_Name": "Operator sign-off", "Use_Case_Name": "Sign-in while another operator is signed-in to the same device", "Test_Scnario": "Invalid Passcode Entry", "Test_Sce_Description": "Verify that the device informs the operator that the passcode is incorrect for the counted number of times, and a re-try is permitted after 30 seconds. During the 30-second countdown, the user should not be allowed to attempt sign on."}, {"Function_Flow_Name": "Operator sign-in", "Sub_Flow_Name": "Operator sign-off", "Use_Case_Name": "Sign-in while another operator is signed-in to the same device", "Test_Scnario": "Successful First-Time Sign-In", "Test_Sce_Description": "Verify that the SA Tool application informs the operator of successful first-time sign-in and displays the Security Setup screen. The user's selected Language preference should be stored in the user management service."}, {"Function_Flow_Name": "Operator sign-in", "Sub_Flow_Name": "Operator sign-off", "Use_Case_Name": "Sign-in while another operator is signed-in to the same device", "Test_Scnario": "Security Setup", "Test_Sce_Description": "Verify that the SA Tool application notifies the operator that they will need to set up security questions and a new passcode. The new passcode must be a 4-digit number."}, {"Function_Flow_Name": "Operator sign-in", "Sub_Flow_Name": "Operator sign-off", "Use_Case_Name": "Sign-in while another operator is signed-in to the same device", "Test_Scnario": "Passcode Length Validation", "Test_Sce_Description": "Verify that the SA Tool application validates that the new passcode meets passcode length criteria by connecting to the user management service. If the new passcode length meets the defined criteria, the SA Tool application should indicate to the operator that the passcode was successfully changed."}, {"Function_Flow_Name": "Operator sign-in", "Sub_Flow_Name": "Operator sign-off", "Use_Case_Name": "Sign-in while another operator is signed-in to the same device", "Test_Scnario": "Maximum Number of Login Attempts", "Test_Sce_Description": "Verify that when the number of unsuccessful sign-in attempts reaches the maximum number of sign-on attempts, the SA Tool application denies access to that operator until the operator badge ID is unlocked by the CLIENT Operations user or automatically unlocked after a configurable amount of time."}, {"Function_Flow_Name": "Operator sign-in", "Sub_Flow_Name": "Operator sign-off", "Use_Case_Name": "Sign-in while another operator is signed-in to the same device", "Test_Scnario": "Network Unavailability", "Test_Sce_Description": "Verify that if the network is unavailable, the SA Tool application displays a message to the operator requesting them to sign in when network is available."}, {"Function_Flow_Name": "Operator sign-in", "Sub_Flow_Name": "Operator sign-off", "Use_Case_Name": "Sign-in while another operator is signed-in to the same device", "Test_Scnario": "New Passcode is Same as Temporary Passcode", "Test_Sce_Description": "Verify that if the new passcode is the same as the temporary passcode, the SA Tool Device informs the user of the error and clears the new passcode fields."}, {"Function_Flow_Name": "Operator sign-in", "Sub_Flow_Name": "Operator sign-off", "Use_Case_Name": "Sign-in while the device is on standby state (screen off) and is signed-in to the current operator\u2019s shift", "Test_Scnario": "Switch SA Tool from Standby to In-Service State", "Test_Sce_Description": "Verify that the operator can successfully switch the SA Tool from standby to in-service state. This includes pressing the physical power button, entering the lock screen passcode, signing in to the SA Tool application, and confirming that the SA Tool enters the in-service state and displays the shift preferences screen."}, {"Function_Flow_Name": "Operator sign-in", "Sub_Flow_Name": "Operator sign-off", "Use_Case_Name": "Sign-in while the device is on standby state (screen off) and is signed-in to the current operator\u2019s shift", "Test_Scnario": "Switch SA Tool from Standby to In-Service State before threshold requiring login", "Test_Sce_Description": "Verify that if the operator has not been in \u201cstandby\u201d state longer than the configurable threshold value that requires logging in, the SA Tool displays the home screen without requiring sign-in and navigation to the home screen."}, {"Function_Flow_Name": "Operator sign-in", "Sub_Flow_Name": "Operator sign-off", "Use_Case_Name": "Sign-in while the device is on standby state (screen off) and is signed-in to the current operator\u2019s shift", "Test_Scnario": "Switch SA Tool from In-Service to Standby State", "Test_Sce_Description": "Verify that the operator can successfully switch the SA Tool from in-service to standby state. This includes pressing the physical power button once and confirming that the SA Tool turns off the screen and goes into standby state."}, {"Function_Flow_Name": "Operator sign-in", "Sub_Flow_Name": "Operator sign-off", "Use_Case_Name": "Sign-in while the device is on standby state (screen off) and is signed-in to the current operator\u2019s shift", "Test_Scnario": "Operator navigates away from the SA Tool Application", "Test_Sce_Description": "Verify that if the operator switches to a third party application on SA Tool, the SA Tool application runs in the background and goes into standby state."}, {"Function_Flow_Name": "Operator sign-in", "Sub_Flow_Name": "Operator sign-off", "Use_Case_Name": "Sign-in while the device is on standby state (screen off) and is signed-in to the current operator\u2019s shift", "Test_Scnario": "Change SP after switching device from standby to in-service state", "Test_Sce_Description": "Verify that if the operator attempts to change SP on the login screen after switching the device from standby to in-service state, the SA Tool application notifies the operator with a corresponding error message."}, {"Function_Flow_Name": "Operator sign-in", "Sub_Flow_Name": "Operator sign-off", "Use_Case_Name": "Sign-in while the device is on standby state (screen off) and is signed-in to the current operator\u2019s shift", "Test_Scnario": "New Operator signs in while current Operator is signed in", "Test_Sce_Description": "Verify that if a new Operator enters own user ID and passcode and selects Sign In while the current Operator is signed in, a message indicates that the current Operator is currently signed in, and asks if the new Operator wants to sign in anyway. Upon selecting Yes, the current Operator should be signed off from the SA Tool."}, {"Function_Flow_Name": "Operator sign-in", "Sub_Flow_Name": "Operator sign-off", "Use_Case_Name": "Sign-in while the device is on standby state (screen off) and is signed-in to the current operator\u2019s shift", "Test_Scnario": "Shut-Down SA Tool via Physical Device Button", "Test_Sce_Description": "Verify that the operator can manually shut down the SA Tool by pressing and holding the physical power button, selecting \u201cPower off\u201d and confirming shut-down. The device should turn off and if the operator shift is open, the operator shift should not be closed."}, {"Function_Flow_Name": "Operator sign-in", "Sub_Flow_Name": "Operator sign-off", "Use_Case_Name": "Sign-in while the device is on standby state (screen off) and is signed-in to the current operator\u2019s shift", "Test_Scnario": "Reboot SA Tool", "Test_Sce_Description": "Verify that the operator can manually reboot the SA Tool by pressing and holding the physical power button, selecting the restart option, and confirming that the device restarts by turning off and powering on."}, {"Function_Flow_Name": "Operator sign-in", "Sub_Flow_Name": "Operator sign-off", "Use_Case_Name": "Sign-in the SA Tool with no network connectivity after passcode has been reset", "Test_Scnario": "Reset Passcode: Account validation fails after passcode has been reset", "Test_Sce_Description": "This scenario tests the functionality of the SA Tool application when it loses connectivity or the Operator account is locked after the passcode has been reset. The application should redirect the user to the sign-in screen and inform the operator that the passcode has been successfully reset. The operator should be able to sign in to the application with their new passcode when connectivity is reached or account is unlocked."}, {"Function_Flow_Name": "Operator sign-in", "Sub_Flow_Name": "Operator sign-off", "Use_Case_Name": "Sign-in the SA Tool with no network connectivity after passcode has been reset", "Test_Scnario": "Forgot Passcode - New passcode is the same as the current passcode", "Test_Sce_Description": "This scenario tests the functionality of the SA Tool application when the new passcode entered by the operator is the same as the current passcode. The application should detect this and notify the operator with an error message, clear the new passcode fields, and increment the invalid answer counter by one."}, {"Function_Flow_Name": "Operator sign-in", "Sub_Flow_Name": "Operator sign-off", "Use_Case_Name": "Sign-in the SA Tool with no network connectivity after passcode has been reset", "Test_Scnario": "Operator Sign-Off", "Test_Sce_Description": "This scenario tests the functionality of the SA Tool application when an operator signs off. The application should request for a confirmation, display a digital end-of-shift statistics report, close off the current shift, print the statistics report if the printer is connected, and send a shift statistics email to the established email distribution list."}, {"Function_Flow_Name": "Operator sign-in", "Sub_Flow_Name": "Operator sign-off", "Use_Case_Name": "Sign-in the SA Tool with no network connectivity after passcode has been reset", "Test_Scnario": "Operator Signs in for the First Time Using a Temporary Passcode and Network is Not Available", "Test_Sce_Description": "This scenario tests the functionality of the SA Tool application when an operator signs in for the first time using a temporary passcode and the network is not available. The application should display a message to the operator requesting them to sign in when network is available."}, {"Function_Flow_Name": "Operator sign-in", "Sub_Flow_Name": "Operator sign-off", "Use_Case_Name": "Sign-in the SA Tool with no network connectivity after passcode has been reset", "Test_Scnario": "Operator Reaches the Maximum Number of Login Attempts", "Test_Sce_Description": "This scenario tests the functionality of the SA Tool application when an operator reaches the maximum number of login attempts. The application should deny access to that operator until the operator badge ID is unlocked by the CLIENT Operations user or automatically unlocked after a configurable amount of time."}, {"Function_Flow_Name": "Operator sign-in", "Sub_Flow_Name": "Operator sign-off", "Use_Case_Name": "Sign-in the SA Tool with no network connectivity after passcode has been reset", "Test_Scnario": "New Passcode is the Same as The Temporary Passcode", "Test_Sce_Description": "This scenario tests the functionality of the SA Tool application when the new passcode entered by the operator is the same as the temporary passcode. The application should detect this and inform the user of the error and clear the new passcode fields."}, {"Function_Flow_Name": "Operator sign-in", "Sub_Flow_Name": "Operator sign-off", "Use_Case_Name": "Sign-in the SA Tool with no network connectivity after passcode has been reset", "Test_Scnario": "New Passcode Length Does Not Meet Pre-Defined Criteria", "Test_Sce_Description": "This scenario tests the functionality of the SA Tool application when the new passcode entered by the operator does not meet the pre-defined criteria. The application should not enable the submit button until the passcode entered is the correct length."}, {"Function_Flow_Name": "Operator sign-in", "Sub_Flow_Name": "Operator sign-off", "Use_Case_Name": "Operator Enters New Security Questions/Answers and Passcode", "Test_Scnario": "First-Time User Sign-In", "Test_Sce_Description": "Verify that a first-time user can successfully sign-in to the SA Tool application using their operator badge ID and temporary passcode. The user should be able to change their temporary passcode upon initial log-in and set up security questions and answers."}, {"Function_Flow_Name": "Operator sign-in", "Sub_Flow_Name": "Operator sign-off", "Use_Case_Name": "Operator Enters New Security Questions/Answers and Passcode", "Test_Scnario": "Online Authentication", "Test_Sce_Description": "Verify that the SA Tool communicates with the User management service to authenticate user login for first-time users and after the local cache is cleaned based on a configurable credential caching duration."}, {"Function_Flow_Name": "Operator sign-in", "Sub_Flow_Name": "Operator sign-off", "Use_Case_Name": "Operator Enters New Security Questions/Answers and Passcode", "Test_Scnario": "Local Authentication", "Test_Sce_Description": "Verify that the SA Tool can authenticate users re-logging into the same SA Tool and whose credentials have not been cleaned based on the configurable credential caching duration. The local credential cache should only store the credentials of users who have logged in to the specific device previously."}, {"Function_Flow_Name": "Operator sign-in", "Sub_Flow_Name": "Operator sign-off", "Use_Case_Name": "Operator Enters New Security Questions/Answers and Passcode", "Test_Scnario": "Incorrect Username or Passcode", "Test_Sce_Description": "Verify that the SA Tool application checks with the User management service and determines that the operator badge ID is invalid and notifies the operator with a corresponding error message."}, {"Function_Flow_Name": "Operator sign-in", "Sub_Flow_Name": "Operator sign-off", "Use_Case_Name": "Operator Enters New Security Questions/Answers and Passcode", "Test_Scnario": "Invalid Security Question Answers", "Test_Sce_Description": "Verify that the SA Tool application validates that the security question answers entered do not match those stored in the User management service and notifies the operator with a corresponding error message."}, {"Function_Flow_Name": "Operator sign-in", "Sub_Flow_Name": "Operator sign-off", "Use_Case_Name": "Operator Enters New Security Questions/Answers and Passcode", "Test_Scnario": "Mismatched New Passcodes", "Test_Sce_Description": "Verify that the SA Tool application validates that the new passcodes that were entered twice are not same and notifies the operator with a corresponding error message."}, {"Function_Flow_Name": "Operator sign-in", "Sub_Flow_Name": "Operator sign-off", "Use_Case_Name": "Operator Enters New Security Questions/Answers and Passcode", "Test_Scnario": "New Passcode Length Criteria", "Test_Sce_Description": "Verify that the SA Tool application will not enable the submit button until the passcode entered is the correct length."}, {"Function_Flow_Name": "Operator sign-in", "Sub_Flow_Name": "Operator sign-off", "Use_Case_Name": "Operator Enters New Security Questions/Answers and Passcode", "Test_Scnario": "First-Time User Reset Passcode", "Test_Sce_Description": "Verify that the SA Tool application connects to the User management service and validates that the operator badge ID entered belongs to a first-time user and notifies the operator with a corresponding error message and clears the passcode field."}, {"Function_Flow_Name": "Operator sign-in", "Sub_Flow_Name": "Operator sign-off", "Use_Case_Name": "Operator Enters New Security Questions/Answers and Passcode", "Test_Scnario": "Maximum Number of Forgot Passcode Attempts", "Test_Sce_Description": "Verify that the SA Tool application records a cumulative number of unsuccessful reset passcode attempts for a single valid operator ID on a specific SA Tool. When the number of unsuccessful reset passcode attempts reaches the maximum reset passcode attempts, the SA Tool should deny access to that operator until the operator ID is unlocked by the CLIENT back-office user or automatically unlocked after a configurable amount of time."}, {"Function_Flow_Name": "Operator sign-in", "Sub_Flow_Name": "Operator sign-off", "Use_Case_Name": "Operator Enters New Security Questions/Answers and Passcode", "Test_Scnario": "Account Validation Fails After Passcode Reset", "Test_Sce_Description": "Verify that the SA Tool application may lose connectivity, or the Operator account may be locked when performing the final account validation after the passcode has been reset. The Operator should be able to try to sign in to the SA Tool application with their new passcode when connectivity is reached, or account is unlocked."}, {"Function_Flow_Name": "Operator sign-in", "Sub_Flow_Name": "Operator sign-off", "Use_Case_Name": "Operator Enters New Security Questions/Answers and Passcode", "Test_Scnario": "New Passcode is the Same as the Current Passcode", "Test_Sce_Description": "Verify that the SA Tool application validates that the new passcode does not match the current passcode and notifies the operator with a corresponding error message."}, {"Function_Flow_Name": "Operator sign-in", "Sub_Flow_Name": "Operator sign-off", "Use_Case_Name": "Operator\u2019s Current Passcode Has Expired", "Test_Scnario": "Expired Operator Passcode", "Test_Sce_Description": "Verify that the system correctly detects when an operator's passcode has expired and prompts the operator to enter a new passcode. The system should successfully save the new passcode when the operator selects 'Submit'."}, {"Function_Flow_Name": "Operator sign-in", "Sub_Flow_Name": "Operator sign-off", "Use_Case_Name": "Operator\u2019s Current Passcode Has Expired", "Test_Scnario": "Future Passcode Expiry", "Test_Sce_Description": "Verify that the system correctly detects when an operator's passcode will expire in the future and prompts the operator to change their passcode. The operator should have the option to either change their passcode or dismiss the message."}, {"Function_Flow_Name": "Operator sign-in", "Sub_Flow_Name": "Operator sign-off", "Use_Case_Name": "Operator\u2019s Current Passcode Has Expired", "Test_Scnario": "Secondary Transit Agency without Open Payments", "Test_Sce_Description": "Verify that the application functions only with Farecard taps and does not respond to taps from contactless payment cards when the secondary transit agency does not have Open Payments enabled."}, {"Function_Flow_Name": "Operator sign-in", "Sub_Flow_Name": "Operator sign-off", "Use_Case_Name": "Operator\u2019s Current Passcode Has Expired", "Test_Scnario": "Secondary Transit Agency with Open Payments", "Test_Sce_Description": "Verify that the application functions for both Farecard taps and Open Payment media when the secondary transit agency has Open Payments enabled."}, {"Function_Flow_Name": "Operator sign-in", "Sub_Flow_Name": "Operator sign-off", "Use_Case_Name": "Operator\u2019s Current Passcode Has Expired", "Test_Scnario": "Expired Temporary Passcode", "Test_Sce_Description": "Verify that the system correctly detects when an operator's temporary passcode has expired and informs the operator of the expired temporary passcode. The system should increment the invalid entry counter by one and clear the passcode field in the sign-in screen."}, {"Function_Flow_Name": "Operator sign-in", "Sub_Flow_Name": "Operator sign-off", "Use_Case_Name": "Operator\u2019s Current Passcode Has Expired", "Test_Scnario": "Incorrect Username or Passcode", "Test_Sce_Description": "Verify that the system correctly detects when an operator enters an invalid operator badge ID and/or an invalid passcode and informs the operator of the invalid operator badge ID and passcode combination. The system should increment the invalid entry counter by one and clear the passcode field in the sign-in screen."}, {"Function_Flow_Name": "Operator sign-in", "Sub_Flow_Name": "Operator sign-off", "Use_Case_Name": "Operator\u2019s Current Passcode Has Expired", "Test_Scnario": "Maximum Number of Log-in Attempts Reached", "Test_Sce_Description": "Verify that the system correctly detects when the maximum number of unsuccessful sign-in attempts has been reached and locks the operator user account. The system should inform the operator that the user account associated with the operator ID is locked and clear the passcode field in the sign-in screen."}, {"Function_Flow_Name": "Operator sign-in", "Sub_Flow_Name": "Operator sign-off", "Use_Case_Name": "Operator\u2019s Current Passcode Has Expired", "Test_Scnario": "First Time Sign-in with Temporary Passcode and Network Unavailability", "Test_Sce_Description": "Verify that the system correctly displays a message to the operator requesting them to sign in when network is available when the operator signs in for the first time using a temporary passcode and the network is not available."}, {"Function_Flow_Name": "Operator sign-in", "Sub_Flow_Name": "Operator sign-off", "Use_Case_Name": "Operator\u2019s Current Passcode Has Expired", "Test_Scnario": "New Passcode is Same as Temporary Passcode", "Test_Sce_Description": "Verify that the system correctly detects when the new passcode is the same as the temporary passcode and informs the user of the error and clears the new passcode fields."}, {"Function_Flow_Name": "Operator sign-in", "Sub_Flow_Name": "Operator sign-off", "Use_Case_Name": "Operator\u2019s Current Passcode Has Expired", "Test_Scnario": "New Passcode Length Does Not Meet Pre-Defined Criteria", "Test_Sce_Description": "Verify that the system correctly disables the submit button until the passcode entered is the correct length."}, {"Function_Flow_Name": "Operator sign-in", "Sub_Flow_Name": "Operator sign-off", "Use_Case_Name": "Operator\u2019s Passcode Will Expire in the Future", "Test_Scnario": "Passcode Expiry Notification", "Test_Sce_Description": "Verify that the SA Tool correctly detects that the Operator\u2019s passcode will expire in a number of days and prompts the Operator to change their passcode."}, {"Function_Flow_Name": "Operator sign-in", "Sub_Flow_Name": "Operator sign-off", "Use_Case_Name": "Operator\u2019s Passcode Will Expire in the Future", "Test_Scnario": "Passcode Change Option", "Test_Sce_Description": "Verify that the Operator is given the option to either change their passcode or dismiss the message when notified about the upcoming passcode expiry."}, {"Function_Flow_Name": "Operator sign-in", "Sub_Flow_Name": "Operator sign-off", "Use_Case_Name": "Operator\u2019s Passcode Will Expire in the Future", "Test_Scnario": "Passcode Change Functionality", "Test_Sce_Description": "Verify that the Operator is able to successfully change their passcode when they choose to do so upon receiving the expiry notification."}, {"Function_Flow_Name": "Operator sign-in", "Sub_Flow_Name": "Operator sign-off", "Use_Case_Name": "Operator\u2019s Passcode Will Expire in the Future", "Test_Scnario": "Passcode Change Confirmation", "Test_Sce_Description": "Verify that the Operator receives a confirmation message upon successful change of passcode."}, {"Function_Flow_Name": "Operator sign-in", "Sub_Flow_Name": "Operator sign-off", "Use_Case_Name": "Operator\u2019s Passcode Will Expire in the Future", "Test_Scnario": "Passcode Expiry Functionality Post Change", "Test_Sce_Description": "Verify that the passcode expiry notification does not appear once the Operator has successfully changed their passcode."}, {"Function_Flow_Name": "Operator sign-in", "Sub_Flow_Name": "Operator sign-off", "Use_Case_Name": "Operator\u2019s Passcode Will Expire in the Future", "Test_Scnario": "Passcode Expiry Functionality Post Dismissal", "Test_Sce_Description": "Verify that the passcode expiry notification does not appear once the Operator has dismissed the message."}, {"Function_Flow_Name": "Operator sign-in", "Sub_Flow_Name": "Operator sign-off", "Use_Case_Name": "Operator\u2019s Passcode Will Expire in the Future", "Test_Scnario": "Passcode Expiry Notification Timing", "Test_Sce_Description": "Verify that the passcode expiry notification appears at the correct time, i.e., a specific number of days before the actual expiry."}, {"Function_Flow_Name": "Operator sign-in", "Sub_Flow_Name": "Operator sign-off", "Use_Case_Name": "Operator\u2019s Passcode Will Expire in the Future", "Test_Scnario": "Passcode Change Impact on Other Functions", "Test_Sce_Description": "Verify that changing the passcode does not impact any other functions of the SA Tool."}, {"Function_Flow_Name": "Operator sign-in", "Sub_Flow_Name": "Operator sign-off", "Use_Case_Name": "Operator\u2019s Passcode Will Expire in the Future", "Test_Scnario": "Passcode Expiry Notification Post Expiry", "Test_Sce_Description": "Verify that the passcode expiry notification does not appear once the passcode has actually expired."}, {"Function_Flow_Name": "Operator sign-in", "Sub_Flow_Name": "Operator sign-off", "Use_Case_Name": "Operator\u2019s Passcode Will Expire in the Future", "Test_Scnario": "Passcode Change Security", "Test_Sce_Description": "Verify that the new passcode entered by the Operator is not visible in plain text, ensuring the security of the passcode."}, {"Function_Flow_Name": "Modify screen brightness", "Sub_Flow_Name": "Modify audio tone volume", "Use_Case_Name": "Modify Screen Brightness on SA Tool", "Test_Scnario": "Verify the functionality of the brightness control option", "Test_Sce_Description": "Check if the operator can access the brightness level control option within the settings and successfully toggle between manual and auto brightness. In manual mode, the operator should be able to adjust the brightness settings step-wise. In auto mode, the device should detect the level of light in the environment and adjust the device\u2019s brightness automatically."}, {"Function_Flow_Name": "Modify screen brightness", "Sub_Flow_Name": "Modify audio tone volume", "Use_Case_Name": "Modify Screen Brightness on SA Tool", "Test_Scnario": "Verify the display of the brightness level control option screen", "Test_Sce_Description": "Check if the brightness level control option screen is displayed correctly, including a toggle between manual and auto brightness, a manual adjustment component when manual brightness is selected, and an apply button to apply the brightness setting changes."}, {"Function_Flow_Name": "Modify screen brightness", "Sub_Flow_Name": "Modify audio tone volume", "Use_Case_Name": "Modify Screen Brightness on SA Tool", "Test_Scnario": "Verify the functionality of the brightness adjustment", "Test_Sce_Description": "Check if the operator can modify the brightness by selecting the desired brightness level and if the screen brightness changes as the operator makes the adjustment. Also, verify if the manual adjustment component is disabled when auto brightness is enabled."}, {"Function_Flow_Name": "Modify screen brightness", "Sub_Flow_Name": "Modify audio tone volume", "Use_Case_Name": "Modify Screen Brightness on SA Tool", "Test_Scnario": "Verify the functionality of the apply button", "Test_Sce_Description": "Check if the operator can select \u2018apply\u2019 to activate the change in brightness. Also, verify if the operator can press the back-arrow button to navigate back to the previous screen without saving the change and reverting to the last saved configuration."}, {"Function_Flow_Name": "Modify screen brightness", "Sub_Flow_Name": "Modify audio tone volume", "Use_Case_Name": "Modify Screen Brightness on SA Tool", "Test_Scnario": "Verify the functionality of the SA Tool in offline mode", "Test_Sce_Description": "Check if the SA Tool can operate in offline mode. Verify if the forget passcode and passcode change functionalities are unavailable when the device is offline."}, {"Function_Flow_Name": "Modify screen brightness", "Sub_Flow_Name": "Modify audio tone volume", "Use_Case_Name": "Modify Screen Brightness on SA Tool", "Test_Scnario": "Verify the functionality of the SA Tool when initial self-diagnostic check is unsuccessful", "Test_Sce_Description": "Check if the SA Tool performs initial self-diagnostic checks and goes to error state when it finds critical failures."}, {"Function_Flow_Name": "Modify screen brightness", "Sub_Flow_Name": "Modify audio tone volume", "Use_Case_Name": "Modify Screen Brightness on SA Tool", "Test_Scnario": "Verify the functionality of the SA Tool when continuous self-diagnostic check is unsuccessful", "Test_Sce_Description": "Check if the SA Tool application performs the continuous self-diagnostics for storage, battery or secure element and goes to out-of-service state when it finds errors or failures in any of these elements. Also, verify if a critical event is sent to SOTI Mobicontrol and CSM."}, {"Function_Flow_Name": "Modify screen brightness", "Sub_Flow_Name": "Modify audio tone volume", "Use_Case_Name": "Modify Screen Brightness on SA Tool", "Test_Scnario": "Verify the functionality of switching between the PDS SA Tool application and third-party applications", "Test_Sce_Description": "Check if the operator can tap on the home button present on the android navigation bar to navigate to the list of whitelisted third-party applications. Also, verify if the operator can press on the desired application icon from the home screen of the SA Tool device to launch it."}, {"Function_Flow_Name": "Modify screen brightness", "Sub_Flow_Name": "Modify audio tone volume", "Use_Case_Name": "Modify Screen Brightness on SA Tool", "Test_Scnario": "Verify the functionality of the SA Tool when the application is already launched and is running in the background", "Test_Sce_Description": "Check if the operator can tap on the App Overview button on the bottom navigation bar and swipe to navigate through the list of open applications until they find the desired application. Also, verify if the operator can press on the desired application to launch it."}, {"Function_Flow_Name": "Modify screen brightness", "Sub_Flow_Name": "Modify audio tone volume", "Use_Case_Name": "Check Battery Power Level on SA Tool", "Test_Scnario": "Check Battery Power Level on SA Tool - Normal Flow", "Test_Sce_Description": "Verify that the SA Tool correctly displays the battery level icon in the status bar on top of the screen. The battery icon should accurately represent the amount of remaining battery power. This status bar should be viewable regardless of which screen is displayed on the device."}, {"Function_Flow_Name": "Modify screen brightness", "Sub_Flow_Name": "Modify audio tone volume", "Use_Case_Name": "Check Battery Power Level on SA Tool", "Test_Scnario": "Check Battery Power Level on SA Tool - Low Battery", "Test_Sce_Description": "Verify that when the battery level reaches the low battery threshold, the SA Tool correctly switches to \u201cOut of Service\u201d mode. The application should not allow further operations until the device is charged above the minimum battery threshold."}, {"Function_Flow_Name": "Modify screen brightness", "Sub_Flow_Name": "Modify audio tone volume", "Use_Case_Name": "Check Battery Power Level on SA Tool", "Test_Scnario": "Check Battery Power Level on SA Tool - Battery Consumption", "Test_Sce_Description": "Verify that the battery consumption of the SA Tool application is within acceptable limits. The application should not drain the battery excessively during normal operation."}, {"Function_Flow_Name": "Modify screen brightness", "Sub_Flow_Name": "Modify audio tone volume", "Use_Case_Name": "Check Battery Power Level on SA Tool", "Test_Scnario": "Check Battery Power Level on SA Tool - Battery Level Accuracy", "Test_Sce_Description": "Verify that the battery level displayed by the SA Tool is accurate. The displayed battery level should match the actual battery level of the device."}, {"Function_Flow_Name": "Modify screen brightness", "Sub_Flow_Name": "Modify audio tone volume", "Use_Case_Name": "Check Battery Power Level on SA Tool", "Test_Scnario": "Check Battery Power Level on SA Tool - Battery Level Update", "Test_Sce_Description": "Verify that the battery level displayed by the SA Tool updates in real-time. The displayed battery level should decrease as the battery is consumed and increase as the battery is charged."}, {"Function_Flow_Name": "Modify screen brightness", "Sub_Flow_Name": "Modify audio tone volume", "Use_Case_Name": "Check Battery Power Level on SA Tool", "Test_Scnario": "Check Battery Power Level on SA Tool - Security", "Test_Sce_Description": "Verify that the battery level information is not accessible by unauthorized users or applications. The battery level information should be securely stored and transmitted."}, {"Function_Flow_Name": "Modify screen brightness", "Sub_Flow_Name": "Modify audio tone volume", "Use_Case_Name": "Check Battery Power Level on SA Tool", "Test_Scnario": "Check Battery Power Level on SA Tool - Performance", "Test_Sce_Description": "Verify that the performance of the SA Tool is not affected by the battery level. The application should function smoothly and without delays regardless of the battery level."}, {"Function_Flow_Name": "Modify screen brightness", "Sub_Flow_Name": "Modify audio tone volume", "Use_Case_Name": "Check Battery Power Level on SA Tool", "Test_Scnario": "Check Battery Power Level on SA Tool - Exception Flow", "Test_Sce_Description": "Verify that the SA Tool correctly handles exceptions related to the battery level. The application should display appropriate error messages and take appropriate actions when exceptions occur."}, {"Function_Flow_Name": "Modify screen brightness", "Sub_Flow_Name": "Modify audio tone volume", "Use_Case_Name": "Check Battery Power Level on SA Tool", "Test_Scnario": "Check Battery Power Level on SA Tool - Alternate Flow", "Test_Sce_Description": "Verify that the SA Tool correctly handles alternate flows related to the battery level. The application should correctly switch to \u201cOut of Service\u201d mode when the battery level reaches the low battery threshold."}, {"Function_Flow_Name": "Modify screen brightness", "Sub_Flow_Name": "Modify audio tone volume", "Use_Case_Name": "Check SA Tool Information", "Test_Scnario": "Launching the SA Tool Application", "Test_Sce_Description": "Verify that the authorized operator is able to launch the SA Tool Application successfully. The application should perform continuous diagnostic checks for network/cellular connection, battery level, and available storage space. If all checks are successful, the sign-in screen should be displayed."}, {"Function_Flow_Name": "Modify screen brightness", "Sub_Flow_Name": "Modify audio tone volume", "Use_Case_Name": "Check SA Tool Information", "Test_Scnario": "Launching the SA Tool Application without network connection", "Test_Sce_Description": "Verify that the SA Tool Application can be launched even when the network connection is not available. The application should perform continuous diagnostic checks and indicate on the SA Tool that the device is unable to connect to a network. The sign-in screen should still be displayed and the application should operate in offline mode."}, {"Function_Flow_Name": "Modify screen brightness", "Sub_Flow_Name": "Modify audio tone volume", "Use_Case_Name": "Check SA Tool Information", "Test_Scnario": "Launching the SA Tool Application with critical failures", "Test_Sce_Description": "Verify that the SA Tool Application handles critical failures correctly during the initial self-diagnostic checks. The application should go to error state when critical failures are found."}, {"Function_Flow_Name": "Modify screen brightness", "Sub_Flow_Name": "Modify audio tone volume", "Use_Case_Name": "Check SA Tool Information", "Test_Scnario": "Launching the SA Tool Application with storage, battery or secure element failures", "Test_Sce_Description": "Verify that the SA Tool Application handles storage, battery or secure element failures correctly during the continuous self-diagnostic checks. The application should go to out-of-service state and a critical event should be sent to SOTI Mobicontrol and CSM when errors or failures are found in any of these elements."}, {"Function_Flow_Name": "Modify screen brightness", "Sub_Flow_Name": "Modify audio tone volume", "Use_Case_Name": "Check SA Tool Information", "Test_Scnario": "Switching between the PDS SA Tool application and third-party applications", "Test_Sce_Description": "Verify that the authorized operator is able to switch between the SA Tool Application and the whitelisted third-party applications on the device. The operator should be able to navigate to the list of whitelisted third-party applications by tapping on the home button, find the desired application by swiping or using the search bar, and launch it by pressing on its icon."}, {"Function_Flow_Name": "Modify screen brightness", "Sub_Flow_Name": "Modify audio tone volume", "Use_Case_Name": "Check SA Tool Information", "Test_Scnario": "Switching to an already launched third-party application", "Test_Sce_Description": "Verify that the authorized operator is able to switch to a third-party application that is already running in the device background. The operator should be able to navigate through the list of open applications by tapping on the App Overview button on the bottom navigation bar, find the desired application by swiping, and launch it by pressing on it."}, {"Function_Flow_Name": "Modify screen brightness", "Sub_Flow_Name": "Modify audio tone volume", "Use_Case_Name": "Adjust Audio Tone Volume", "Test_Scnario": "Adjusting Audio Tone Volume", "Test_Sce_Description": "This scenario will test the functionality of adjusting the audio tone volume of the SA Tool application. The operator will open the Settings screen from the More options menu and adjust the audio tone volume to the desired level. The application should play the accepted tone at the newly selected volume. If the operator presses the back button on the settings screen, the application should revert to the last saved configuration. If the operator selects done, the desired volume should be saved for the shift. The volume should reset to default volume when the operator signs out or a new operator signs in."}, {"Function_Flow_Name": "Modify screen brightness", "Sub_Flow_Name": "Modify audio tone volume", "Use_Case_Name": "Adjust Audio Tone Volume", "Test_Scnario": "Configuring Vibration Control", "Test_Sce_Description": "This scenario will test the process for an operator to configure vibration control on the SA Tool. The operator will select the Settings option on SA Tool and configure vibration control by selecting the desired vibration level. If the operator presses the back button on the settings screen, the application should revert to the last saved configuration. If the operator selects Apply, the desired vibration control should be saved for the shift. The default haptic feedback should be reset when the operator signs out or a new operator signs in."}, {"Function_Flow_Name": "Modify screen brightness", "Sub_Flow_Name": "Modify audio tone volume", "Use_Case_Name": "Adjust Audio Tone Volume", "Test_Scnario": "Selecting Route Parameters", "Test_Sce_Description": "This scenario will test the process for an operator selecting desired route/lines for inspection purposes on the SA Tool. The operator will select the Settings option on the SA Tool, select Inspection Parameters, and select Rail or Bus depending on their inspection location. For Distance based Transit, the operator will select the desired current route/line. If the operator selects a route/line different than the current route, the trip and stop selections should be reset. The operator will then proceed to select the desired trip and stop. In case of bus, the operator will also enter the Vehicle Id."}, {"Function_Flow_Name": "Modify screen brightness", "Sub_Flow_Name": "Modify audio tone volume", "Use_Case_Name": "Adjust Audio Tone Volume", "Test_Scnario": "Transaction Reversal - Customer\u2019s Farecard Does Not Have a Valid Fare to Reverse", "Test_Sce_Description": "This scenario will test the exception flow when no valid fare to be reversed is found. The application should display a declined message to the customer and the transaction should not be conducted. The SA Tool application should play a declined audio tone."}, {"Function_Flow_Name": "Modify screen brightness", "Sub_Flow_Name": "Modify audio tone volume", "Use_Case_Name": "Adjust Audio Tone Volume", "Test_Scnario": "Transaction Reversal - Customer\u2019s Farecard is Blocked", "Test_Sce_Description": "This scenario will test the exception flow when the customer\u2019s Farecard is blocked. The device should send the request to ATS for processing. ATS should detect the card is blocked and return a declined/error result back to the SA Tool. The SA Tool application should display a declined message to the customer and the transaction should not be conducted. The SA Tool should play the declined audio tone. The Scratchpad should be updated accordingly."}, {"Function_Flow_Name": "Modify screen brightness", "Sub_Flow_Name": "Modify audio tone volume", "Use_Case_Name": "Adjust Audio Tone Volume", "Test_Scnario": "Transaction Reversal - Customer\u2019s Farecard is on the Deny List", "Test_Sce_Description": "This scenario will test the exception flow when the customer\u2019s Farecard is on the Deny List. ATS should detect the Virtual Card is on the Deny List, move the card to blocked and remove it from the Deny List. ATS should return a declined/error result back to SA Tool. The SA Tool application should display a declined message to the customer and the transaction should not be conducted. The SA Tool should play the declined audio tone. The Scratchpad should be updated accordingly."}, {"Function_Flow_Name": "Modify screen brightness", "Sub_Flow_Name": "Modify audio tone volume", "Use_Case_Name": "Adjust Audio Tone Volume", "Test_Scnario": "Transaction Reversal - Battery goes below the low battery threshold during reversal", "Test_Sce_Description": "This scenario will test the exception flow when the low battery threshold is high enough that the remote lists can be processed even after the SA Tool device battery goes below the low battery threshold during a successful Farecard tap. If the low battery threshold is reached before Step 4, the application should switch to \u201cOut of Service\u201d mode. Else, the customer\u2019s transaction should be reversed as per Step 5. The application should then switch to \u201cOut of Service\u201d mode."}, {"Function_Flow_Name": "Modify screen brightness", "Sub_Flow_Name": "Modify audio tone volume", "Use_Case_Name": "Adjust Audio Tone Volume", "Test_Scnario": "Transaction Reversal \u2013 Customer taps a card that is not a Farecard", "Test_Sce_Description": "This scenario will test the exception flow if the customer taps a card that is not a Farecard. The SA Tool application should not respond, but the device error message \u201cCard Read Error\u201d should be displayed for a short period of time."}, {"Function_Flow_Name": "Modify screen brightness", "Sub_Flow_Name": "Modify audio tone volume", "Use_Case_Name": "Operator Configures Vibration Control", "Test_Scnario": "Verify the functionality of vibration control adjustment", "Test_Sce_Description": "Check if the operator is able to adjust the vibration control on the SA Tool to the desired level and the changes are saved for the shift. The default haptic feedback should be reset when the operator signs out or a new operator signs in."}, {"Function_Flow_Name": "Modify screen brightness", "Sub_Flow_Name": "Modify audio tone volume", "Use_Case_Name": "Operator Configures Vibration Control", "Test_Scnario": "Verify the functionality of 'Apply' button", "Test_Sce_Description": "Check if the 'Apply' button is functioning correctly. When the operator selects 'Apply', the desired vibration control should be saved for the shift."}, {"Function_Flow_Name": "Modify screen brightness", "Sub_Flow_Name": "Modify audio tone volume", "Use_Case_Name": "Operator Configures Vibration Control", "Test_Scnario": "Verify the functionality of 'Back' button", "Test_Sce_Description": "Check if the 'Back' button is functioning correctly. When the operator presses the back button on the settings screen, the application should revert to the last saved configuration."}, {"Function_Flow_Name": "Modify screen brightness", "Sub_Flow_Name": "Modify audio tone volume", "Use_Case_Name": "Operator Configures Vibration Control", "Test_Scnario": "Verify the functionality of vibration control when SA Tool is offline", "Test_Sce_Description": "Check if the vibration control adjustment functionality works correctly when the SA Tool is offline. The changes should be stored in store-and-forward memory and updated in the Subsystem when the network connection is re-established."}, {"Function_Flow_Name": "Modify screen brightness", "Sub_Flow_Name": "Modify audio tone volume", "Use_Case_Name": "Operator Configures Vibration Control", "Test_Scnario": "Verify the functionality of vibration control when SA Tool is in 'in-service' mode", "Test_Sce_Description": "Check if the vibration control adjustment functionality works correctly when the SA Tool is in 'in-service' mode. The operator should be able to adjust the vibration control to the desired level."}, {"Function_Flow_Name": "Modify screen brightness", "Sub_Flow_Name": "Modify audio tone volume", "Use_Case_Name": "Operator Configures Vibration Control", "Test_Scnario": "Verify the functionality of vibration control when Android device is charged above the minimum battery threshold", "Test_Sce_Description": "Check if the vibration control adjustment functionality works correctly when the Android device is charged above the minimum battery threshold. The operator should be able to adjust the vibration control to the desired level."}, {"Function_Flow_Name": "Modify screen brightness", "Sub_Flow_Name": "Modify audio tone volume", "Use_Case_Name": "Operator Configures Vibration Control", "Test_Scnario": "Verify the functionality of vibration control when operator has valid credentials and is logged into the device", "Test_Sce_Description": "Check if the vibration control adjustment functionality works correctly when the operator has valid credentials and is logged into the device. The operator should be able to adjust the vibration control to the desired level."}, {"Function_Flow_Name": "Modify screen brightness", "Sub_Flow_Name": "Modify audio tone volume", "Use_Case_Name": "Operator Configures Vibration Control", "Test_Scnario": "Verify the performance of vibration control adjustment", "Test_Sce_Description": "Check the performance of the vibration control adjustment functionality. The changes should be saved quickly and the application should not lag or crash."}, {"Function_Flow_Name": "Modify screen brightness", "Sub_Flow_Name": "Modify audio tone volume", "Use_Case_Name": "Operator Configures Vibration Control", "Test_Scnario": "Verify the security of vibration control adjustment", "Test_Sce_Description": "Check if the vibration control adjustment functionality is secure. Unauthorized users should not be able to adjust the vibration control."}, {"Function_Flow_Name": "Modify screen brightness", "Sub_Flow_Name": "Modify audio tone volume", "Use_Case_Name": "Operator selects new Route/Line", "Test_Scnario": "Operator selects new Line but doesn\u2019t select a trip", "Test_Sce_Description": "Verify that when the operator selects a new line but doesn't select a trip, the application resets the trip and stop selection. The apply button should be greyed out and the operator should not be able to save the current inspection parameters."}, {"Function_Flow_Name": "Modify screen brightness", "Sub_Flow_Name": "Modify audio tone volume", "Use_Case_Name": "Operator selects new Route/Line", "Test_Scnario": "Operator selects the desired trip and stop", "Test_Sce_Description": "Check if the operator is able to select the desired trip and stop. In case of a bus, verify if the operator can also enter the vehicle id."}, {"Function_Flow_Name": "Modify screen brightness", "Sub_Flow_Name": "Modify audio tone volume", "Use_Case_Name": "Operator selects new Route/Line", "Test_Scnario": "Auto-selection of first stop/station as inspection location", "Test_Sce_Description": "Ensure that if the operator doesn\u2019t select a stop, the application auto-selects the first stop/station as the inspection location. The inspection location should be updated to Operator\u2019s selection."}, {"Function_Flow_Name": "Modify screen brightness", "Sub_Flow_Name": "Modify audio tone volume", "Use_Case_Name": "Operator selects new Route/Line", "Test_Scnario": "FLATFARE BASED SA Tool operator selects new route parameters", "Test_Sce_Description": "Verify that the FLATFARE BASED SA Tool operator can select new route parameters. The operator should be able to select Surface (Bus / Streetcar) or Subway toggle, Route ID, Vehicle ID, Stop ID, and Region."}, {"Function_Flow_Name": "Modify screen brightness", "Sub_Flow_Name": "Modify audio tone volume", "Use_Case_Name": "Operator selects new Route/Line", "Test_Scnario": "Operator enables auto-positioning for current location", "Test_Sce_Description": "Check if the operator can enable auto-location for route parameters on the SA Tool. The SA Tool should automatically compute the current inspection location and the auto location signal quality indicator on the home screen should start reflecting the auto location signal quality."}, {"Function_Flow_Name": "Modify screen brightness", "Sub_Flow_Name": "Modify audio tone volume", "Use_Case_Name": "Operator selects new Route/Line", "Test_Scnario": "GPS functionality is remotely enabled/disabled on the SA Tool", "Test_Sce_Description": "Ensure that the SA Tool application can receive remote configuration and enable/disable the auto location functionality based on the new configuration in the background."}, {"Function_Flow_Name": "Modify screen brightness", "Sub_Flow_Name": "Modify audio tone volume", "Use_Case_Name": "Operator selects new Route/Line", "Test_Scnario": "Operator disables auto-location functionality", "Test_Sce_Description": "Verify that the operator can disable the auto-location functionality on the SA Tool."}, {"Function_Flow_Name": "Modify screen brightness", "Sub_Flow_Name": "Modify audio tone volume", "Use_Case_Name": "Operator selects new Route/Line", "Test_Scnario": "Operator Overrides Selects/Overrides Current Route Parameters", "Test_Sce_Description": "Check if the operator can select the Additional Options menu on the SA Tool, select Route Parameters, and update the current location. The Route Parameters should be updated to the operator selected location."}, {"Function_Flow_Name": "Modify screen brightness", "Sub_Flow_Name": "Modify audio tone volume", "Use_Case_Name": "Operator selects new Route/Line", "Test_Scnario": "Operator Switches Device Mode for Current SP (DISTANCE BASED TRANSIT and GO Only)", "Test_Sce_Description": "Verify that the operator can change device mode between DISTANCE BASED TRANSIT and GO. The SA Tool application should validate credentials and the operator should be successfully logged in."}, {"Function_Flow_Name": "Modify screen brightness", "Sub_Flow_Name": "Modify audio tone volume", "Use_Case_Name": "Operator selects new Route/Line", "Test_Scnario": "SP Switching is disabled", "Test_Sce_Description": "Ensure that when SP Switching is disabled, the operator is displayed a toast message notification notifying SP switching is disabled."}, {"Function_Flow_Name": "Battery", "Sub_Flow_Name": "Operator checks battery power level", "Use_Case_Name": "Accepting Fare Payment on an Online SA Tool from a Virtual Card using Period Pass \u2013 Low Battery Threshold", "Test_Scnario": "Low Battery Threshold during Fare Payment", "Test_Sce_Description": "Verify that when the battery level of the SA Tool goes below the low battery threshold during a successful Farecard tap, the application switches to 'Out of Service' mode after processing the remote lists."}, {"Function_Flow_Name": "Battery", "Sub_Flow_Name": "Operator checks battery power level", "Use_Case_Name": "Accepting Fare Payment on an Online SA Tool from a Virtual Card using Period Pass \u2013 Low Battery Threshold", "Test_Scnario": "Fare Payment with Non-Farecard", "Test_Sce_Description": "Verify that when a customer taps a card that is not a Farecard, the SA Tool application does not respond and displays a 'Card Read Error' message."}, {"Function_Flow_Name": "Battery", "Sub_Flow_Name": "Operator checks battery power level", "Use_Case_Name": "Accepting Fare Payment on an Online SA Tool from a Virtual Card using Period Pass \u2013 Low Battery Threshold", "Test_Scnario": "Fare Payment within Anti-Passback Window", "Test_Sce_Description": "Verify that when a customer's Farecard is within the Anti-Passback Window, the ATS detects the failure of Anti-Passback checks and the SA Tool application displays a declined message to the customer."}, {"Function_Flow_Name": "Battery", "Sub_Flow_Name": "Operator checks battery power level", "Use_Case_Name": "Accepting Fare Payment on an Online SA Tool from a Virtual Card using Period Pass \u2013 Low Battery Threshold", "Test_Scnario": "Fare Payment with Limited Period Pass outside of valid time and in overdraft", "Test_Sce_Description": "Verify that when a Farecard with a valid Limited Period Pass is tapped outside of the time limit of the product and the Farecard is in overdraft, the ATS detects the invalidity and the SA Tool application displays a declined message to the customer."}, {"Function_Flow_Name": "Battery", "Sub_Flow_Name": "Operator checks battery power level", "Use_Case_Name": "Accepting Fare Payment on an Online SA Tool from a Virtual Card using Period Pass \u2013 Low Battery Threshold", "Test_Scnario": "Fare Payment with Limited Period Pass within valid time", "Test_Sce_Description": "Verify that when a Farecard with a valid Limited Period Pass is tapped within the time limit of the product, the Fare Payment process is completed as per the steps in the Main Use Case."}, {"Function_Flow_Name": "Battery", "Sub_Flow_Name": "Operator checks battery power level", "Use_Case_Name": "Accepting Fare Payment on an Online SA Tool from a Virtual Card using Period Pass \u2013 Low Battery Threshold", "Test_Scnario": "Fare Payment with Limited Period Pass outside of valid time with sufficient e-Purse balance", "Test_Sce_Description": "Verify that when a Farecard with a valid Limited Period Pass is tapped outside of the time limit of the product but has sufficient e-Purse balance, the ATS deducts the fare from the e-Purse."}, {"Function_Flow_Name": "Battery", "Sub_Flow_Name": "Operator checks battery power level", "Use_Case_Name": "Accepting Fare Payment on an Online SA Tool from a Virtual Card using Period Pass \u2013 Low Battery Threshold", "Test_Scnario": "Fare Payment with Expired Period Pass and Insufficient ePurse Balance", "Test_Sce_Description": "Verify that when a customer with an Anonymous Farecard with an Expired Period Pass and ePurse Balance less than the fare amount attempts to make a payment, the ATS returns a declined result back to the SA Tool."}, {"Function_Flow_Name": "Battery", "Sub_Flow_Name": "Operator checks battery power level", "Use_Case_Name": "Accepting Fare Payment on an Online SA Tool from a Virtual Card using Period Pass \u2013 Low Battery Threshold", "Test_Scnario": "Fare Payment with Blocked Virtual Card", "Test_Sce_Description": "Verify that when a customer with a blocked Farecard attempts to make a payment, the ATS detects the card is blocked and returns a declined result back to the SA Tool."}, {"Function_Flow_Name": "Battery", "Sub_Flow_Name": "Operator checks battery power level", "Use_Case_Name": "Accepting Fare Payment on an Online SA Tool from a Virtual Card using Period Pass \u2013 Low Battery Threshold", "Test_Scnario": "Fare Payment with Virtual Card on the Deny List", "Test_Sce_Description": "Verify that when a customer with a Virtual Card on the Deny List attempts to make a payment, the ATS removes the card from the Deny List, sets it to blocked, and returns a declined result back to the SA Tool."}, {"Function_Flow_Name": "Battery", "Sub_Flow_Name": "Operator checks battery power level", "Use_Case_Name": "Accepting Fare Payment on an Online SA Tool from a Virtual Card using Period Pass \u2013 Customer taps a card that is not a Farecard", "Test_Scnario": "Validating Fare Payment with Valid Limited Period Pass", "Test_Sce_Description": "This scenario is to test the fare payment process when the farecard has a valid Limited Period Pass product on it and the time at tap is occurring within the time limit of the Limited Period Pass Product. The system should successfully deduct the fare from the card."}, {"Function_Flow_Name": "Battery", "Sub_Flow_Name": "Operator checks battery power level", "Use_Case_Name": "Accepting Fare Payment on an Online SA Tool from a Virtual Card using Period Pass \u2013 Customer taps a card that is not a Farecard", "Test_Scnario": "Validating Fare Payment with Limited Period Pass outside of valid time", "Test_Sce_Description": "This scenario is to test the fare payment process when the farecard has a valid Limited Period Pass product on it but the time at tap is occurring outside of the time limit of the Limited Period Pass Product. The system should detect the invalidity of the pass and deduct the fare from the e-Purse balance."}, {"Function_Flow_Name": "Battery", "Sub_Flow_Name": "Operator checks battery power level", "Use_Case_Name": "Accepting Fare Payment on an Online SA Tool from a Virtual Card using Period Pass \u2013 Customer taps a card that is not a Farecard", "Test_Scnario": "Validating Fare Payment with Expired Period Pass and Insufficient ePurse Balance", "Test_Sce_Description": "This scenario is to test the fare payment process when the customer has an expired period pass and the ePurse balance is less than the fare amount. The system should decline the transaction and display a declined message to the customer."}, {"Function_Flow_Name": "Battery", "Sub_Flow_Name": "Operator checks battery power level", "Use_Case_Name": "Accepting Fare Payment on an Online SA Tool from a Virtual Card using Period Pass \u2013 Customer taps a card that is not a Farecard", "Test_Scnario": "Validating Fare Payment with Blocked Virtual Card", "Test_Sce_Description": "This scenario is to test the fare payment process when the customer\u2019s Farecard is blocked. The system should detect the blocked card, decline the transaction and display a declined message to the customer."}, {"Function_Flow_Name": "Battery", "Sub_Flow_Name": "Operator checks battery power level", "Use_Case_Name": "Accepting Fare Payment on an Online SA Tool from a Virtual Card using Period Pass \u2013 Customer taps a card that is not a Farecard", "Test_Scnario": "Validating Fare Payment with Virtual Card on the Deny List", "Test_Sce_Description": "This scenario is to test the fare payment process when the customer\u2019s Virtual Card is on the Deny List. The system should detect the card on the Deny List, remove the card from the Deny List, set it to blocked, decline the transaction and display a declined message to the customer."}, {"Function_Flow_Name": "Battery", "Sub_Flow_Name": "Operator checks battery power level", "Use_Case_Name": "Accepting Fare Payment on an Online SA Tool from a Virtual Card using Period Pass \u2013 Customer taps a card that is not a Farecard", "Test_Scnario": "Validating Fare Payment when Battery goes below the low battery threshold during payment", "Test_Sce_Description": "This scenario is to test the fare payment process when the low battery threshold is high enough that the remote lists can be processed even after the SA Tool battery goes below the low battery threshold during a successful Farecard tap. The system should successfully process the transaction."}, {"Function_Flow_Name": "Battery", "Sub_Flow_Name": "Operator checks battery power level", "Use_Case_Name": "Accepting Fare Payment on an Online SA Tool from a Virtual Card using Period Pass \u2013 Customer taps a card that is not a Farecard", "Test_Scnario": "Validating Fare Payment when Tap counter is at the configured limit", "Test_Sce_Description": "This scenario is to test the fare payment process when the Tap counter is at the configured limit. The system should detect the limit, decline the transaction and display a declined message to the customer."}, {"Function_Flow_Name": "Battery", "Sub_Flow_Name": "Operator checks battery power level", "Use_Case_Name": "Accepting Fare Payment on an Online SA Tool from a Virtual Card using Period Pass \u2013 Customer taps a card that is not a Farecard", "Test_Scnario": "Validating Fare Payment with Unreadable Virtual Card", "Test_Sce_Description": "This scenario is to test the fare payment process when the SA Tool application detects the Virtual Card and fails to read it correctly. The system should indicate to the operator that the Virtual Card is unreadable."}, {"Function_Flow_Name": "Battery", "Sub_Flow_Name": "Operator checks battery power level", "Use_Case_Name": "Accepting Fare Payment on an Online SA Tool from a Virtual Card using Period Pass \u2013 Customer taps a card that is not a Farecard", "Test_Scnario": "Validating Fare Payment with Expired Period Pass and Sufficient ePurse Balance", "Test_Sce_Description": "This scenario is to test the fare payment process when the customer\u2019s Virtual Card has an expired period pass but the ePurse balance is more than the fare amount. The system should detect the expired pass and deduct the fare from the ePurse balance."}, {"Function_Flow_Name": "Battery", "Sub_Flow_Name": "Operator checks battery power level", "Use_Case_Name": "Accepting Fare Payment on an Online SA Tool from a Virtual Card using Period Pass \u2013 Customer\u2019s Farecard is within the Anti-Passback Window", "Test_Scnario": "Validating Fare Payment with Valid Limited Period Pass", "Test_Sce_Description": "This scenario is to validate the fare payment process when the farecard has a valid Limited Period Pass product on it and the time at tap is occurring within the time limit of the Limited Period Pass Product. The system should successfully accept the fare payment."}, {"Function_Flow_Name": "Battery", "Sub_Flow_Name": "Operator checks battery power level", "Use_Case_Name": "Accepting Fare Payment on an Online SA Tool from a Virtual Card using Period Pass \u2013 Customer\u2019s Farecard is within the Anti-Passback Window", "Test_Scnario": "Validating Fare Payment with Invalid Limited Period Pass but Sufficient e-Purse Balance", "Test_Sce_Description": "This scenario is to validate the fare payment process when the farecard has a valid Limited Period Pass product on it but the time at tap is occurring outside of the time limit of the Limited Period Pass Product. However, the farecard has sufficient e-Purse balance to cover the transaction. The system should successfully accept the fare payment by deducting the fare from the e-Purse."}, {"Function_Flow_Name": "Battery", "Sub_Flow_Name": "Operator checks battery power level", "Use_Case_Name": "Accepting Fare Payment on an Online SA Tool from a Virtual Card using Period Pass \u2013 Customer\u2019s Farecard is within the Anti-Passback Window", "Test_Scnario": "Validating Fare Payment with Expired Period Pass and Insufficient ePurse Balance", "Test_Sce_Description": "This scenario is to validate the fare payment process when the customer has an expired period pass and the ePurse balance is less than the fare amount. The system should decline the fare payment and display a declined message to the customer."}, {"Function_Flow_Name": "Battery", "Sub_Flow_Name": "Operator checks battery power level", "Use_Case_Name": "Accepting Fare Payment on an Online SA Tool from a Virtual Card using Period Pass \u2013 Customer\u2019s Farecard is within the Anti-Passback Window", "Test_Scnario": "Validating Fare Payment with Blocked Farecard", "Test_Sce_Description": "This scenario is to validate the fare payment process when the customer\u2019s Farecard is blocked. The system should decline the fare payment and display a declined message to the customer."}, {"Function_Flow_Name": "Battery", "Sub_Flow_Name": "Operator checks battery power level", "Use_Case_Name": "Accepting Fare Payment on an Online SA Tool from a Virtual Card using Period Pass \u2013 Customer\u2019s Farecard is within the Anti-Passback Window", "Test_Scnario": "Validating Fare Payment with Farecard on the Deny List", "Test_Sce_Description": "This scenario is to validate the fare payment process when the customer\u2019s Farecard is on the Deny List. The system should decline the fare payment, remove the card from the Deny List, set it to blocked, and display a declined message to the customer."}, {"Function_Flow_Name": "Battery", "Sub_Flow_Name": "Operator checks battery power level", "Use_Case_Name": "Accepting Fare Payment on an Online SA Tool from a Virtual Card using Period Pass \u2013 Customer\u2019s Farecard is within the Anti-Passback Window", "Test_Scnario": "Validating Fare Payment during Low Battery", "Test_Sce_Description": "This scenario is to validate the fare payment process when the battery goes below the low battery threshold during payment. The system should switch to \u201cOut of Service\u201d mode after processing the fare payment if the low battery threshold is reached."}, {"Function_Flow_Name": "Battery", "Sub_Flow_Name": "Operator checks battery power level", "Use_Case_Name": "Accepting Fare Payment on an Online SA Tool from a Virtual Card using Period Pass \u2013 Customer\u2019s Farecard is within the Anti-Passback Window", "Test_Scnario": "Validating Fare Payment with Non-Farecard", "Test_Sce_Description": "This scenario is to validate the fare payment process when the customer taps a card that is not a Farecard. The system should display the \u201cCard Read Error\u201d toast message for a short period of time."}, {"Function_Flow_Name": "Battery", "Sub_Flow_Name": "Operator checks battery power level", "Use_Case_Name": "Accepting Fare Payment on an Online SA Tool from a Virtual Card using Period Pass \u2013 Customer\u2019s Farecard is within the Anti-Passback Window", "Test_Scnario": "Validating Fare Payment with Farecard within the Anti-Passback Window", "Test_Sce_Description": "This scenario is to validate the fare payment process when the customer\u2019s card is within the Anti-Passback Window. The system should decline the fare payment and display a declined message to the customer."}, {"Function_Flow_Name": "Battery", "Sub_Flow_Name": "Operator checks battery power level", "Use_Case_Name": "Accepting Fare Payment on an Online SA Tool from a Virtual Card using Period Pass \u2013 Customer\u2019s Farecard is within the Anti-Passback Window", "Test_Scnario": "Validating Fare Payment with Non-Activated Card", "Test_Sce_Description": "This scenario is to validate the fare payment process when the customer taps a non-activated card. The system should decline the fare payment and display a declined message to the customer."}, {"Function_Flow_Name": "Battery", "Sub_Flow_Name": "Operator checks battery power level", "Use_Case_Name": "Accepting Fare Payment on an Online SA Tool from a Virtual Card using Period Pass \u2013 Limited Period Pass outside of valid time while card is in overdraft", "Test_Scnario": "Validating Limited Period Pass within valid time", "Test_Sce_Description": "This scenario is to validate the functionality of the system when the farecard has a valid Limited Period Pass product on it and the time at tap is occurring within the time limit of the Limited Period Pass Product. The system should successfully accept the fare payment."}, {"Function_Flow_Name": "Battery", "Sub_Flow_Name": "Operator checks battery power level", "Use_Case_Name": "Accepting Fare Payment on an Online SA Tool from a Virtual Card using Period Pass \u2013 Limited Period Pass outside of valid time while card is in overdraft", "Test_Scnario": "Validating Limited Period Pass outside valid time with sufficient e-Purse balance", "Test_Sce_Description": "This scenario is to validate the functionality of the system when the farecard has a valid Limited Period Pass product on it and the time at tap is occurring outside of the time limit of the Limited Period Pass Product but the farecard has sufficient e-Purse balance to cover the transaction. The system should successfully accept the fare payment by deducting the fare from the e-Purse."}, {"Function_Flow_Name": "Battery", "Sub_Flow_Name": "Operator checks battery power level", "Use_Case_Name": "Accepting Fare Payment on an Online SA Tool from a Virtual Card using Period Pass \u2013 Limited Period Pass outside of valid time while card is in overdraft", "Test_Scnario": "Handling Anonymous Farecard with an Expired Period Pass and ePurse Balance Less than the Fare Amount", "Test_Sce_Description": "This scenario is to validate the functionality of the system when the customer has an expired period pass, ePurse balance is less than the fare amount and the customer has an anonymous Virtual Card. The system should decline the transaction and display a declined message to the customer."}, {"Function_Flow_Name": "Battery", "Sub_Flow_Name": "Operator checks battery power level", "Use_Case_Name": "Accepting Fare Payment on an Online SA Tool from a Virtual Card using Period Pass \u2013 Limited Period Pass outside of valid time while card is in overdraft", "Test_Scnario": "Handling Blocked Virtual Card", "Test_Sce_Description": "This scenario is to validate the functionality of the system when the customer\u2019s Farecard is blocked. The system should decline the transaction and display a declined message to the customer."}, {"Function_Flow_Name": "Battery", "Sub_Flow_Name": "Operator checks battery power level", "Use_Case_Name": "Accepting Fare Payment on an Online SA Tool from a Virtual Card using Period Pass \u2013 Limited Period Pass outside of valid time while card is in overdraft", "Test_Scnario": "Handling Virtual Card on the Deny List", "Test_Sce_Description": "This scenario is to validate the functionality of the system when the customer\u2019s Virtual Card is on the Deny List. The system should remove the card from the Deny List, set it to blocked, decline the transaction and display a declined message to the customer."}, {"Function_Flow_Name": "Battery", "Sub_Flow_Name": "Operator checks battery power level", "Use_Case_Name": "Accepting Fare Payment on an Online SA Tool from a Virtual Card using Period Pass \u2013 Limited Period Pass outside of valid time while card is in overdraft", "Test_Scnario": "Handling Low Battery Threshold during Payment", "Test_Sce_Description": "This scenario is to validate the functionality of the system when the battery goes below the low battery threshold during payment. The system should still be able to process the remote lists even after the SA Tool battery goes below the low battery threshold during a successful Farecard tap."}, {"Function_Flow_Name": "Battery", "Sub_Flow_Name": "Operator checks battery power level", "Use_Case_Name": "Accepting Fare Payment on an Online SA Tool from a Virtual Card using Period Pass \u2013 Limited Period Pass outside of valid time while card is in overdraft", "Test_Scnario": "Handling Tap Counter at the Configured Limit", "Test_Sce_Description": "This scenario is to validate the functionality of the system when the tap counter is at the configured limit. The system should decline the transaction and display a declined message to the customer."}, {"Function_Flow_Name": "Battery", "Sub_Flow_Name": "Operator checks battery power level", "Use_Case_Name": "Accepting Fare Payment on an Online SA Tool from a Virtual Card using Period Pass \u2013 Limited Period Pass outside of valid time while card is in overdraft", "Test_Scnario": "Validating Unreadable Virtual Card", "Test_Sce_Description": "This scenario is to validate the functionality of the system when the SA Tool application detects the Virtual Card and fails to read it correctly. The system should indicate to the operator that the Virtual Card is unreadable."}, {"Function_Flow_Name": "Battery", "Sub_Flow_Name": "Operator checks battery power level", "Use_Case_Name": "Accepting Fare Payment on an Online SA Tool from a Virtual Card using Period Pass \u2013 Limited Period Pass outside of valid time while card is in overdraft", "Test_Scnario": "Handling Expired Period Pass with Sufficient ePurse Balance", "Test_Sce_Description": "This scenario is to validate the functionality of the system when the customer\u2019s Virtual Card has an expired period pass but the customer\u2019s ePurse balance is more than the fare amount. The system should successfully accept the fare payment by deducting the fare from the e-Purse."}, {"Function_Flow_Name": "Battery", "Sub_Flow_Name": "Operator checks battery power level", "Use_Case_Name": "Cardholder Taps-On an Online SA Tool to a Fare-by-Zone TA with Virtual Card Media", "Test_Scnario": "Cardholder initiates a trip and taps the Virtual Card Media", "Test_Sce_Description": "Verify that when the Cardholder initiates a trip and taps the Virtual Card Media on the device Card Reader, the device detects the Virtual Card media and reads the scratchpad (Card ID)."}, {"Function_Flow_Name": "Battery", "Sub_Flow_Name": "Operator checks battery power level", "Use_Case_Name": "Cardholder Taps-On an Online SA Tool to a Fare-by-Zone TA with Virtual Card Media", "Test_Scnario": "Device checks for valid Virtual Farecard", "Test_Sce_Description": "Verify that the device checks if the media presented is a valid Virtual Farecard and the card is valid (i.e. able to communicate, is a Virtual Card, and not blocked)."}, {"Function_Flow_Name": "Battery", "Sub_Flow_Name": "Operator checks battery power level", "Use_Case_Name": "Cardholder Taps-On an Online SA Tool to a Fare-by-Zone TA with Virtual Card Media", "Test_Scnario": "Device sends the tap to ATS for processing", "Test_Sce_Description": "Verify that the device sends the tap to ATS for processing. ATS checks the online hotlist and completes the fare processing. ATS then sends the tap-on success result back to the device via API."}, {"Function_Flow_Name": "Battery", "Sub_Flow_Name": "Operator checks battery power level", "Use_Case_Name": "Cardholder Taps-On an Online SA Tool to a Fare-by-Zone TA with Virtual Card Media", "Test_Scnario": "Right to travel is conferred to the Cardholder", "Test_Sce_Description": "Verify that the right to travel is conferred to the Cardholder by updating the HMI of the SA Tool. The FPS \u2013 E-Purse Tap On is provided to the cardholder. The tap counter is checked and reset to 0 if it isn't already at 0 and the scratchpad on the Virtual Card is updated."}, {"Function_Flow_Name": "Battery", "Sub_Flow_Name": "Operator checks battery power level", "Use_Case_Name": "Cardholder Taps-On an Online SA Tool to a Fare-by-Zone TA with Virtual Card Media", "Test_Scnario": "Device is offline and not connected to ATS", "Test_Sce_Description": "Verify that if the SA Tool is not online and not connected to ATS, the device will collect offline tap details and once the device returns back online, offline taps will be sent to ATS via bulk upload."}, {"Function_Flow_Name": "Battery", "Sub_Flow_Name": "Operator checks battery power level", "Use_Case_Name": "Cardholder Taps-On an Online SA Tool to a Fare-by-Zone TA with Virtual Card Media", "Test_Scnario": "Customer uses audio jack to hear instructions", "Test_Sce_Description": "Verify that the user will listen to the instructions through the headphones. The steps from Main Use Case will be completed as follows: Customer inserts headphones into the Audio jack which automatically switches the device into audio assist mode."}, {"Function_Flow_Name": "Battery", "Sub_Flow_Name": "Operator checks battery power level", "Use_Case_Name": "Cardholder Taps-On an Online SA Tool to a Fare-by-Zone TA with Virtual Card Media", "Test_Scnario": "Non-Revenue Virtual Card Media is tapped on the Device", "Test_Sce_Description": "Verify that the device will send the tap like any other Open Payments Media to ATS when the Virtual Card media is a non-revenue media."}, {"Function_Flow_Name": "Battery", "Sub_Flow_Name": "Operator checks battery power level", "Use_Case_Name": "Cardholder Taps-On an Online SA Tool to a Fare-by-Zone TA with Virtual Card Media", "Test_Scnario": "Virtual Card contains a Default O/D and the Customer Taps on at either the Origin or Destination Station", "Test_Sce_Description": "Verify that if ATS returns the tap results stating that the current tap is associated with the Virtual Card\u2019s default trip, the device will display the default trip success screen."}, {"Function_Flow_Name": "Battery", "Sub_Flow_Name": "Operator checks battery power level", "Use_Case_Name": "Cardholder Taps-On an Online SA Tool to a Fare-by-Zone TA with Virtual Card Media", "Test_Scnario": "Virtual Card contains a Default O/D and the Customer Overrides the Default Trip prior to tapping-on", "Test_Sce_Description": "Verify that the Device will override the default O/D contained on the Virtual Card and ATS will process the tap as a regular tap-on when the Virtual Card media contains a default trip and the current tap location is either the origin or destination."}, {"Function_Flow_Name": "Battery", "Sub_Flow_Name": "Operator checks battery power level", "Use_Case_Name": "Cardholder Taps-On an Online SA Tool to a Fare-by-Zone TA with Virtual Card Media", "Test_Scnario": "Virtual Card does not contain a Default O/D and the Customer Overrides the Default Trip prior to tapping-on", "Test_Sce_Description": "Verify that if the Virtual Card with no Default O/D is tapped on while the device is in Override mode, the device will process the tap as a result tap-on."}, {"Function_Flow_Name": "Battery", "Sub_Flow_Name": "Operator checks battery power level", "Use_Case_Name": "Cardholder Taps-On an Online SA Tool to a Fare-by-Zone TA with Virtual Card Media", "Test_Scnario": "Tap a Virtual Card on online SA Tool where card is in good standing, but scratchpad blocked parameter needs to be updated", "Test_Sce_Description": "Verify that the device provides the appropriate feedback to the Cardholder of a successful tap. The FPS \u2013 Virtual Card E-Purse Flat Fare Accepted Screen is provided to the cardholder. The tap counter is checked and reset to 0 if it isn't already at 0. The Virtual Card scratchpad is updated to remove the block parameter and prioritizes the accepted response from ATS."}, {"Function_Flow_Name": "Battery", "Sub_Flow_Name": "Operator checks battery power level", "Use_Case_Name": "Cardholder Taps-On an Online SA Tool to a Fare-by-Zone TA with Virtual Card Media", "Test_Scnario": "Virtual Card Media fails Card Authentication check", "Test_Sce_Description": "Verify that the system correctly handles the scenario when the Virtual Card Media fails the Card Authentication check."}, {"Function_Flow_Name": "Battery", "Sub_Flow_Name": "SA Tool battery dies", "Use_Case_Name": "Out-of-Service State", "Test_Scnario": "Out-of-Service State", "Test_Sce_Description": "Verify that when the SA Tool is in the 'Out-of-Service' state, it does not accept a Farecard for any kind of functionality and may require maintenance to restore out-of-order components."}, {"Function_Flow_Name": "Battery", "Sub_Flow_Name": "SA Tool battery dies", "Use_Case_Name": "Out-of-Service State", "Test_Scnario": "Operator Sign-in during Out-of-Service State", "Test_Sce_Description": "Verify that if an operator is signed-in and the device goes into out-of-service state, the SA Tool application does not close the operator\u2019s shift unless the operator has requested to sign-off."}, {"Function_Flow_Name": "Battery", "Sub_Flow_Name": "SA Tool battery dies", "Use_Case_Name": "Out-of-Service State", "Test_Scnario": "Standby State", "Test_Sce_Description": "Verify that an operator can temporarily suspend all SA Tool functionality while in Standby state. After the SA Tool remains inactive for a configurable period of time, the SA Tool should switch into a Standby state where the screen will turn off."}, {"Function_Flow_Name": "Battery", "Sub_Flow_Name": "SA Tool battery dies", "Use_Case_Name": "Out-of-Service State", "Test_Scnario": "Standby State with SA Tool application running in the background", "Test_Sce_Description": "Verify that if the SA Tool PDS application is running but is not in the foreground, the application will be in Standby State. Once in the standby mode, the SA tool should disconnect from all the peripherals i.e. the card reader, PIN pad and the printer to conserve battery life."}, {"Function_Flow_Name": "Battery", "Sub_Flow_Name": "SA Tool battery dies", "Use_Case_Name": "Out-of-Service State", "Test_Scnario": "Switching back to SA Tool application from Standby State", "Test_Sce_Description": "Verify that in order to resume the functionality of the SA Tool application, the operator merely needs to switch back to the SA Tool application. The third-party applications may continue to run in the background."}, {"Function_Flow_Name": "Battery", "Sub_Flow_Name": "SA Tool battery dies", "Use_Case_Name": "Out-of-Service State", "Test_Scnario": "Revenue Mode", "Test_Sce_Description": "Verify that in the Revenue Mode, the operator can perform inspection, fare payments, sales, refunds/reversals, farecard queries, and other customer service gestures. SA tool should only have access to the EPT in the revenue mode and should accept the credit and debit payments."}, {"Function_Flow_Name": "Battery", "Sub_Flow_Name": "SA Tool battery dies", "Use_Case_Name": "Out-of-Service State", "Test_Scnario": "Training Mode", "Test_Sce_Description": "Verify that the Training Mode allows the SA Tool operator to mimic all functionality available within Sales Mode without accepting payment, and only sending non-revenue transactions. Only non-revenue Farecard should be accepted in Training Mode."}, {"Function_Flow_Name": "Battery", "Sub_Flow_Name": "SA Tool battery dies", "Use_Case_Name": "Out-of-Service State", "Test_Scnario": "Out-of-Service State with Customer Interaction", "Test_Sce_Description": "Verify that when the device is in Out-of-Service state, if a customer attempts to tap their Open Payments Media on the card reader, the device does not detect the media and remains in Out-of-Service State."}, {"Function_Flow_Name": "Battery", "Sub_Flow_Name": "SA Tool battery dies", "Use_Case_Name": "Out-of-Service State", "Test_Scnario": "Device configured for only farecard reversals", "Test_Sce_Description": "Verify that when the device is configured for only farecard reversals, if a customer attempts to tap their Open Payments Media on the card reader, the 'Only Available for Farecards' error message is provided to the cardholder."}, {"Function_Flow_Name": "Battery", "Sub_Flow_Name": "SA Tool battery dies", "Use_Case_Name": "Out-of-Service State", "Test_Scnario": "Device in Pilot mode with unapproved media", "Test_Sce_Description": "Verify that when the device is provisioned in beta mode and an Open Payments media that is not on the approved media list is tapped on the device, the 'Declined \u2013 Not Accepted, Tap Farecard' screen is provided to the cardholder."}, {"Function_Flow_Name": "Battery", "Sub_Flow_Name": "SA Tool battery dies", "Use_Case_Name": "Out-of-Service State", "Test_Scnario": "Open Payments Media on the BIN Blocking List", "Test_Sce_Description": "Verify that when a customer\u2019s Open Payments Media is on the BIN Blocking List, the device plays the decline audio tone and displays the 'Declined \u2013 Try Another Card (BIN Blocked)' screen."}, {"Function_Flow_Name": "Battery", "Sub_Flow_Name": "SA Tool battery dies", "Use_Case_Name": "Out-of-Service State", "Test_Scnario": "Interac Card reversal while Interac is disabled", "Test_Sce_Description": "Verify that when a customer attempts to reverse fare payment with Interac Card while Interac is disabled on SA Tool, the device determines that the media tapped is not supported and displays an error message."}, {"Function_Flow_Name": "Battery", "Sub_Flow_Name": "SA Tool battery dies", "Use_Case_Name": "Out-of-Service State", "Test_Scnario": "Open Payment Card reversal while Open Payments are disabled", "Test_Sce_Description": "Verify that when a customer attempts to reverse fare payment with Open Payment Card while Open Payments are disabled on SA Tool, the device determines that the media tapped is not supported and displays an error message."}, {"Function_Flow_Name": "Battery", "Sub_Flow_Name": "SA Tool battery dies", "Use_Case_Name": "Out-of-Service State", "Test_Scnario": "Open Payment Card reversal while corresponding payment method / card brand is disabled", "Test_Sce_Description": "Verify that when a customer attempts to reverse fare payment with Open Payment Card while the corresponding payment method / card brand is disabled on SA Tool, the device determines that the media tapped is not supported and displays an error message."}, {"Function_Flow_Name": "Battery", "Sub_Flow_Name": "SA Tool battery dies", "Use_Case_Name": "Standby State", "Test_Scnario": "Switch SA Tool from Standby to In-Service State", "Test_Sce_Description": "Verify that the operator is able to switch the SA Tool from standby to in-service state by pressing the physical power button, entering the lock screen passcode and signing in to the SA Tool application as an existing user."}, {"Function_Flow_Name": "Battery", "Sub_Flow_Name": "SA Tool battery dies", "Use_Case_Name": "Standby State", "Test_Scnario": "Switch SA Tool from Standby to In-Service State before threshold requiring login", "Test_Sce_Description": "Verify that if the operator has not been in \u201cstandby\u201d state longer than the configurable threshold value that requires logging in, the SA Tool displays the home screen without requiring sign in and navigation."}, {"Function_Flow_Name": "Battery", "Sub_Flow_Name": "SA Tool battery dies", "Use_Case_Name": "Standby State", "Test_Scnario": "Switch SA Tool from In-Service to Standby State", "Test_Sce_Description": "Verify that the operator is able to switch the SA Tool from in-service to standby state by pressing the physical power button once and the SA Tool turns off the screen and goes into standby state."}, {"Function_Flow_Name": "Battery", "Sub_Flow_Name": "SA Tool battery dies", "Use_Case_Name": "Standby State", "Test_Scnario": "Operator navigates away from the SA Tool Application", "Test_Sce_Description": "Verify that if the operator switches to a third party application on SA Tool, the SA Tool application runs in the background and goes into standby state."}, {"Function_Flow_Name": "Battery", "Sub_Flow_Name": "SA Tool battery dies", "Use_Case_Name": "Standby State", "Test_Scnario": "Change SP after switching device from standby to in-service state", "Test_Sce_Description": "Verify that if the operator attempts to change SP on the login screen after switching the device from standby to in-service state, the SA Tool application notifies the operator with a corresponding error message."}, {"Function_Flow_Name": "Battery", "Sub_Flow_Name": "SA Tool battery dies", "Use_Case_Name": "Standby State", "Test_Scnario": "Verify Out-of-Service State", "Test_Sce_Description": "Verify that if a SA Tool is in \u201cOut-of-Service\u201d state, it is unable to accept a Farecard for any kind of functionality and may require maintenance to restore out-of-order components."}, {"Function_Flow_Name": "Battery", "Sub_Flow_Name": "SA Tool battery dies", "Use_Case_Name": "Standby State", "Test_Scnario": "Verify Standby State", "Test_Sce_Description": "Verify that an operator can temporarily suspend all SA Tool functionality while in Standby state and the SA Tool disconnects from all the peripherals i.e. the card reader, PIN pad and the printer to conserve battery life."}, {"Function_Flow_Name": "Battery", "Sub_Flow_Name": "SA Tool battery dies", "Use_Case_Name": "Standby State", "Test_Scnario": "Verify Revenue Mode", "Test_Sce_Description": "Verify that in Revenue Mode, the SA Tool operator can interact with customers and perform inspection, fare payments, sales, refunds/reversals, farecard queries, and other customer service gestures."}, {"Function_Flow_Name": "Battery", "Sub_Flow_Name": "SA Tool battery dies", "Use_Case_Name": "Standby State", "Test_Scnario": "Verify Training Mode", "Test_Sce_Description": "Verify that in Training Mode, the SA Tool operator can mimic all functionality available within Sales Mode without accepting payment, and only sending non-revenue transactions."}, {"Function_Flow_Name": "Battery", "Sub_Flow_Name": "SA Tool battery dies", "Use_Case_Name": "Standby State", "Test_Scnario": "Verify User Access", "Test_Sce_Description": "Verify that different users have different access rights as per the User Management Portal group."}, {"Function_Flow_Name": "Battery", "Sub_Flow_Name": "SA Tool battery dies", "Use_Case_Name": "SA Tool application is running in the background", "Test_Scnario": "Launching the SA Tool Application", "Test_Sce_Description": "Verify that the authorized operator is able to launch the SA Tool Application successfully. The application should perform continuous diagnostic checks for network/cellular connection, battery level, and available storage space. After successful launch, the sign-in screen should be displayed."}, {"Function_Flow_Name": "Battery", "Sub_Flow_Name": "SA Tool battery dies", "Use_Case_Name": "SA Tool application is running in the background", "Test_Scnario": "SA Tool Application Launch with No Network Connection", "Test_Sce_Description": "Verify that the SA Tool Application can be launched even when there is no network connection. The application should perform continuous diagnostic checks and indicate on the tool that the device is unable to connect to a network. The application should still launch and operate in offline mode."}, {"Function_Flow_Name": "Battery", "Sub_Flow_Name": "SA Tool battery dies", "Use_Case_Name": "SA Tool application is running in the background", "Test_Scnario": "SA Tool Application Launch with Critical Failures", "Test_Sce_Description": "Verify that the SA Tool Application handles critical failures during launch. The application should perform initial self-diagnostic checks and if it finds critical failures, it should go to error state."}, {"Function_Flow_Name": "Battery", "Sub_Flow_Name": "SA Tool battery dies", "Use_Case_Name": "SA Tool application is running in the background", "Test_Scnario": "SA Tool Application Launch with Storage, Battery or Secure Element Failures", "Test_Sce_Description": "Verify that the SA Tool Application handles failures in storage, battery or secure element during launch. The application should perform continuous self-diagnostics for these elements and if it finds errors or failures, it should go to out-of-service state and send a critical event to SOTI Mobicontrol and CSM."}, {"Function_Flow_Name": "Battery", "Sub_Flow_Name": "SA Tool battery dies", "Use_Case_Name": "SA Tool application is running in the background", "Test_Scnario": "Switching between the PDS SA Tool application and third-party applications", "Test_Sce_Description": "Verify that the authorized operator is able to switch between the SA Tool Application and the whitelisted third-party applications on the device. The operator should be able to navigate to the list of whitelisted third-party applications and launch the desired application."}, {"Function_Flow_Name": "Battery", "Sub_Flow_Name": "SA Tool battery dies", "Use_Case_Name": "SA Tool application is running in the background", "Test_Scnario": "Switching to an Already Launched Application", "Test_Sce_Description": "Verify that the operator can switch to an application that is already launched and running in the background. The operator should be able to navigate through the list of open applications and launch the desired application."}, {"Function_Flow_Name": "Battery", "Sub_Flow_Name": "SA Tool battery dies", "Use_Case_Name": "SA Tool application is running in the background", "Test_Scnario": "SA Tool Application in Standby State", "Test_Sce_Description": "Verify that the SA Tool Application goes into Standby state after remaining inactive for a configurable period of time or when the operator presses the physical power button. In Standby state, the screen should turn off and the SA tool should disconnect from all the peripherals to conserve battery life."}, {"Function_Flow_Name": "Battery", "Sub_Flow_Name": "SA Tool battery dies", "Use_Case_Name": "SA Tool application is running in the background", "Test_Scnario": "SA Tool Application in Revenue Mode", "Test_Sce_Description": "Verify that the SA Tool Application operates correctly in Revenue Mode. In this mode, the operator should be able to perform inspection, fare payments, sales, refunds/reversals, farecard queries, and other customer service gestures. The tool should only have access to the EPT in the revenue mode and accept credit and debit payments."}, {"Function_Flow_Name": "Battery", "Sub_Flow_Name": "SA Tool battery dies", "Use_Case_Name": "SA Tool application is running in the background", "Test_Scnario": "SA Tool Application in Training Mode", "Test_Sce_Description": "Verify that the SA Tool Application operates correctly in Training Mode. In this mode, the operator should be able to mimic all functionality available within Sales Mode without accepting payment, and only sending non-revenue transactions. Only non-revenue Farecard should be accepted in Training Mode."}, {"Function_Flow_Name": "Battery", "Sub_Flow_Name": "SA Tool battery dies", "Use_Case_Name": "SA Tool application is running in the background", "Test_Scnario": "SA Tool Application with Configurable Functionality", "Test_Sce_Description": "Verify that the SA Tool Application has configurable functionality for different types of users such as SA Tool Operators, SA Tool Operators - 3rd Party, Distance based Transitrvisors, Maintenance, and Training. The access to different functionalities should be as per the user type."}, {"Function_Flow_Name": "Battery", "Sub_Flow_Name": "SA Tool battery dies", "Use_Case_Name": "Modes", "Test_Scnario": "Testing the In-Service State", "Test_Sce_Description": "Verify that the SA Tool application is successfully launched and in the foreground when the device is in the 'In-Service' state. Check that the device allows operators to interact with it and that it has both 'Online' and 'Offline' modes with different functionalities."}, {"Function_Flow_Name": "Battery", "Sub_Flow_Name": "SA Tool battery dies", "Use_Case_Name": "Modes", "Test_Scnario": "Testing the Out-of-Service State", "Test_Sce_Description": "Verify that the SA Tool is unable to accept a Farecard for any kind of functionality when it is in the 'Out-of-Service' state. Check that the SA Tool application does not close the operator\u2019s shift unless the operator has requested to sign-off when the device goes into out-of-service state."}, {"Function_Flow_Name": "Battery", "Sub_Flow_Name": "SA Tool battery dies", "Use_Case_Name": "Modes", "Test_Scnario": "Testing the Standby State", "Test_Sce_Description": "Verify that the SA Tool switches into a Standby state where the screen will turn off after it remains inactive for a configurable period of time. Check that the SA tool disconnects from all the peripherals i.e. the card reader, PIN pad and the printer to conserve battery life in the standby state."}, {"Function_Flow_Name": "Battery", "Sub_Flow_Name": "SA Tool battery dies", "Use_Case_Name": "Modes", "Test_Scnario": "Testing the Real-Time Mode", "Test_Sce_Description": "Verify that the Real-Time Mode provides a near real-time response to the Operator of the result for the customer\u2019s media. Check that the Real-Time Mode requires the device to have an active internet connection to ATS to provide a near real-time response."}, {"Function_Flow_Name": "Battery", "Sub_Flow_Name": "SA Tool battery dies", "Use_Case_Name": "Modes", "Test_Scnario": "Testing the Queued Mode", "Test_Sce_Description": "Verify that the Queued Mode sends the taps collected to ATS, whereby no true inspection or fare payment result is provided to the Operator. Check that the device provides a notification to the Operator that their local deny list may be unreliable if the device remains offline for a period greater than the configured 'maximum offline period' time."}, {"Function_Flow_Name": "Battery", "Sub_Flow_Name": "SA Tool battery dies", "Use_Case_Name": "Modes", "Test_Scnario": "Testing the Degraded Mode", "Test_Sce_Description": "Verify that the Degraded Mode only accepts Farecard taps. Check that this mode can either be set through a configuration when Virtual Card is disabled, or after a configurable period of time the device is offline."}, {"Function_Flow_Name": "Battery", "Sub_Flow_Name": "SA Tool battery dies", "Use_Case_Name": "Modes", "Test_Scnario": "Testing the Revenue Mode", "Test_Sce_Description": "Verify that the Revenue Mode allows the SA Tool operator to interact with customers. Check that the operator can perform inspection, fare payments, sales, refunds/reversals, farecard queries, and other customer service gestures in this mode."}, {"Function_Flow_Name": "Battery", "Sub_Flow_Name": "SA Tool battery dies", "Use_Case_Name": "Modes", "Test_Scnario": "Testing the Training Mode", "Test_Sce_Description": "Verify that the Training Mode allows the SA Tool operator to mimic all functionality available within Sales Mode without accepting payment, and only sending non-revenue transactions. Check that only non-revenue Farecard will be accepted in Training Mode."}, {"Function_Flow_Name": "Battery", "Sub_Flow_Name": "SA Tool battery dies", "Use_Case_Name": "Modes", "Test_Scnario": "Testing the Configurable Functionality", "Test_Sce_Description": "Verify that the SA Tool Operators have access to Revenue Mode and can perform core functionalities like Sales, Fare Payment, Inspection, SA Tool Remote Access, Unblock Farecard, and Modify Card Concession."}, {"Function_Flow_Name": "Battery", "Sub_Flow_Name": "SA Tool battery dies", "Use_Case_Name": "Modes", "Test_Scnario": "Testing the Device Parameter Tool Configurations", "Test_Sce_Description": "Verify that the configurations for the SA Tool introduced under the Open Payments release in the Device Parameter Tool are working as expected."}, {"Function_Flow_Name": "Battery", "Sub_Flow_Name": "SA Tool battery dies", "Use_Case_Name": "Revenue Mode", "Test_Scnario": "Split Payment Refund/Reversal with Credit/Debit", "Test_Sce_Description": "Verify that the system correctly handles a split payment refund/reversal where at least one mean of payment is credit or debit. The operator should be able to select to cancel the transaction, and the system should inform the operator that the payment means must be reversed. The operator should be able to confirm the cancellation, and the system should automatically reverse non-credit/debit means of payment. The operator should then be able to choose the mean of payment and prompt the customer to interact with the PIN pad for a refund void. The system should handle both successful and unsuccessful Moneris processing, with appropriate actions and receipts."}, {"Function_Flow_Name": "Battery", "Sub_Flow_Name": "SA Tool battery dies", "Use_Case_Name": "Revenue Mode", "Test_Scnario": "Split Payment Refund/Reversal without Credit/Debit", "Test_Sce_Description": "Verify that the system correctly handles a split payment refund/reversal where none of the means of payment are credit or debit. The operator should be able to select to cancel the transaction, and the system should inform the operator that the payment means must be reversed. The operator should be able to confirm the cancellation, and the system should automatically reverse the payment means and prompt the operator to begin a refund void. A customer and merchant receipt should print, and the system should return to the home screen."}, {"Function_Flow_Name": "Battery", "Sub_Flow_Name": "SA Tool battery dies", "Use_Case_Name": "Revenue Mode", "Test_Scnario": "Exceeding Maximum Quantity", "Test_Sce_Description": "Verify that the system correctly handles a situation where the quantity of product added to the cart exceeds the maximum allowable amount. The system should not allow the operator to add more than the maximum allowable quantity to the shopping cart, and the operator should be able to process the customer\u2019s request in multiple transactions."}, {"Function_Flow_Name": "Battery", "Sub_Flow_Name": "SA Tool battery dies", "Use_Case_Name": "Revenue Mode", "Test_Scnario": "No Eligible Products for Refund/Reversal", "Test_Sce_Description": "Verify that the system correctly handles a situation where no eligible products for refund or reversal are detected. The system should display the relevant error message, which the operator must acknowledge, and then return to the main menu."}, {"Function_Flow_Name": "Battery", "Sub_Flow_Name": "SA Tool battery dies", "Use_Case_Name": "Revenue Mode", "Test_Scnario": "Eligible Products Not Matching Customer Request", "Test_Sce_Description": "Verify that the system correctly handles a situation where products are eligible for refund or reversal, but are not what the customer requested. The operator should be able to inform the customer that their product is not eligible for reversal or refund, and then return to the main menu."}, {"Function_Flow_Name": "Battery", "Sub_Flow_Name": "SA Tool battery dies", "Use_Case_Name": "Revenue Mode", "Test_Scnario": "Internet Connection Failure", "Test_Sce_Description": "Verify that the system correctly handles a situation where there is no internet connection and the operator is performing an action that requires connection to the Internet. The system should time out and display the relevant error message, with options to try again or cancel. If successful connection is restored, the operator should be able to resume the main use case. If the action is cancelled, the system should return to the previous screen."}, {"Function_Flow_Name": "Battery", "Sub_Flow_Name": "SA Tool battery dies", "Use_Case_Name": "Revenue Mode", "Test_Scnario": "Out-of-Service State", "Test_Sce_Description": "Verify that the system correctly handles a situation where the SA Tool is in \u201cOut-of-Service\u201d state. The SA Tool application should not close the operator\u2019s shift unless the operator has requested to sign-off."}, {"Function_Flow_Name": "Battery", "Sub_Flow_Name": "SA Tool battery dies", "Use_Case_Name": "Revenue Mode", "Test_Scnario": "Standby State", "Test_Sce_Description": "Verify that the system correctly handles a situation where the SA Tool is in Standby state. The screen should turn off, and the SA tool should disconnect from all the peripherals to conserve battery life. The operator should be able to press the physical power button and sign-in to the device lock screen to bring the device back into In-Service state."}, {"Function_Flow_Name": "Battery", "Sub_Flow_Name": "SA Tool battery dies", "Use_Case_Name": "Revenue Mode", "Test_Scnario": "SA Tool Running in Background", "Test_Sce_Description": "Verify that the system correctly handles a situation where the SA Tool application is running in the background. The application should be in Standby State, and the SA tool should disconnect from all the peripherals to conserve battery life. The operator should be able to switch back to the SA Tool application to resume its functionality."}, {"Function_Flow_Name": "Battery", "Sub_Flow_Name": "SA Tool battery dies", "Use_Case_Name": "Revenue Mode", "Test_Scnario": "Revenue Mode", "Test_Sce_Description": "Verify that the system correctly handles Revenue Mode. The operator should be able to select this mode upon logon, and perform inspection, fare payments, sales, refunds/reversals, farecard queries, and other customer service gestures. The SA tool should only have access to the EPT in this mode and accept credit and debit payments."}, {"Function_Flow_Name": "Battery", "Sub_Flow_Name": "SA Tool battery dies", "Use_Case_Name": "Revenue Mode", "Test_Scnario": "Training Mode", "Test_Sce_Description": "Verify that the system correctly handles Training Mode. The operator should be able to mimic all functionality available within Sales Mode without accepting payment, and only send non-revenue transactions. Only non-revenue Farecard should be accepted in this mode. Payment by credit/debit should not be enabled, and all paper tickets printed from the SA Tool should indicate that they were printed while in training mode."}, {"Function_Flow_Name": "Battery", "Sub_Flow_Name": "SA Tool battery dies", "Use_Case_Name": "Training Mode", "Test_Scnario": "Verify Out-of-Service State", "Test_Sce_Description": "Check if the SA Tool is unable to accept a Farecard for any kind of functionality when it is in 'Out-of-Service' state. Also, verify if the SA Tool application does not close the operator\u2019s shift unless the operator has requested to sign-off when the device goes into out-of-service state."}, {"Function_Flow_Name": "Battery", "Sub_Flow_Name": "SA Tool battery dies", "Use_Case_Name": "Training Mode", "Test_Scnario": "Verify Standby State", "Test_Sce_Description": "Check if the SA Tool switches into a Standby state after remaining inactive for a configurable period of time. Also, verify if the SA Tool disconnects from all the peripherals i.e. the card reader, PIN pad and the printer to conserve battery life when it is in Standby state."}, {"Function_Flow_Name": "Battery", "Sub_Flow_Name": "SA Tool battery dies", "Use_Case_Name": "Training Mode", "Test_Scnario": "Verify SA Tool application running in the background", "Test_Sce_Description": "Check if the SA Tool device allows the operator to use authorized third-party applications as needed. Also, verify if the SA Tool application goes into Standby State when it is not in the foreground."}, {"Function_Flow_Name": "Battery", "Sub_Flow_Name": "SA Tool battery dies", "Use_Case_Name": "Training Mode", "Test_Scnario": "Verify Revenue Mode", "Test_Sce_Description": "Check if the Revenue Mode allows the SA Tool operator to interact with customers and perform inspection, fare payments, sales, refunds/reversals, farecard queries, and other customer service gestures. Also, verify if the SA tool only has access to the EPT in the revenue mode and accepts the credit and debit payments."}, {"Function_Flow_Name": "Battery", "Sub_Flow_Name": "SA Tool battery dies", "Use_Case_Name": "Training Mode", "Test_Scnario": "Verify Training Mode", "Test_Sce_Description": "Check if the Training Mode allows the SA Tool operator to mimic all functionality available within Sales Mode without accepting payment, and only sending non-revenue transactions. Also, verify if only non-revenue Farecard is accepted in Training Mode."}, {"Function_Flow_Name": "Battery", "Sub_Flow_Name": "SA Tool battery dies", "Use_Case_Name": "Training Mode", "Test_Scnario": "Verify Operator Overrides Selects/Overrides Current Route Parameters", "Test_Sce_Description": "Check if the operator can select the Additional Options menu on the SA Tool, select Route Parameters, and update current location. Also, verify if the Route Parameters are updated to the operator selected location and are automatically updated to the next station upon arrival at the next station."}, {"Function_Flow_Name": "Battery", "Sub_Flow_Name": "SA Tool battery dies", "Use_Case_Name": "Training Mode", "Test_Scnario": "Verify Operator Switches Device Mode for Current SP", "Test_Sce_Description": "Check if the operator can change device mode between DISTANCE BASED TRANSIT and GO. Also, verify if the SA Tool application validates credentials and operator is successfully logged in."}, {"Function_Flow_Name": "Battery", "Sub_Flow_Name": "SA Tool battery dies", "Use_Case_Name": "Training Mode", "Test_Scnario": "Verify SP Switching is disabled", "Test_Sce_Description": "Check if the application enables / disables the SP switching functionality only if no operator is logged in. Also, verify if the operator is displayed a toast message notification notifying SP switching is disabled when they tap on the SP icon on login screen to switch between SPs."}, {"Function_Flow_Name": "Battery", "Sub_Flow_Name": "SA Tool battery dies", "Use_Case_Name": "Users", "Test_Scnario": "Power On SA Tool", "Test_Sce_Description": "Verify that the SA Tool powers on correctly when the power button is pressed and held. The device should boot up, perform an initial self-diagnostic without finding errors or failures, and require the operator to enter the OS Lock screen passcode. After a valid passcode is entered, the device should launch the Android home screen of the SA Tool device."}, {"Function_Flow_Name": "Battery", "Sub_Flow_Name": "SA Tool battery dies", "Use_Case_Name": "Users", "Test_Scnario": "Low Battery Threshold", "Test_Sce_Description": "Verify that the SA Tool does not power on if the device is charged below the low battery threshold. The device should display a low battery warning and prompt the user to charge the device."}, {"Function_Flow_Name": "Battery", "Sub_Flow_Name": "SA Tool battery dies", "Use_Case_Name": "Users", "Test_Scnario": "Sufficient Memory Availability", "Test_Sce_Description": "Verify that the SA Tool powers on correctly when the device has sufficient memory available above the low memory threshold. If the device does not have sufficient memory, an appropriate error message should be displayed."}, {"Function_Flow_Name": "Battery", "Sub_Flow_Name": "SA Tool battery dies", "Use_Case_Name": "Users", "Test_Scnario": "Device Self-Diagnostic Check", "Test_Sce_Description": "Verify that the device performs an initial self-diagnostic check during boot up. If any errors or failures are detected, an appropriate error message should be displayed."}, {"Function_Flow_Name": "Battery", "Sub_Flow_Name": "SA Tool battery dies", "Use_Case_Name": "Users", "Test_Scnario": "OS Lock Screen Passcode", "Test_Sce_Description": "Verify that the device requires the operator to enter the OS Lock screen passcode after successful boot up. If an incorrect passcode is entered, the device should not allow access to the Android home screen."}, {"Function_Flow_Name": "Battery", "Sub_Flow_Name": "SA Tool battery dies", "Use_Case_Name": "Users", "Test_Scnario": "Launch SA Tool Application", "Test_Sce_Description": "Verify that the operator can launch the SA Tool application from the Android home screen after entering a valid passcode. The application should open without any errors."}, {"Function_Flow_Name": "Battery", "Sub_Flow_Name": "SA Tool battery dies", "Use_Case_Name": "Users", "Test_Scnario": "Launch Third-Party Applications", "Test_Sce_Description": "Verify that the operator can launch authorized third-party applications from the Android home screen after entering a valid passcode. The applications should open without any errors."}, {"Function_Flow_Name": "Battery", "Sub_Flow_Name": "SA Tool battery dies", "Use_Case_Name": "Users", "Test_Scnario": "Fare Payment Functionality", "Test_Sce_Description": "Verify that the operator can access and use the Fare Payment functionality of the SA Tool. The functionality should work as expected without any errors."}, {"Function_Flow_Name": "Battery", "Sub_Flow_Name": "SA Tool battery dies", "Use_Case_Name": "Users", "Test_Scnario": "Sales Functionality", "Test_Sce_Description": "Verify that the operator can access and use the Sales functionality of the SA Tool. The functionality should work as expected without any errors."}, {"Function_Flow_Name": "Battery", "Sub_Flow_Name": "SA Tool battery dies", "Use_Case_Name": "Users", "Test_Scnario": "Inspection Functionality", "Test_Sce_Description": "Verify that the operator can access and use the Inspection functionality of the SA Tool. The functionality should work as expected without any errors."}, {"Function_Flow_Name": "Battery", "Sub_Flow_Name": "SA Tool battery dies", "Use_Case_Name": "Configurable Functionality", "Test_Scnario": "Power On SA Tool", "Test_Sce_Description": "Verify that the SA Tool powers on correctly when the power button is pressed and held. The device should boot up, perform an initial self-diagnostic without finding errors or failures, and require the operator to enter the OS Lock screen passcode. After a valid passcode is entered, the device should launch the Android home screen of the SA Tool device."}, {"Function_Flow_Name": "Battery", "Sub_Flow_Name": "SA Tool battery dies", "Use_Case_Name": "Configurable Functionality", "Test_Scnario": "Low Battery Threshold", "Test_Sce_Description": "Verify that the SA Tool does not power on if the battery level is below the low battery threshold. The device should display a low battery warning and prompt the user to charge the device."}, {"Function_Flow_Name": "Battery", "Sub_Flow_Name": "SA Tool battery dies", "Use_Case_Name": "Configurable Functionality", "Test_Scnario": "Sufficient Memory Availability", "Test_Sce_Description": "Verify that the SA Tool powers on only if there is sufficient memory available above the low memory threshold. If the memory is below the threshold, the device should display a low memory warning and prompt the user to free up some memory."}, {"Function_Flow_Name": "Battery", "Sub_Flow_Name": "SA Tool battery dies", "Use_Case_Name": "Configurable Functionality", "Test_Scnario": "OS Lock Screen Passcode", "Test_Sce_Description": "Verify that the SA Tool requires the operator to enter the correct OS Lock screen passcode to access the device. If an incorrect passcode is entered, the device should display an error message and prompt the user to enter the correct passcode."}, {"Function_Flow_Name": "Battery", "Sub_Flow_Name": "SA Tool battery dies", "Use_Case_Name": "Configurable Functionality", "Test_Scnario": "Launching SA Tool Application", "Test_Sce_Description": "Verify that the operator can launch the SA Tool application from the Android home screen of the SA Tool device. The application should open without any errors and display the main interface."}, {"Function_Flow_Name": "Battery", "Sub_Flow_Name": "SA Tool battery dies", "Use_Case_Name": "Configurable Functionality", "Test_Scnario": "Launching Third-Party Applications", "Test_Sce_Description": "Verify that the operator can launch authorized third-party applications from the Android home screen of the SA Tool device. The selected application should open without any errors."}, {"Function_Flow_Name": "Battery", "Sub_Flow_Name": "SA Tool battery dies", "Use_Case_Name": "Configurable Functionality", "Test_Scnario": "Device Self-Diagnostic Check", "Test_Sce_Description": "Verify that the device performs an initial self-diagnostic check during boot up. If any errors or failures are detected, the device should display an error message and prompt the user to resolve the issue."}, {"Function_Flow_Name": "Battery", "Sub_Flow_Name": "SA Tool battery dies", "Use_Case_Name": "Configurable Functionality", "Test_Scnario": "Farecard Acceptance", "Test_Sce_Description": "Verify that the SA Tool accepts both V1 and V2 Farecards. The device should correctly read the information from the Farecard and display it on the screen."}, {"Function_Flow_Name": "Battery", "Sub_Flow_Name": "SA Tool battery dies", "Use_Case_Name": "Configurable Functionality", "Test_Scnario": "Non-Revenue Card Acceptance in Training Mode", "Test_Sce_Description": "Verify that the SA Tool accepts non-revenue fare cards only in Training mode. The device should correctly read the information from the non-revenue card and display it on the screen."}, {"Function_Flow_Name": "Battery", "Sub_Flow_Name": "SA Tool battery dies", "Use_Case_Name": "Configurable Functionality", "Test_Scnario": "Account Status Update", "Test_Sce_Description": "Verify that when the device connects to the User Management service, it updates the account status with the latest information related to the account. The updated account status should be correctly displayed on the device."}, {"Function_Flow_Name": "Battery", "Sub_Flow_Name": "SA Tool battery dies", "Use_Case_Name": "Device Parameter Tool Configurations", "Test_Scnario": "Power On SA Tool", "Test_Sce_Description": "Verify that the SA Tool powers on successfully when the power button is pressed and held. The device should boot up and perform an initial self-diagnostic check without finding any errors or failures. After successful boot up, the device should require the operator to enter the OS Lock screen passcode. After a valid passcode is entered, the device should launch the Android home screen of the SA Tool device."}, {"Function_Flow_Name": "Battery", "Sub_Flow_Name": "SA Tool battery dies", "Use_Case_Name": "Device Parameter Tool Configurations", "Test_Scnario": "Out-of-Service State", "Test_Sce_Description": "Verify that when the SA Tool is in 'Out-of-Service' state, it does not accept a Farecard for any kind of functionality and may require maintenance to restore out-of-order components. If an operator is signed-in and the device goes into out-of-service state, the SA Tool application should not close the operator\u2019s shift unless the operator has requested to sign-off."}, {"Function_Flow_Name": "Battery", "Sub_Flow_Name": "SA Tool battery dies", "Use_Case_Name": "Device Parameter Tool Configurations", "Test_Scnario": "Standby State", "Test_Sce_Description": "Verify that the SA Tool switches into a Standby state after remaining inactive for a configurable period of time or when the physical power button is pressed. In this state, the screen should turn off and the SA tool should disconnect from all the peripherals to conserve battery life. To bring the device back into In-Service state, the operator should press the physical power button and sign-in to the device lock screen."}, {"Function_Flow_Name": "Battery", "Sub_Flow_Name": "SA Tool battery dies", "Use_Case_Name": "Device Parameter Tool Configurations", "Test_Scnario": "SA Tool application running in the background", "Test_Sce_Description": "Verify that the SA Tool device allows the operator to use authorized third-party applications as needed. The operator should be able to launch multiple applications on the android device and move between them. If the SA Tool PDS application is running but is not in the foreground, the application should be in Standby State and disconnect from all the peripherals to conserve battery life. To resume the functionality of the SA Tool application, the operator should switch back to the SA Tool application."}, {"Function_Flow_Name": "Battery", "Sub_Flow_Name": "SA Tool battery dies", "Use_Case_Name": "Device Parameter Tool Configurations", "Test_Scnario": "Revenue Mode", "Test_Sce_Description": "Verify that upon logon the operator can select the Revenue Mode to operate their shift in. In this mode, the operator should be able to perform inspection, fare payments, sales, refunds/reversals, farecard queries, and other customer service gestures. The SA tool should only have access to the EPT in the revenue mode and should accept the credit and debit payments."}, {"Function_Flow_Name": "Battery", "Sub_Flow_Name": "SA Tool battery dies", "Use_Case_Name": "Device Parameter Tool Configurations", "Test_Scnario": "Training Mode", "Test_Sce_Description": "Verify that the Training Mode allows the SA Tool operator to mimic all functionality available within Sales Mode without accepting payment, and only sending non-revenue transactions. Only non-revenue Farecard should be accepted in Training Mode. Payment by credit /debit should not be enabled. All paper tickets printed from the SA Tool should indicate that they were printed while in training mode and should not be a form of valid proof of payment."}, {"Function_Flow_Name": "Battery", "Sub_Flow_Name": "SA Tool battery dies", "Use_Case_Name": "Device Parameter Tool Configurations", "Test_Scnario": "Device Parameter Tool Configurations", "Test_Sce_Description": "Verify that the configurations for the SA Tool introduced under the Open Payments release in the Device Parameter Tool are correctly implemented and function as expected."}, {"Function_Flow_Name": "Check SA Tool device information", "Sub_Flow_Name": "Switch device mode between different SPs (DISTANCE BASED TRANSIT and Distance based Transit only)", "Use_Case_Name": "Operator Overrides Selects/Overrides Current Route Parameters", "Test_Scnario": "Verify Operator Selects Route Parameters", "Test_Sce_Description": "Check if the operator is able to select the Route Parameters from the Additional Options menu on the SA Tool."}, {"Function_Flow_Name": "Check SA Tool device information", "Sub_Flow_Name": "Switch device mode between different SPs (DISTANCE BASED TRANSIT and Distance based Transit only)", "Use_Case_Name": "Operator Overrides Selects/Overrides Current Route Parameters", "Test_Scnario": "Verify Operator Updates Current Location", "Test_Sce_Description": "Check if the operator is able to update the current location in the Route Parameters."}, {"Function_Flow_Name": "Check SA Tool device information", "Sub_Flow_Name": "Switch device mode between different SPs (DISTANCE BASED TRANSIT and Distance based Transit only)", "Use_Case_Name": "Operator Overrides Selects/Overrides Current Route Parameters", "Test_Scnario": "Verify Route Parameters Update", "Test_Sce_Description": "Check if the Route Parameters are updated to the operator selected location."}, {"Function_Flow_Name": "Check SA Tool device information", "Sub_Flow_Name": "Switch device mode between different SPs (DISTANCE BASED TRANSIT and Distance based Transit only)", "Use_Case_Name": "Operator Overrides Selects/Overrides Current Route Parameters", "Test_Scnario": "Verify Automatic Update of Route Parameters", "Test_Sce_Description": "Check if the Route Parameters are automatically updated to the next station upon arrival at the next station."}, {"Function_Flow_Name": "Check SA Tool device information", "Sub_Flow_Name": "Switch device mode between different SPs (DISTANCE BASED TRANSIT and Distance based Transit only)", "Use_Case_Name": "Operator Overrides Selects/Overrides Current Route Parameters", "Test_Scnario": "Verify Operator Overrides Location in Manual Mode", "Test_Sce_Description": "Check if the operator can override the location in manual mode when auto-location is disabled on the SA Tool."}, {"Function_Flow_Name": "Check SA Tool device information", "Sub_Flow_Name": "Switch device mode between different SPs (DISTANCE BASED TRANSIT and Distance based Transit only)", "Use_Case_Name": "Operator Overrides Selects/Overrides Current Route Parameters", "Test_Scnario": "Verify Operator Switches Device Mode", "Test_Sce_Description": "Check if the operator is able to switch the device mode between DISTANCE BASED TRANSIT and GO."}, {"Function_Flow_Name": "Check SA Tool device information", "Sub_Flow_Name": "Switch device mode between different SPs (DISTANCE BASED TRANSIT and Distance based Transit only)", "Use_Case_Name": "Operator Overrides Selects/Overrides Current Route Parameters", "Test_Scnario": "Verify Operator Login", "Test_Sce_Description": "Check if the operator is able to login by entering their valid credentials."}, {"Function_Flow_Name": "Check SA Tool device information", "Sub_Flow_Name": "Switch device mode between different SPs (DISTANCE BASED TRANSIT and Distance based Transit only)", "Use_Case_Name": "Operator Overrides Selects/Overrides Current Route Parameters", "Test_Scnario": "Verify Operator Access Based on Login", "Test_Sce_Description": "Check if the features the operator has access to depend on the TA selected on the Login screen."}, {"Function_Flow_Name": "Check SA Tool device information", "Sub_Flow_Name": "Switch device mode between different SPs (DISTANCE BASED TRANSIT and Distance based Transit only)", "Use_Case_Name": "Operator Overrides Selects/Overrides Current Route Parameters", "Test_Scnario": "Verify SP Switching Disabled", "Test_Sce_Description": "Check if the operator is displayed a toast message notification notifying SP switching is disabled when SP Switching is disabled."}, {"Function_Flow_Name": "Check SA Tool device information", "Sub_Flow_Name": "Switch device mode between different SPs (DISTANCE BASED TRANSIT and Distance based Transit only)", "Use_Case_Name": "Operator Overrides Selects/Overrides Current Route Parameters", "Test_Scnario": "Verify Operator Selects New Line", "Test_Sce_Description": "Check if the operator is able to select a new line and the application resets the trip and stop selection."}, {"Function_Flow_Name": "Check SA Tool device information", "Sub_Flow_Name": "Switch device mode between different SPs (DISTANCE BASED TRANSIT and Distance based Transit only)", "Use_Case_Name": "Operator Overrides Selects/Overrides Current Route Parameters", "Test_Scnario": "Verify Operator Selects New Route Parameters", "Test_Sce_Description": "Check if the operator is able to select new route parameters when they are a FLATFARE BASED employee operating a FLATFARE BASED SA Tool."}, {"Function_Flow_Name": "Check SA Tool device information", "Sub_Flow_Name": "Switch device mode between different SPs (DISTANCE BASED TRANSIT and Distance based Transit only)", "Use_Case_Name": "Operator Overrides Selects/Overrides Current Route Parameters", "Test_Scnario": "Verify Operator Enables Auto-Positioning", "Test_Sce_Description": "Check if the operator is able to enable auto-location for route parameters on the SA Tool."}, {"Function_Flow_Name": "Check SA Tool device information", "Sub_Flow_Name": "Switch device mode between different SPs (DISTANCE BASED TRANSIT and Distance based Transit only)", "Use_Case_Name": "Operator Overrides Selects/Overrides Current Route Parameters", "Test_Scnario": "Verify Auto Location Functionality", "Test_Sce_Description": "Check if the SA Tool automatically computes the current inspection location when the operator turns on automatic location."}, {"Function_Flow_Name": "Check SA Tool device information", "Sub_Flow_Name": "Switch device mode between different SPs (DISTANCE BASED TRANSIT and Distance based Transit only)", "Use_Case_Name": "Operator Overrides Selects/Overrides Current Route Parameters", "Test_Scnario": "Verify GPS Functionality Enabled/Disabled Remotely", "Test_Sce_Description": "Check if the SA Tool application enables/disables the auto location functionality based on the new configuration in background when GPS functionality is remotely enabled/disabled."}, {"Function_Flow_Name": "Check SA Tool device information", "Sub_Flow_Name": "Switch device mode between different SPs (DISTANCE BASED TRANSIT and Distance based Transit only)", "Use_Case_Name": "Operator Overrides Selects/Overrides Current Route Parameters", "Test_Scnario": "Verify Operator Disables Auto-Location Functionality", "Test_Sce_Description": "Check if the operator is able to disable the auto-location functionality on the SA Tool."}, {"Function_Flow_Name": "Check SA Tool device information", "Sub_Flow_Name": "Switch device mode between different SPs (DISTANCE BASED TRANSIT and Distance based Transit only)", "Use_Case_Name": "Operator Selects/Overrides Location (Manual Mode)", "Test_Scnario": "Verify Operator Selects/Overrides Location (Manual Mode)", "Test_Sce_Description": "Check if the operator is able to select and override the current location in manual mode. The operator should be able to select the Additional Options menu on the SA Tool, select Route Parameters, and update the current location. The Route Parameters should be updated to the operator selected location."}, {"Function_Flow_Name": "Check SA Tool device information", "Sub_Flow_Name": "Switch device mode between different SPs (DISTANCE BASED TRANSIT and Distance based Transit only)", "Use_Case_Name": "Operator Selects/Overrides Location (Manual Mode)", "Test_Scnario": "Verify Route Parameters auto-update", "Test_Sce_Description": "Check if the Route Parameters are automatically updated to the next station upon arrival at the next station. The system should detect the arrival at the next station and automatically update the Route Parameters."}, {"Function_Flow_Name": "Check SA Tool device information", "Sub_Flow_Name": "Switch device mode between different SPs (DISTANCE BASED TRANSIT and Distance based Transit only)", "Use_Case_Name": "Operator Selects/Overrides Location (Manual Mode)", "Test_Scnario": "Verify Operator Selects/Overrides Location in Auto-location disabled mode", "Test_Sce_Description": "Check if the operator is able to select and override the current location when Auto-location is disabled on the SA Tool. The operator should be able to continue selecting stops within the route from the Tap Card Screen."}, {"Function_Flow_Name": "Check SA Tool device information", "Sub_Flow_Name": "Switch device mode between different SPs (DISTANCE BASED TRANSIT and Distance based Transit only)", "Use_Case_Name": "Operator Selects/Overrides Location (Manual Mode)", "Test_Scnario": "Verify Operator Switches Device Mode for Current SP", "Test_Sce_Description": "Check if the operator is able to switch device mode between DISTANCE BASED TRANSIT and GO. The operator should be able to select SP (DISTANCE BASED TRANSIT/GO) on the Login screen, enter their login credentials and select \u201clogin\u201d. The SA Tool application should validate credentials and operator should be successfully logged in."}, {"Function_Flow_Name": "Check SA Tool device information", "Sub_Flow_Name": "Switch device mode between different SPs (DISTANCE BASED TRANSIT and Distance based Transit only)", "Use_Case_Name": "Operator Selects/Overrides Location (Manual Mode)", "Test_Scnario": "Verify SP Switching is disabled", "Test_Sce_Description": "Check if the SP Switching is disabled when no operator is logged in. If an operator is logged in, the application should allow them to continue inspecting at their selected SP. Once they successfully sign out, they should only be able to inspect at the SP the device was provisioned for, if the switching functionality is disabled."}, {"Function_Flow_Name": "Check SA Tool device information", "Sub_Flow_Name": "Switch device mode between different SPs (DISTANCE BASED TRANSIT and Distance based Transit only)", "Use_Case_Name": "Operator Selects/Overrides Location (Manual Mode)", "Test_Scnario": "Verify Operator selects a new Line but doesn\u2019t select a trip", "Test_Sce_Description": "Check if the operator is able to select a new line but doesn\u2019t select a trip. The operator should be able to select desired current line. The selected line should be different from the current line and hence, application should reset the trip and stop selection."}, {"Function_Flow_Name": "Check SA Tool device information", "Sub_Flow_Name": "Switch device mode between different SPs (DISTANCE BASED TRANSIT and Distance based Transit only)", "Use_Case_Name": "Operator Selects/Overrides Location (Manual Mode)", "Test_Scnario": "Verify Operator enables auto-positioning for current location", "Test_Sce_Description": "Check if the operator is able to enable auto-location for route parameters on the SA Tool. The operator should be able to select the Additional Options menu on the SA Tool, select Route Parameters, and turn on automatic location. The SA Tool should automatically compute the current inspection location."}, {"Function_Flow_Name": "Check SA Tool device information", "Sub_Flow_Name": "Switch device mode between different SPs (DISTANCE BASED TRANSIT and Distance based Transit only)", "Use_Case_Name": "Operator Selects/Overrides Location (Manual Mode)", "Test_Scnario": "Verify GPS functionality is remotely enabled/disabled on the SA Tool", "Test_Sce_Description": "Check if the GPS functionality is remotely enabled/disabled on the SA Tool. The SA Tool application should receive remote configuration and enable/disable the auto location functionality based on the new configuration in background."}, {"Function_Flow_Name": "Check SA Tool device information", "Sub_Flow_Name": "Switch device mode between different SPs (DISTANCE BASED TRANSIT and Distance based Transit only)", "Use_Case_Name": "Operator Selects/Overrides Location (Manual Mode)", "Test_Scnario": "Verify Operator disables auto-location functionality", "Test_Sce_Description": "Check if the operator is able to disable auto-location functionality. The operator should be able to select the Additional Options menu on the SA Tool, select Route Parameters, and turn off automatic location. The SA Tool should stop computing the current inspection location automatically."}, {"Function_Flow_Name": "Check SA Tool device information", "Sub_Flow_Name": "Switch device mode between different SPs (DISTANCE BASED TRANSIT and Distance based Transit only)", "Use_Case_Name": "Operator Switches Device Mode for Current SP (DISTANCE BASED TRANSIT and GO Only)", "Test_Scnario": "Operator Selects SP on Login Screen", "Test_Sce_Description": "Verify that the operator is able to select the Service Provider (SP) option (either DISTANCE BASED TRANSIT or GO) on the login screen."}, {"Function_Flow_Name": "Check SA Tool device information", "Sub_Flow_Name": "Switch device mode between different SPs (DISTANCE BASED TRANSIT and Distance based Transit only)", "Use_Case_Name": "Operator Switches Device Mode for Current SP (DISTANCE BASED TRANSIT and GO Only)", "Test_Scnario": "Operator Login with Valid Credentials", "Test_Sce_Description": "Verify that the operator is able to login successfully by entering valid credentials after selecting the SP."}, {"Function_Flow_Name": "Check SA Tool device information", "Sub_Flow_Name": "Switch device mode between different SPs (DISTANCE BASED TRANSIT and Distance based Transit only)", "Use_Case_Name": "Operator Switches Device Mode for Current SP (DISTANCE BASED TRANSIT and GO Only)", "Test_Scnario": "SA Tool Application Validates Credentials", "Test_Sce_Description": "Verify that the SA Tool application is able to validate the operator's credentials and allow successful login."}, {"Function_Flow_Name": "Check SA Tool device information", "Sub_Flow_Name": "Switch device mode between different SPs (DISTANCE BASED TRANSIT and Distance based Transit only)", "Use_Case_Name": "Operator Switches Device Mode for Current SP (DISTANCE BASED TRANSIT and GO Only)", "Test_Scnario": "Access to Features Based on Selected SP", "Test_Sce_Description": "Verify that the operator has access to features based on the selected SP. If GO is selected, operator should have access to GO Route Parameters, GO Fare Payments & Inspections, and GO & DISTANCE BASED TRANSIT Sales. If DISTANCE BASED TRANSIT is selected, operator should have access to DISTANCE BASED TRANSIT Route Parameters, DISTANCE BASED TRANSIT Fare Payments & Inspections, and GO & DISTANCE BASED TRANSIT Sales."}, {"Function_Flow_Name": "Check SA Tool device information", "Sub_Flow_Name": "Switch device mode between different SPs (DISTANCE BASED TRANSIT and Distance based Transit only)", "Use_Case_Name": "Operator Switches Device Mode for Current SP (DISTANCE BASED TRANSIT and GO Only)", "Test_Scnario": "SP Switching Disabled", "Test_Sce_Description": "Verify that when SP switching is disabled, the operator is unable to switch between SPs on the login screen and a toast message notification is displayed notifying that SP switching is disabled."}, {"Function_Flow_Name": "Check SA Tool device information", "Sub_Flow_Name": "Switch device mode between different SPs (DISTANCE BASED TRANSIT and Distance based Transit only)", "Use_Case_Name": "Operator Switches Device Mode for Current SP (DISTANCE BASED TRANSIT and GO Only)", "Test_Scnario": "SP Switching Enabled", "Test_Sce_Description": "Verify that when SP switching is enabled, the operator is able to switch between SPs on the login screen."}, {"Function_Flow_Name": "Check SA Tool device information", "Sub_Flow_Name": "Switch device mode between different SPs (DISTANCE BASED TRANSIT and Distance based Transit only)", "Use_Case_Name": "Operator Switches Device Mode for Current SP (DISTANCE BASED TRANSIT and GO Only)", "Test_Scnario": "Operator Sign Out", "Test_Sce_Description": "Verify that the operator is able to sign out successfully and upon sign out, the operator is only able to inspect at the SP the device was provisioned for, if the switching functionality is disabled."}, {"Function_Flow_Name": "Check SA Tool device information", "Sub_Flow_Name": "Switch device mode between different SPs (DISTANCE BASED TRANSIT and Distance based Transit only)", "Use_Case_Name": "Operator Switches Device Mode for Current SP (DISTANCE BASED TRANSIT and GO Only)", "Test_Scnario": "Performance of SA Tool Application", "Test_Sce_Description": "Verify the performance of the SA Tool application by checking the response time when switching between SPs, logging in, accessing features, and signing out."}, {"Function_Flow_Name": "Check SA Tool device information", "Sub_Flow_Name": "Switch device mode between different SPs (DISTANCE BASED TRANSIT and Distance based Transit only)", "Use_Case_Name": "Operator Switches Device Mode for Current SP (DISTANCE BASED TRANSIT and GO Only)", "Test_Scnario": "Security of Operator Credentials", "Test_Sce_Description": "Verify that the operator's login credentials are securely stored and transmitted during the login process."}, {"Function_Flow_Name": "Check SA Tool device information", "Sub_Flow_Name": "Switch device mode between different SPs (DISTANCE BASED TRANSIT and Distance based Transit only)", "Use_Case_Name": "SP Switching is disabled", "Test_Scnario": "SP Switching functionality when disabled", "Test_Sce_Description": "Verify that when SP Switching is disabled, the operator is unable to switch between SPs and a toast message notification is displayed notifying that SP switching is disabled."}, {"Function_Flow_Name": "Check SA Tool device information", "Sub_Flow_Name": "Switch device mode between different SPs (DISTANCE BASED TRANSIT and Distance based Transit only)", "Use_Case_Name": "SP Switching is disabled", "Test_Scnario": "Adding Media to the Pilot List", "Test_Sce_Description": "Verify that the operator is able to add media to the Pilot list by selecting the add option and tapping on the media. Ensure that a confirmation dialogue is presented stating Contactless Successfully Added along with the DPAN."}, {"Function_Flow_Name": "Check SA Tool device information", "Sub_Flow_Name": "Switch device mode between different SPs (DISTANCE BASED TRANSIT and Distance based Transit only)", "Use_Case_Name": "SP Switching is disabled", "Test_Scnario": "Removing Media from the Pilot List", "Test_Sce_Description": "Verify that the operator is able to remove media from the Pilot list by selecting the remove option and tapping on the media. Ensure that a confirmation dialogue is presented stating Contactless Successfully Removed along with the DPAN."}, {"Function_Flow_Name": "Check SA Tool device information", "Sub_Flow_Name": "Switch device mode between different SPs (DISTANCE BASED TRANSIT and Distance based Transit only)", "Use_Case_Name": "SP Switching is disabled", "Test_Scnario": "Adding Media already on the Pilot List", "Test_Sce_Description": "Verify that when the operator attempts to add a media that is already on the Pilot list, a notification is presented stating Notice and This card is already on the pilot list."}, {"Function_Flow_Name": "Check SA Tool device information", "Sub_Flow_Name": "Switch device mode between different SPs (DISTANCE BASED TRANSIT and Distance based Transit only)", "Use_Case_Name": "SP Switching is disabled", "Test_Scnario": "Removing Media not on the Pilot List", "Test_Sce_Description": "Verify that when the operator attempts to remove a media that is not on the Pilot list, a confirmation dialogue is presented stating Contactless Successfully Removed along with the DPAN, even if the media has already been removed."}, {"Function_Flow_Name": "Check SA Tool device information", "Sub_Flow_Name": "Switch device mode between different SPs (DISTANCE BASED TRANSIT and Distance based Transit only)", "Use_Case_Name": "SP Switching is disabled", "Test_Scnario": "Adding/Removing Media that has failed ODA check", "Test_Sce_Description": "Verify that when the operator attempts to add or remove a media that has failed the ODA check, the device rejects the tap and a confirmation dialogue is presented stating Unsuccessful and This card is not compatible."}, {"Function_Flow_Name": "Check SA Tool device information", "Sub_Flow_Name": "Switch device mode between different SPs (DISTANCE BASED TRANSIT and Distance based Transit only)", "Use_Case_Name": "SP Switching is disabled", "Test_Scnario": "Adding/Removing Expired Media", "Test_Sce_Description": "Verify that when the operator attempts to add or remove an expired media, the device rejects the tap and a confirmation dialogue is presented stating Unsuccessful and This card is expired."}, {"Function_Flow_Name": "Check SA Tool device information", "Sub_Flow_Name": "Switch device mode between different SPs (DISTANCE BASED TRANSIT and Distance based Transit only)", "Use_Case_Name": "SP Switching is disabled", "Test_Scnario": "Adding/Removing Media when Device is Offline", "Test_Sce_Description": "Verify the system behavior when the device is offline and the user attempts to add or remove media from the pilot list. The system should handle this gracefully and provide an appropriate error message."}, {"Function_Flow_Name": "Check SA Tool device information", "Sub_Flow_Name": "Switch device mode between different SPs (DISTANCE BASED TRANSIT and Distance based Transit only)", "Use_Case_Name": "SP Switching is disabled", "Test_Scnario": "SA Tool in Out-of-Service State", "Test_Sce_Description": "Verify that when the SA Tool is in Out-of-Service state, it is unable to accept a Farecard for any kind of functionality and may require maintenance to restore out-of-order components."}, {"Function_Flow_Name": "Check SA Tool device information", "Sub_Flow_Name": "Switch device mode between different SPs (DISTANCE BASED TRANSIT and Distance based Transit only)", "Use_Case_Name": "SP Switching is disabled", "Test_Scnario": "SA Tool in Standby State", "Test_Sce_Description": "Verify that when the SA Tool is in Standby state, the screen is turned off and the SA tool disconnects from all the peripherals i.e. the card reader, PIN pad and the printer to conserve battery life."}, {"Function_Flow_Name": "Check SA Tool device information", "Sub_Flow_Name": "Switch device mode between different SPs (DISTANCE BASED TRANSIT and Distance based Transit only)", "Use_Case_Name": "SP Switching is disabled", "Test_Scnario": "SA Tool in Revenue Mode", "Test_Sce_Description": "Verify that in Revenue Mode, the SA Tool operator can perform inspection, fare payments, sales, refunds/reversals, farecard queries, and other customer service gestures. SA tool will only have access to the EPT in the revenue mode and will accept the credit and debit payments."}, {"Function_Flow_Name": "Check SA Tool device information", "Sub_Flow_Name": "Switch device mode between different SPs (DISTANCE BASED TRANSIT and Distance based Transit only)", "Use_Case_Name": "SP Switching is disabled", "Test_Scnario": "SA Tool in Training Mode", "Test_Sce_Description": "Verify that in Training Mode, the SA Tool operator can mimic all functionality available within Sales Mode without accepting payment, and only sending non-revenue transactions. Only non-revenue Farecard will be accepted in Training Mode."}, {"Function_Flow_Name": "Check SA Tool device information", "Sub_Flow_Name": "Switch device mode between different SPs (DISTANCE BASED TRANSIT and Distance based Transit only)", "Use_Case_Name": "SP Switching is disabled", "Test_Scnario": "SA Tool Operators Access", "Test_Sce_Description": "Verify that SA Tool Operators have access to Revenue Mode, Core Functionality - Sales, Fare Payment, Inspection, SA Tool Remote Access, Unblock Farecard, and Modify Card Concession."}, {"Function_Flow_Name": "Check SA Tool device information", "Sub_Flow_Name": "Switch device mode between different SPs (DISTANCE BASED TRANSIT and Distance based Transit only)", "Use_Case_Name": "SP Switching is disabled", "Test_Scnario": "Device Parameter Tool Configurations", "Test_Sce_Description": "Verify the configurations for the SA Tool introduced under the Open Payments release in the Device Parameter Tool."}, {"Function_Flow_Name": "Device states", "Sub_Flow_Name": "Operator switches SA Tool from standby to in-service state", "Use_Case_Name": "Switch SA Tool from Standby to In-Service State", "Test_Scnario": "Switching SA Tool from Standby to In-Service State", "Test_Sce_Description": "Verify that the SA Tool successfully switches from standby to in-service state when the operator presses the physical power button on the device, enters the lock screen passcode and signs in to the SA Tool application as an existing user."}, {"Function_Flow_Name": "Device states", "Sub_Flow_Name": "Operator switches SA Tool from standby to in-service state", "Use_Case_Name": "Switch SA Tool from Standby to In-Service State", "Test_Scnario": "SA Tool Display after Switching from Standby to In-Service State", "Test_Sce_Description": "Verify that the SA Tool displays the shift preferences screen upon a successful sign-in by the operator."}, {"Function_Flow_Name": "Device states", "Sub_Flow_Name": "Operator switches SA Tool from standby to in-service state", "Use_Case_Name": "Switch SA Tool from Standby to In-Service State", "Test_Scnario": "Switching SA Tool from Standby to In-Service State before Threshold", "Test_Sce_Description": "Verify that the SA Tool switches from standby to in-service state and displays the home screen without requiring sign-in and navigation if the operator has not been in standby state longer than the configurable threshold value."}, {"Function_Flow_Name": "Device states", "Sub_Flow_Name": "Operator switches SA Tool from standby to in-service state", "Use_Case_Name": "Switch SA Tool from Standby to In-Service State", "Test_Scnario": "Switching SA Tool from In-Service to Standby State", "Test_Sce_Description": "Verify that the SA Tool successfully switches from in-service to standby state when the operator presses the physical power button on the device once."}, {"Function_Flow_Name": "Device states", "Sub_Flow_Name": "Operator switches SA Tool from standby to in-service state", "Use_Case_Name": "Switch SA Tool from Standby to In-Service State", "Test_Scnario": "SA Tool State after Navigating Away from Application", "Test_Sce_Description": "Verify that the SA Tool application goes into standby state when the operator switches to a third party application on SA Tool."}, {"Function_Flow_Name": "Device states", "Sub_Flow_Name": "Operator switches SA Tool from standby to in-service state", "Use_Case_Name": "Switch SA Tool from Standby to In-Service State", "Test_Scnario": "Change SP after Switching Device from Standby to In-Service State", "Test_Sce_Description": "Verify that the SA Tool application notifies the operator with a corresponding error message when the operator attempts to change SP on the login screen after switching the device from standby to in-service state."}, {"Function_Flow_Name": "Device states", "Sub_Flow_Name": "Operator switches SA Tool from standby to in-service state", "Use_Case_Name": "Switch SA Tool from Standby to In-Service State", "Test_Scnario": "SA Tool Functionality in Out-of-Service State", "Test_Sce_Description": "Verify that the SA Tool is unable to accept a Farecard for any kind of functionality when it is in out-of-service state and requires maintenance to restore out-of-order components."}, {"Function_Flow_Name": "Device states", "Sub_Flow_Name": "Operator switches SA Tool from standby to in-service state", "Use_Case_Name": "Switch SA Tool from Standby to In-Service State", "Test_Scnario": "SA Tool Functionality in Standby State", "Test_Sce_Description": "Verify that the SA Tool suspends all functionality and disconnects from all peripherals to conserve battery life when it is in standby state."}, {"Function_Flow_Name": "Device states", "Sub_Flow_Name": "Operator switches SA Tool from standby to in-service state", "Use_Case_Name": "Switch SA Tool from Standby to In-Service State", "Test_Scnario": "SA Tool Functionality in Revenue Mode", "Test_Sce_Description": "Verify that the SA Tool allows the operator to interact with customers, perform inspection, fare payments, sales, refunds/reversals, farecard queries, and other customer service gestures in the Revenue Mode."}, {"Function_Flow_Name": "Device states", "Sub_Flow_Name": "Operator switches SA Tool from standby to in-service state", "Use_Case_Name": "Switch SA Tool from Standby to In-Service State", "Test_Scnario": "SA Tool Functionality in Training Mode", "Test_Sce_Description": "Verify that the SA Tool allows the operator to mimic all functionality available within Sales Mode without accepting payment, and only sending non-revenue transactions in the Training Mode."}, {"Function_Flow_Name": "Device states", "Sub_Flow_Name": "Operator switches SA Tool from standby to in-service state", "Use_Case_Name": "Switch SA Tool from Standby to In-Service State before threshold requiring login", "Test_Scnario": "Switching SA Tool from Standby to In-Service State", "Test_Sce_Description": "Verify that the SA Tool successfully switches from standby to in-service state when the operator presses the physical power button on the device, enters the lock screen passcode and signs in to the SA Tool application as an existing user."}, {"Function_Flow_Name": "Device states", "Sub_Flow_Name": "Operator switches SA Tool from standby to in-service state", "Use_Case_Name": "Switch SA Tool from Standby to In-Service State before threshold requiring login", "Test_Scnario": "SA Tool Display after Switching from Standby to In-Service State", "Test_Sce_Description": "Verify that upon successful sign-in, the SA Tool enters the in-service state and displays the shift preferences screen."}, {"Function_Flow_Name": "Device states", "Sub_Flow_Name": "Operator switches SA Tool from standby to in-service state", "Use_Case_Name": "Switch SA Tool from Standby to In-Service State before threshold requiring login", "Test_Scnario": "Switching SA Tool from Standby to In-Service State before Threshold", "Test_Sce_Description": "Verify that if the operator has not been in \u201cstandby\u201d state longer than the configurable threshold value that requires logging in, the SA Tool displays the home screen without requiring sign-in and navigation to the home screen."}, {"Function_Flow_Name": "Device states", "Sub_Flow_Name": "Operator switches SA Tool from standby to in-service state", "Use_Case_Name": "Switch SA Tool from Standby to In-Service State before threshold requiring login", "Test_Scnario": "Switching SA Tool from In-Service to Standby State", "Test_Sce_Description": "Verify that the SA Tool successfully switches from in-service to standby state when the operator presses the physical power button on the device once."}, {"Function_Flow_Name": "Device states", "Sub_Flow_Name": "Operator switches SA Tool from standby to in-service state", "Use_Case_Name": "Switch SA Tool from Standby to In-Service State before threshold requiring login", "Test_Scnario": "SA Tool State after Switching from In-Service to Standby State", "Test_Sce_Description": "Verify that after switching from in-service to standby state, the SA Tool turns off the screen and goes into standby state."}, {"Function_Flow_Name": "Device states", "Sub_Flow_Name": "Operator switches SA Tool from standby to in-service state", "Use_Case_Name": "Switch SA Tool from Standby to In-Service State before threshold requiring login", "Test_Scnario": "Switching to Third Party Application on SA Tool", "Test_Sce_Description": "Verify that the operator can successfully switch to a third party application on SA Tool and the SA Tool application runs in the background and goes into standby state."}, {"Function_Flow_Name": "Device states", "Sub_Flow_Name": "Operator switches SA Tool from standby to in-service state", "Use_Case_Name": "Switch SA Tool from Standby to In-Service State before threshold requiring login", "Test_Scnario": "Change SP after Switching Device from Standby to In-Service State", "Test_Sce_Description": "Verify that if the operator attempts to change SP on the login screen after switching the device from standby to in-service state, the SA Tool application notifies the operator with a corresponding error message."}, {"Function_Flow_Name": "Device states", "Sub_Flow_Name": "Operator switches SA Tool from standby to in-service state", "Use_Case_Name": "Switch SA Tool from Standby to In-Service State before threshold requiring login", "Test_Scnario": "SA Tool Functionality in Standby State", "Test_Sce_Description": "Verify that in standby state, the SA Tool disconnects from all the peripherals i.e. the card reader, PIN pad and the printer to conserve battery life."}, {"Function_Flow_Name": "Device states", "Sub_Flow_Name": "Operator switches SA Tool from standby to in-service state", "Use_Case_Name": "Switch SA Tool from Standby to In-Service State before threshold requiring login", "Test_Scnario": "Resuming Functionality of SA Tool Application", "Test_Sce_Description": "Verify that the operator can resume the functionality of the SA Tool application by switching back to the SA Tool application from a third-party application."}, {"Function_Flow_Name": "Device states", "Sub_Flow_Name": "Operator switches SA Tool from standby to in-service state", "Use_Case_Name": "Switch SA Tool from Standby to In-Service State before threshold requiring login", "Test_Scnario": "SA Tool Functionality in Revenue Mode", "Test_Sce_Description": "Verify that in Revenue Mode, the SA Tool operator can interact with customers, perform inspection, fare payments, sales, refunds/reversals, farecard queries, and other customer service gestures."}, {"Function_Flow_Name": "Device states", "Sub_Flow_Name": "Operator switches SA Tool from standby to in-service state", "Use_Case_Name": "Switch SA Tool from Standby to In-Service State before threshold requiring login", "Test_Scnario": "SA Tool Functionality in Training Mode", "Test_Sce_Description": "Verify that in Training Mode, the SA Tool operator can mimic all functionality available within Sales Mode without accepting payment, and only sending non-revenue transactions."}, {"Function_Flow_Name": "Device states", "Sub_Flow_Name": "Operator switches SA Tool from standby to in-service state", "Use_Case_Name": "Switch SA Tool from In-Service to Standby State", "Test_Scnario": "Switch SA Tool from Standby to In-Service State", "Test_Sce_Description": "Verify that the operator is able to successfully switch the SA Tool from standby to in-service state by pressing the physical power button, entering the lock screen passcode and signing in to the SA Tool application."}, {"Function_Flow_Name": "Device states", "Sub_Flow_Name": "Operator switches SA Tool from standby to in-service state", "Use_Case_Name": "Switch SA Tool from In-Service to Standby State", "Test_Scnario": "Switch SA Tool from Standby to In-Service State before threshold requiring login", "Test_Sce_Description": "Verify that the operator is able to switch the SA Tool from standby to in-service state without requiring to sign in if the standby state duration is less than the configurable threshold value."}, {"Function_Flow_Name": "Device states", "Sub_Flow_Name": "Operator switches SA Tool from standby to in-service state", "Use_Case_Name": "Switch SA Tool from In-Service to Standby State", "Test_Scnario": "Switch SA Tool from In-Service to Standby State", "Test_Sce_Description": "Verify that the operator is able to successfully switch the SA Tool from in-service to standby state by pressing the physical power button once."}, {"Function_Flow_Name": "Device states", "Sub_Flow_Name": "Operator switches SA Tool from standby to in-service state", "Use_Case_Name": "Switch SA Tool from In-Service to Standby State", "Test_Scnario": "Switch SA Tool from In-Service to Standby State by navigating away from the SA Tool Application", "Test_Sce_Description": "Verify that the SA Tool goes into standby state when the operator switches to a third party application on the SA Tool."}, {"Function_Flow_Name": "Device states", "Sub_Flow_Name": "Operator switches SA Tool from standby to in-service state", "Use_Case_Name": "Switch SA Tool from In-Service to Standby State", "Test_Scnario": "Change SP after switching device from standby to in-service state", "Test_Sce_Description": "Verify that the operator receives an error message when attempting to change SP on the login screen after switching the device from standby to in-service state."}, {"Function_Flow_Name": "Device states", "Sub_Flow_Name": "Operator switches SA Tool from standby to in-service state", "Use_Case_Name": "Switch SA Tool from In-Service to Standby State", "Test_Scnario": "Verify SA Tool in Out-of-Service State", "Test_Sce_Description": "Verify that the SA Tool is unable to accept a Farecard for any kind of functionality when it is in \u201cOut-of-Service\u201d state and requires maintenance to restore out-of-order components."}, {"Function_Flow_Name": "Device states", "Sub_Flow_Name": "Operator switches SA Tool from standby to in-service state", "Use_Case_Name": "Switch SA Tool from In-Service to Standby State", "Test_Scnario": "Verify SA Tool in Standby State", "Test_Sce_Description": "Verify that the SA Tool suspends all functionality, turns off the screen and disconnects from all peripherals when it is in Standby state."}, {"Function_Flow_Name": "Device states", "Sub_Flow_Name": "Operator switches SA Tool from standby to in-service state", "Use_Case_Name": "Switch SA Tool from In-Service to Standby State", "Test_Scnario": "Verify SA Tool in Revenue Mode", "Test_Sce_Description": "Verify that the operator is able to interact with customers, perform inspection, fare payments, sales, refunds/reversals, farecard queries, and other customer service gestures when the SA Tool is in Revenue Mode."}, {"Function_Flow_Name": "Device states", "Sub_Flow_Name": "Operator switches SA Tool from standby to in-service state", "Use_Case_Name": "Switch SA Tool from In-Service to Standby State", "Test_Scnario": "Verify SA Tool in Training Mode", "Test_Sce_Description": "Verify that the operator is able to mimic all functionality available within Sales Mode without accepting payment, and only sending non-revenue transactions when the SA Tool is in Training Mode."}, {"Function_Flow_Name": "Device states", "Sub_Flow_Name": "Operator switches SA Tool from standby to in-service state", "Use_Case_Name": "Switch SA Tool from In-Service to Standby State", "Test_Scnario": "Verify Configurable Functionality for SA Tool Operators", "Test_Sce_Description": "Verify that the SA Tool Operators have access to Revenue Mode, Core Functionality - Sales, Fare Payment, Inspection, SA Tool Remote Access, Unblock Farecard, and Modify Card Concession."}, {"Function_Flow_Name": "Device states", "Sub_Flow_Name": "Operator switches SA Tool from standby to in-service state", "Use_Case_Name": "Operator navigates away from the SA Tool Application", "Test_Scnario": "Launching the SA Tool Application", "Test_Sce_Description": "Verify that the authorized operator is able to launch the SA Tool Application from the home screen of the SA Tool device. The application should perform continuous diagnostic checks for network/cellular connection, battery level, and available storage space. Upon successful launch, the sign-in screen should be displayed."}, {"Function_Flow_Name": "Device states", "Sub_Flow_Name": "Operator switches SA Tool from standby to in-service state", "Use_Case_Name": "Operator navigates away from the SA Tool Application", "Test_Scnario": "Launching SA Tool Application with no network connection", "Test_Sce_Description": "Verify that the SA Tool Application can be launched even when there is no network connection. The application should perform continuous diagnostic checks and indicate on the device that it is unable to connect to a network. The application should still launch and the sign-in screen should be displayed."}, {"Function_Flow_Name": "Device states", "Sub_Flow_Name": "Operator switches SA Tool from standby to in-service state", "Use_Case_Name": "Operator navigates away from the SA Tool Application", "Test_Scnario": "Launching SA Tool Application with critical failures", "Test_Sce_Description": "Verify that the SA Tool Application handles critical failures during the initial self-diagnostic checks. The application should go to an error state when critical failures are found."}, {"Function_Flow_Name": "Device states", "Sub_Flow_Name": "Operator switches SA Tool from standby to in-service state", "Use_Case_Name": "Operator navigates away from the SA Tool Application", "Test_Scnario": "Launching SA Tool Application with storage, battery or secure element failures", "Test_Sce_Description": "Verify that the SA Tool Application handles failures in storage, battery or secure element during the continuous self-diagnostic checks. The application should go to an out-of-service state and a critical event should be sent to SOTI Mobicontrol and CSM."}, {"Function_Flow_Name": "Device states", "Sub_Flow_Name": "Operator switches SA Tool from standby to in-service state", "Use_Case_Name": "Operator navigates away from the SA Tool Application", "Test_Scnario": "Switching between the PDS SA Tool application and third-party applications", "Test_Sce_Description": "Verify that the operator can switch between the SA Tool Application and the whitelisted third-party applications on the device. The operator should be able to navigate to the list of whitelisted third-party applications by tapping on the home button present on the android navigation bar."}, {"Function_Flow_Name": "Device states", "Sub_Flow_Name": "Operator switches SA Tool from standby to in-service state", "Use_Case_Name": "Operator navigates away from the SA Tool Application", "Test_Scnario": "Switching to an already launched application", "Test_Sce_Description": "Verify that the operator can switch to an application that is already running in the device background. The operator should be able to navigate through the list of open applications and press on the desired application to launch it."}, {"Function_Flow_Name": "Device states", "Sub_Flow_Name": "Operator switches SA Tool from standby to in-service state", "Use_Case_Name": "Operator navigates away from the SA Tool Application", "Test_Scnario": "Navigating away from the SA Tool Application", "Test_Sce_Description": "Verify that the SA Tool Application goes into standby state when the operator switches to a third party application on SA Tool."}, {"Function_Flow_Name": "Device states", "Sub_Flow_Name": "Operator switches SA Tool from standby to in-service state", "Use_Case_Name": "Operator navigates away from the SA Tool Application", "Test_Scnario": "Change SP after switching device from standby to in-service state", "Test_Sce_Description": "Verify that the operator is unable to change SP on the login screen after switching the device from standby to in-service state. The SA Tool application should notify the operator with a corresponding error message."}, {"Function_Flow_Name": "Device states", "Sub_Flow_Name": "Operator switches SA Tool from standby to in-service state", "Use_Case_Name": "Operator navigates away from the SA Tool Application", "Test_Scnario": "Accessing In-App Training and FAQs", "Test_Sce_Description": "Verify that the operator can access in-app training and frequently asked questions (FAQs) from the more options menu on the SA Tool home screen. The SA Tool applications should launch a lockdown browser and navigate to a web page that is populated with training modules and FAQs."}, {"Function_Flow_Name": "Device states", "Sub_Flow_Name": "Operator switches SA Tool from standby to in-service state", "Use_Case_Name": "Operator navigates away from the SA Tool Application", "Test_Scnario": "Launching In-App Training and FAQ when SA Tool is Offline", "Test_Sce_Description": "Verify that the operator can access the FAQ and Training option even when the SA Tool is offline. The SA Tool should launch a lockdown browser and display the last saved content (homepage) on the device."}, {"Function_Flow_Name": "Device states", "Sub_Flow_Name": "Operator switches SA Tool from standby to in-service state", "Use_Case_Name": "Operator navigates away from the SA Tool Application", "Test_Scnario": "Updating In-App Training and FAQ content", "Test_Sce_Description": "Verify that the SA Tool can receive updated training content while the operator is playing the training. The new content should be downloaded to the device and be available the next time the In-App Training and FAQ is launched."}, {"Function_Flow_Name": "Device states", "Sub_Flow_Name": "Operator switches SA Tool from standby to in-service state", "Use_Case_Name": "Operator navigates away from the SA Tool Application", "Test_Scnario": "Handling no In-App Training content", "Test_Sce_Description": "Verify that the SA Tool displays a toast message on the Inspection home screen notifying the operator that there is no content available when the In-App Training has not been downloaded to the SA Tool."}, {"Function_Flow_Name": "Device states", "Sub_Flow_Name": "Operator switches SA Tool from standby to in-service state", "Use_Case_Name": "Operator navigates away from the SA Tool Application", "Test_Scnario": "Handling disabled In-App Training", "Test_Sce_Description": "Verify that the SA Tool handles the scenario where the In-App Training has been remotely disabled after the Operator navigates to the Help Screen."}, {"Function_Flow_Name": "Device states", "Sub_Flow_Name": "Operator switches SA Tool from standby to in-service state", "Use_Case_Name": "Change SP after switching device from standby to in-service state", "Test_Scnario": "Switching SA Tool from Standby to In-Service State", "Test_Sce_Description": "Verify that the SA Tool successfully switches from standby to in-service state when the operator presses the physical power button on the device, enters the lock screen passcode and signs in to the SA Tool application as an existing user."}, {"Function_Flow_Name": "Device states", "Sub_Flow_Name": "Operator switches SA Tool from standby to in-service state", "Use_Case_Name": "Change SP after switching device from standby to in-service state", "Test_Scnario": "SA Tool Display After Switching from Standby to In-Service State", "Test_Sce_Description": "Verify that the SA Tool displays the shift preferences screen upon a successful sign-in by the operator."}, {"Function_Flow_Name": "Device states", "Sub_Flow_Name": "Operator switches SA Tool from standby to in-service state", "Use_Case_Name": "Change SP after switching device from standby to in-service state", "Test_Scnario": "Switching SA Tool from Standby to In-Service State Before Threshold", "Test_Sce_Description": "Verify that the SA Tool switches from standby to in-service state before the configurable threshold requiring login is reached, and that the home screen is displayed without requiring sign-in and navigation."}, {"Function_Flow_Name": "Device states", "Sub_Flow_Name": "Operator switches SA Tool from standby to in-service state", "Use_Case_Name": "Change SP after switching device from standby to in-service state", "Test_Scnario": "Switching SA Tool from In-Service to Standby State", "Test_Sce_Description": "Verify that the SA Tool successfully switches from in-service to standby state when the operator presses the physical power button on the device once."}, {"Function_Flow_Name": "Device states", "Sub_Flow_Name": "Operator switches SA Tool from standby to in-service state", "Use_Case_Name": "Change SP after switching device from standby to in-service state", "Test_Scnario": "SA Tool Functionality in Standby State", "Test_Sce_Description": "Verify that the SA Tool suspends all functionality and disconnects from all peripherals when in standby state."}, {"Function_Flow_Name": "Device states", "Sub_Flow_Name": "Operator switches SA Tool from standby to in-service state", "Use_Case_Name": "Change SP after switching device from standby to in-service state", "Test_Scnario": "Switching SA Tool to Standby State While Running Third-Party Applications", "Test_Sce_Description": "Verify that the SA Tool goes into standby state when the operator switches to a third-party application, and that the SA Tool application runs in the background."}, {"Function_Flow_Name": "Device states", "Sub_Flow_Name": "Operator switches SA Tool from standby to in-service state", "Use_Case_Name": "Change SP after switching device from standby to in-service state", "Test_Scnario": "Switching SA Tool from Standby to In-Service State and Changing SP", "Test_Sce_Description": "Verify that the SA Tool displays an error message when the operator attempts to change SP on the login screen after switching the device from standby to in-service state."}, {"Function_Flow_Name": "Device states", "Sub_Flow_Name": "Operator switches SA Tool from standby to in-service state", "Use_Case_Name": "Change SP after switching device from standby to in-service state", "Test_Scnario": "SA Tool Functionality in Out-of-Service State", "Test_Sce_Description": "Verify that the SA Tool does not accept a Farecard for any kind of functionality when in out-of-service state, and that the SA Tool application does not close the operator\u2019s shift unless the operator has requested to sign-off."}, {"Function_Flow_Name": "Device states", "Sub_Flow_Name": "Operator switches SA Tool from standby to in-service state", "Use_Case_Name": "Change SP after switching device from standby to in-service state", "Test_Scnario": "SA Tool Functionality in Revenue Mode", "Test_Sce_Description": "Verify that the SA Tool allows the operator to interact with customers, perform inspection, fare payments, sales, refunds/reversals, farecard queries, and other customer service gestures when in Revenue Mode."}, {"Function_Flow_Name": "Device states", "Sub_Flow_Name": "Operator switches SA Tool from standby to in-service state", "Use_Case_Name": "Change SP after switching device from standby to in-service state", "Test_Scnario": "SA Tool Functionality in Training Mode", "Test_Sce_Description": "Verify that the SA Tool mimics all functionality available within Sales Mode without accepting payment, and only sending non-revenue transactions when in Training Mode."}, {"Function_Flow_Name": "Device states", "Sub_Flow_Name": "Operator switches to a third-party application", "Use_Case_Name": "Launching the SA Tool Application", "Test_Scnario": "Launching the SA Tool Application", "Test_Sce_Description": "Verify that the authorized operator is able to launch the SA Tool Application by selecting the SA Tool Application icon from the home screen of the SA Tool device."}, {"Function_Flow_Name": "Device states", "Sub_Flow_Name": "Operator switches to a third-party application", "Use_Case_Name": "Launching the SA Tool Application", "Test_Scnario": "Continuous Diagnostic Checks", "Test_Sce_Description": "Verify that the SA Tool application performs continuous diagnostic checks as the application is launched. These checks should include network/cellular connection, battery level, and available storage space."}, {"Function_Flow_Name": "Device states", "Sub_Flow_Name": "Operator switches to a third-party application", "Use_Case_Name": "Switching between the PDS SA Tool application and third-party applications", "Test_Scnario": "Launching the SA Tool Application", "Test_Sce_Description": "Verify that the authorized operator is able to launch the SA Tool application successfully. The application should perform continuous diagnostic checks for network/cellular connection, battery level, and available storage space. Upon successful launch, the sign-in screen should be displayed."}, {"Function_Flow_Name": "Device states", "Sub_Flow_Name": "Operator switches to a third-party application", "Use_Case_Name": "Switching between the PDS SA Tool application and third-party applications", "Test_Scnario": "Continuous Diagnostic Check Failure - Network Connection", "Test_Sce_Description": "Verify that the SA Tool application is able to identify when the device is unable to connect to a network during the continuous diagnostic checks. The device should indicate this status and allow the operator to proceed in offline mode."}, {"Function_Flow_Name": "Device states", "Sub_Flow_Name": "Operator switches to a third-party application", "Use_Case_Name": "Switching between the PDS SA Tool application and third-party applications", "Test_Scnario": "Initial Self-Diagnostic Check Failure", "Test_Sce_Description": "Verify that the SA Tool application is able to identify critical failures during the initial self-diagnostic checks. The device should go to an error state in such a scenario."}, {"Function_Flow_Name": "Device states", "Sub_Flow_Name": "Operator switches to a third-party application", "Use_Case_Name": "Switching between the PDS SA Tool application and third-party applications", "Test_Scnario": "Continuous Diagnostic Check Failure - Storage, Battery or Secure Element", "Test_Sce_Description": "Verify that the SA Tool application is able to identify errors or failures in storage, battery or secure element during the continuous self-diagnostic checks. The device should go to an out-of-service state and a critical event should be sent to SOTI Mobicontrol and CSM."}, {"Function_Flow_Name": "Device states", "Sub_Flow_Name": "Operator switches to a third-party application", "Use_Case_Name": "Switching between the PDS SA Tool application and third-party applications", "Test_Scnario": "Switching between the PDS SA Tool application and third-party applications", "Test_Sce_Description": "Verify that the operator is able to switch between the SA Tool Application and the whitelisted third-party applications on the device. The operator should be able to navigate to the list of whitelisted third-party applications by tapping on the home button and launch the desired application by pressing on its icon."}, {"Function_Flow_Name": "Device states", "Sub_Flow_Name": "Operator switches to a third-party application", "Use_Case_Name": "Switching between the PDS SA Tool application and third-party applications", "Test_Scnario": "Switching to an Already Launched Application Running in the Background", "Test_Sce_Description": "Verify that the operator is able to switch to an application that is already launched and running in the background. The operator should be able to do this by tapping on the App Overview button on the bottom navigation bar, navigating through the list of open applications, and pressing on the desired application."}, {"Function_Flow_Name": "Device states", "Sub_Flow_Name": "Operator switches to a third-party application", "Use_Case_Name": "Switching between the PDS SA Tool application and third-party applications", "Test_Scnario": "Performance of SA Tool in Out-of-Service State", "Test_Sce_Description": "Verify that the SA Tool is unable to accept a Farecard for any kind of functionality when it is in the \u201cOut-of-Service\u201d state. The SA Tool application should not close the operator\u2019s shift unless the operator has requested to sign-off."}, {"Function_Flow_Name": "Device states", "Sub_Flow_Name": "Operator switches to a third-party application", "Use_Case_Name": "Switching between the PDS SA Tool application and third-party applications", "Test_Scnario": "Performance of SA Tool in Standby State", "Test_Sce_Description": "Verify that the SA Tool is able to suspend all functionality and disconnect from all peripherals when it is in the Standby state. The operator should be able to bring the device back into In-Service state by pressing the physical power button and signing in to the device lock screen."}, {"Function_Flow_Name": "Device states", "Sub_Flow_Name": "Operator switches to a third-party application", "Use_Case_Name": "Switching between the PDS SA Tool application and third-party applications", "Test_Scnario": "Switching Back to the SA Tool Application from Standby State", "Test_Sce_Description": "Verify that the operator is able to resume the functionality of the SA Tool application by switching back to it from the Standby state. The third-party applications may continue to run in the background."}, {"Function_Flow_Name": "Device states", "Sub_Flow_Name": "Operator switches to a third-party application", "Use_Case_Name": "Switching between the PDS SA Tool application and third-party applications", "Test_Scnario": "Performance of SA Tool in Revenue Mode", "Test_Sce_Description": "Verify that the SA Tool operator is able to interact with customers, perform inspection, fare payments, sales, refunds/reversals, farecard queries, and other customer service gestures in the Revenue Mode. The SA tool should have access to the EPT and accept credit and debit payments."}, {"Function_Flow_Name": "Device states", "Sub_Flow_Name": "Operator switches to a third-party application", "Use_Case_Name": "Switching between the PDS SA Tool application and third-party applications", "Test_Scnario": "Performance of SA Tool in Training Mode", "Test_Sce_Description": "Verify that the SA Tool operator is able to mimic all functionality available within Sales Mode without accepting payment, and only sending non-revenue transactions in the Training Mode. Only non-revenue Farecard should be accepted and all paper tickets printed from the SA Tool should indicate that they were printed while in training mode."}, {"Function_Flow_Name": "Check Shift statistics", "Sub_Flow_Name": "Print shift statistics", "Use_Case_Name": "Device is turned off after the operator confirms that they would like to sign-out", "Test_Scnario": "Sign In with valid credentials", "Test_Sce_Description": "Verify that the new operator is able to sign in to the SA Tool using valid user ID and passcode."}, {"Function_Flow_Name": "Check Shift statistics", "Sub_Flow_Name": "Print shift statistics", "Use_Case_Name": "Device is turned off after the operator confirms that they would like to sign-out", "Test_Scnario": "Sign In with invalid credentials", "Test_Sce_Description": "Verify that the new operator is not able to sign in to the SA Tool using invalid user ID or passcode."}, {"Function_Flow_Name": "Check Shift statistics", "Sub_Flow_Name": "Print shift statistics", "Use_Case_Name": "Device is turned off after the operator confirms that they would like to sign-out", "Test_Scnario": "Sign In when another operator is already signed in", "Test_Sce_Description": "Verify that the new operator is able to sign in to the SA Tool even when another operator is already signed in, and that the current operator is signed off."}, {"Function_Flow_Name": "Check Shift statistics", "Sub_Flow_Name": "Print shift statistics", "Use_Case_Name": "Device is turned off after the operator confirms that they would like to sign-out", "Test_Scnario": "Shut Down SA Tool via Physical Device Button", "Test_Sce_Description": "Verify that the operator is able to manually shut down the SA Tool by pressing and holding the physical power button, and that the SA Tool displays a confirmation message with the options 'Power off' and other options."}, {"Function_Flow_Name": "Check Shift statistics", "Sub_Flow_Name": "Print shift statistics", "Use_Case_Name": "Device is turned off after the operator confirms that they would like to sign-out", "Test_Scnario": "Reboot SA Tool", "Test_Sce_Description": "Verify that the operator is able to manually reboot the SA Tool by pressing and holding the physical power button, and that the SA Tool displays a confirmation message with the options 'Power off' and other options."}, {"Function_Flow_Name": "Check Shift statistics", "Sub_Flow_Name": "Print shift statistics", "Use_Case_Name": "Device is turned off after the operator confirms that they would like to sign-out", "Test_Scnario": "SA Tool in Out-of-Service State", "Test_Sce_Description": "Verify that when the SA Tool is in 'Out-of-Service' state, it is unable to accept a Farecard for any kind of functionality and may require maintenance to restore out-of-order components."}, {"Function_Flow_Name": "Check Shift statistics", "Sub_Flow_Name": "Print shift statistics", "Use_Case_Name": "Device is turned off after the operator confirms that they would like to sign-out", "Test_Scnario": "SA Tool in Standby State", "Test_Sce_Description": "Verify that the SA Tool switches into a Standby state where the screen will turn off after remaining inactive for a configurable period of time, or when the operator presses the physical power button."}, {"Function_Flow_Name": "Check Shift statistics", "Sub_Flow_Name": "Print shift statistics", "Use_Case_Name": "Device is turned off after the operator confirms that they would like to sign-out", "Test_Scnario": "SA Tool in Revenue Mode", "Test_Sce_Description": "Verify that in the Revenue Mode, the SA Tool operator is able to interact with customers, perform inspection, fare payments, sales, refunds/reversals, farecard queries, and other customer service gestures."}, {"Function_Flow_Name": "Check Shift statistics", "Sub_Flow_Name": "Print shift statistics", "Use_Case_Name": "Device is turned off after the operator confirms that they would like to sign-out", "Test_Scnario": "SA Tool in Training Mode", "Test_Sce_Description": "Verify that in the Training Mode, the SA Tool operator is able to mimic all functionality available within Sales Mode without accepting payment, and only sending non-revenue transactions."}, {"Function_Flow_Name": "Check Shift statistics", "Sub_Flow_Name": "Print shift statistics", "Use_Case_Name": "Device is turned off after the operator confirms that they would like to sign-out", "Test_Scnario": "Access to Revenue Mode for different users", "Test_Sce_Description": "Verify that only SA Tool Operators have access to Revenue Mode, and that Training users do not have access to this mode."}, {"Function_Flow_Name": "Check Shift statistics", "Sub_Flow_Name": "Print shift statistics", "Use_Case_Name": "Operator Signs-Off while the SA Tool is Offline", "Test_Scnario": "Out-of-Service State", "Test_Sce_Description": "Verify that when the SA Tool is in 'Out-of-Service' state, it does not accept a Farecard for any kind of functionality and may require maintenance to restore out-of-order components."}, {"Function_Flow_Name": "Check Shift statistics", "Sub_Flow_Name": "Print shift statistics", "Use_Case_Name": "Operator Signs-Off while the SA Tool is Offline", "Test_Scnario": "Standby State", "Test_Sce_Description": "Verify that the SA Tool switches into a Standby state after remaining inactive for a configurable period of time and the screen turns off. Also, verify that the SA Tool disconnects from all the peripherals to conserve battery life."}, {"Function_Flow_Name": "Check Shift statistics", "Sub_Flow_Name": "Print shift statistics", "Use_Case_Name": "Operator Signs-Off while the SA Tool is Offline", "Test_Scnario": "SA Tool application running in the background", "Test_Sce_Description": "Verify that the SA Tool allows the operator to use authorized third-party applications as needed and the SA Tool application can run in the background."}, {"Function_Flow_Name": "Check Shift statistics", "Sub_Flow_Name": "Print shift statistics", "Use_Case_Name": "Operator Signs-Off while the SA Tool is Offline", "Test_Scnario": "Revenue Mode", "Test_Sce_Description": "Verify that in Revenue Mode, the SA Tool operator can interact with customers and perform inspection, fare payments, sales, refunds/reversals, farecard queries, and other customer service gestures."}, {"Function_Flow_Name": "Check Shift statistics", "Sub_Flow_Name": "Print shift statistics", "Use_Case_Name": "Operator Signs-Off while the SA Tool is Offline", "Test_Scnario": "Training Mode", "Test_Sce_Description": "Verify that in Training Mode, the SA Tool operator can mimic all functionality available within Sales Mode without accepting payment, and only sending non-revenue transactions."}, {"Function_Flow_Name": "Check Shift statistics", "Sub_Flow_Name": "Print shift statistics", "Use_Case_Name": "Operator Signs-Off while the SA Tool is Offline", "Test_Scnario": "Configurable Functionality", "Test_Sce_Description": "Verify that the SA Tool Operators have access to Revenue Mode and can perform core functionalities such as Sales, Fare Payment, Inspection, SA Tool Remote Access, Unblock Farecard, and Modify Card Concession."}, {"Function_Flow_Name": "Check Shift statistics", "Sub_Flow_Name": "Print shift statistics", "Use_Case_Name": "Operator Signs-Off while the SA Tool is Offline", "Test_Scnario": "Shut-Down SA Tool via Physical Device Button", "Test_Sce_Description": "Verify that the operator can manually shut down the SA Tool by pressing and holding the physical power button on the SA Tool."}, {"Function_Flow_Name": "Check Shift statistics", "Sub_Flow_Name": "Print shift statistics", "Use_Case_Name": "Operator Signs-Off while the SA Tool is Offline", "Test_Scnario": "Reboot SA Tool", "Test_Sce_Description": "Verify that the operator can manually reboot the SA Tool at any time by pressing and holding the physical power button on the SA Tool."}, {"Function_Flow_Name": "Check Shift statistics", "Sub_Flow_Name": "Print shift statistics", "Use_Case_Name": "New operator signs into current operator\u2019s shift", "Test_Scnario": "New Operator Sign In", "Test_Sce_Description": "Verify that a new operator can sign into the system using their own user ID and passcode. The system should display a message indicating that the current operator is signed in and ask if the new operator wants to sign in anyway. Upon selecting 'Yes', the current operator should be signed off from the system."}, {"Function_Flow_Name": "Check Shift statistics", "Sub_Flow_Name": "Print shift statistics", "Use_Case_Name": "New operator signs into current operator\u2019s shift", "Test_Scnario": "Sign In with Low Battery", "Test_Sce_Description": "Verify that the system can handle sign out process when the battery level is at 1%. The system should be able to close off the current shift and generate the inspection shift statistics email that is stored on the device. The email should be sent once the device is powered on and re-establishes connection to the network."}, {"Function_Flow_Name": "Check Shift statistics", "Sub_Flow_Name": "Print shift statistics", "Use_Case_Name": "New operator signs into current operator\u2019s shift", "Test_Scnario": "Sign Off while Offline", "Test_Sce_Description": "Verify that the system can handle sign off process when the device is offline. The system should be able to close the current shift and generate the shift statistics email that is stored on the device. The email should be sent once the device is powered on and re-establishes connection to the network."}, {"Function_Flow_Name": "Check Shift statistics", "Sub_Flow_Name": "Print shift statistics", "Use_Case_Name": "New operator signs into current operator\u2019s shift", "Test_Scnario": "First Time Sign In with Temporary Passcode and No Network", "Test_Sce_Description": "Verify that the system can handle first time sign in using a temporary passcode when the network is not available. The system should display a message to the operator requesting them to sign in when network is available."}, {"Function_Flow_Name": "Check Shift statistics", "Sub_Flow_Name": "Print shift statistics", "Use_Case_Name": "New operator signs into current operator\u2019s shift", "Test_Scnario": "Maximum Number of Login Attempts", "Test_Sce_Description": "Verify that the system can handle multiple unsuccessful sign-in attempts for the same operator badge ID. The system should record a cumulative number of unsuccessful sign on attempts for a single valid operator badge ID on a device. When the number of unsuccessful sign-in attempts reaches the maximum number of sign-on attempts, the system should deny access to that operator until the operator badge ID is unlocked by the CLIENT Operations user or automatically unlocked after a configurable amount of time."}, {"Function_Flow_Name": "Check Shift statistics", "Sub_Flow_Name": "Print shift statistics", "Use_Case_Name": "New operator signs into current operator\u2019s shift", "Test_Scnario": "New Passcode is the Same as The Temporary Passcode", "Test_Sce_Description": "Verify that the system can detect if the new passcode is the same as the temporary passcode. The system should inform the user of the error and clear the new passcode fields."}, {"Function_Flow_Name": "Check Shift statistics", "Sub_Flow_Name": "Print shift statistics", "Use_Case_Name": "New operator signs into current operator\u2019s shift", "Test_Scnario": "New Passcode Length Does Not Meet Pre-Defined Criteria", "Test_Sce_Description": "Verify that the system can handle a situation where the new passcode length does not meet pre-defined criteria. The system should not enable the submit button until the passcode entered is the correct length."}, {"Function_Flow_Name": "Establish Wi-Fi or cellular network connection", "Sub_Flow_Name": "Establish Printer Connection", "Use_Case_Name": "No available printer in the range of SA tool", "Test_Scnario": "Printer Details Page Redirection", "Test_Sce_Description": "Verify that when the operator taps the printer icon from the screen they are on, the SA Tool correctly redirects the operator to the Printer Details page."}, {"Function_Flow_Name": "Establish Wi-Fi or cellular network connection", "Sub_Flow_Name": "Establish Printer Connection", "Use_Case_Name": "No available printer in the range of SA tool", "Test_Scnario": "Printer Pairing Functionality", "Test_Sce_Description": "Verify that the operator can re-connect to an existing paired printer, delete a pairing, or pair with a new printer from the Printer Details page."}, {"Function_Flow_Name": "Establish Wi-Fi or cellular network connection", "Sub_Flow_Name": "Establish Printer Connection", "Use_Case_Name": "No available printer in the range of SA tool", "Test_Scnario": "Return to Previous Flow", "Test_Sce_Description": "Verify that after the operator has completed their activities, they can return to the previous flow by selecting the Done or Back button."}, {"Function_Flow_Name": "Establish Wi-Fi or cellular network connection", "Sub_Flow_Name": "Establish Printer Connection", "Use_Case_Name": "No available printer in the range of SA tool", "Test_Scnario": "No Available Printer Exception Flow", "Test_Sce_Description": "Verify that when no printers are available in the range of the SA tool, the tool correctly displays a relevant message to the operator indicating no printers could be found."}, {"Function_Flow_Name": "Establish Wi-Fi or cellular network connection", "Sub_Flow_Name": "Establish Printer Connection", "Use_Case_Name": "No available printer in the range of SA tool", "Test_Scnario": "Disable Peripherals - Printer", "Test_Sce_Description": "Verify that the operator can successfully disable the Printer peripheral at the SA Tool device and it is removed from the cached memory."}, {"Function_Flow_Name": "Establish Wi-Fi or cellular network connection", "Sub_Flow_Name": "Establish Printer Connection", "Use_Case_Name": "No available printer in the range of SA tool", "Test_Scnario": "Access SA Tool Remote", "Test_Sce_Description": "Verify that the operator can successfully access the SA Tool Remote and use all its functionality."}, {"Function_Flow_Name": "Establish Wi-Fi or cellular network connection", "Sub_Flow_Name": "Establish Printer Connection", "Use_Case_Name": "No available printer in the range of SA tool", "Test_Scnario": "Failure to Connect to Internet Exception Flow", "Test_Sce_Description": "Verify that when there is a failure to connect to the internet, the SA Tool correctly handles this exception and informs the operator."}, {"Function_Flow_Name": "Establish Wi-Fi or cellular network connection", "Sub_Flow_Name": "Establish Printer Connection", "Use_Case_Name": "No available printer in the range of SA tool", "Test_Scnario": "User Privilege Exception Flow", "Test_Sce_Description": "Verify that when an operator does not have SA Tool Remote access as defined in UM Portal permissions, the SA Tool correctly handles this exception and informs the operator."}, {"Function_Flow_Name": "Establish Wi-Fi or cellular network connection", "Sub_Flow_Name": "Establish Printer Connection", "Use_Case_Name": "No available printer in the range of SA tool", "Test_Scnario": "Out-of-Service State", "Test_Sce_Description": "Verify that when the SA Tool is in \u201cOut-of-Service\u201d state, it correctly handles this state and does not accept a Farecard for any kind of functionality."}, {"Function_Flow_Name": "Establish Wi-Fi or cellular network connection", "Sub_Flow_Name": "Establish Printer Connection", "Use_Case_Name": "No available printer in the range of SA tool", "Test_Scnario": "Standby State", "Test_Sce_Description": "Verify that when the SA Tool is in Standby state, it correctly disconnects from all the peripherals i.e. the card reader, PIN pad and the printer to conserve battery life."}, {"Function_Flow_Name": "Establish Wi-Fi or cellular network connection", "Sub_Flow_Name": "Establish Printer Connection", "Use_Case_Name": "No available printer in the range of SA tool", "Test_Scnario": "Revenue Mode", "Test_Sce_Description": "Verify that in the Revenue Mode, the SA Tool operator can interact with customers and perform inspection, fare payments, sales, refunds/reversals, farecard queries, and other customer service gestures."}, {"Function_Flow_Name": "Establish Wi-Fi or cellular network connection", "Sub_Flow_Name": "Establish Printer Connection", "Use_Case_Name": "No available printer in the range of SA tool", "Test_Scnario": "Training Mode", "Test_Sce_Description": "Verify that in the Training Mode, the SA Tool operator can mimic all functionality available within Sales Mode without accepting payment, and only sending non-revenue transactions."}, {"Function_Flow_Name": "Establish Wi-Fi or cellular network connection", "Sub_Flow_Name": "Establish Printer Connection", "Use_Case_Name": "Disable Peripherals - Printer", "Test_Scnario": "Disable Peripherals - Printer", "Test_Sce_Description": "Verify that the operator is able to disable the Printer peripheral at the SA Tool device. This includes checking if the operator can select the Additional Options menu button, if the device shows the Printer menu option, if the operator is taken to the Printer Management screen, if the operator can view the name of the paired printer, if the operator can tap on the delete icon next to the printer\u2019s name to remove it from the cached memory, and if the SA tool removes the printer from the cached memory and shows other printers available for connection."}, {"Function_Flow_Name": "Establish Wi-Fi or cellular network connection", "Sub_Flow_Name": "Establish Printer Connection", "Use_Case_Name": "Disable Peripherals - Printer", "Test_Scnario": "Enable Peripheral - Printer", "Test_Sce_Description": "Verify that the operator is able to enable the Printer peripheral at the SA Tool device. This includes checking if the operator can select the Additional Options menu button, if the device shows the Printer menu option, if the operator is taken to the Printer Management screen, if the SA tool searches for available printers within the range of the device and displays a list of all of the available printers, if the operator can select the desired printer from the list to start the pairing process, and if the SA tool displays a relevant success message and the printer icon on the SA tool will display the printer status to the operator."}, {"Function_Flow_Name": "Establish Wi-Fi or cellular network connection", "Sub_Flow_Name": "Establish Printer Connection", "Use_Case_Name": "Disable Peripherals - Printer", "Test_Scnario": "Alternate Flow - Existing Printer Saved", "Test_Sce_Description": "Verify that the operator can delete the printer from the cached memory by pressing the delete icon next to paired printer\u2019s name if there is an existing printer saved in the local memory of the SA Tool."}, {"Function_Flow_Name": "Establish Wi-Fi or cellular network connection", "Sub_Flow_Name": "Establish Printer Connection", "Use_Case_Name": "Disable Peripherals - Printer", "Test_Scnario": "Alternate Flow - Enable Printer from Within Screen Flow", "Test_Sce_Description": "Verify that the operator can tap the printer icon from the screen they are on, be redirected to the Printer Details page, re-connect to an existing paired printer, delete a pairing, or pair with a new printer, and return to the previous flow by selecting the Done or Back button if the operator is within a flow that requires the use of the printer."}, {"Function_Flow_Name": "Establish Wi-Fi or cellular network connection", "Sub_Flow_Name": "Establish Printer Connection", "Use_Case_Name": "Disable Peripherals - Printer", "Test_Scnario": "Exception Flow - No Available Printer", "Test_Sce_Description": "Verify that the list for the available printers returns no results and that after scanning for a configured amount of time, the SA tool displays a relevant message to the operator indicating no printers could be found if there is no available printer in the range of SA tool."}, {"Function_Flow_Name": "Establish Wi-Fi or cellular network connection", "Sub_Flow_Name": "Establish Printer Connection", "Use_Case_Name": "Disable Peripherals - Printer", "Test_Scnario": "Access SA Tool Remote", "Test_Sce_Description": "Verify that the operator can select the Additional Options menu button, that the device shows the SA Tool Remote menu option, that the operator is taken to the SA Tool Remote screen, that the operator can select one of the following options: Farecard Lookup, Farecard Transaction History, Farecard Customer Details, Farecard Contract Management (Autoload), Operator Sales Report, that the operator can select the SA Tool Remote webpage they would like to use, that the SA Tool application opens the SA Tool Remote webpage selected by the Operator, that the Operator is able to use all the functionality of SA Tool Remote, and that once the Operator has completed their actions on SA Tool Remote, the Operator closes the browser and the SA Tool returns to the home screen."}, {"Function_Flow_Name": "Establish Wi-Fi or cellular network connection", "Sub_Flow_Name": "Establish Printer Connection", "Use_Case_Name": "Disable Peripherals - Printer", "Test_Scnario": "Exception Flow - User Does Not Have Privilege to View SA Tool Remote", "Test_Sce_Description": "Verify that the operator does not have SA Tool Remote access as defined in UM Portal permissions."}, {"Function_Flow_Name": "Establish Wi-Fi or cellular network connection", "Sub_Flow_Name": "Establish Printer Connection", "Use_Case_Name": "Access SA Tool Remote", "Test_Scnario": "Power On SA Tool", "Test_Sce_Description": "Verify that the SA Tool powers on correctly when the power button is pressed and held. The device should boot up, perform an initial self-diagnostic check without finding errors or failures, and require the operator to enter the OS Lock screen passcode at the device lock screen. After a valid passcode is entered, the device should launch the Android home screen of the SA Tool device."}, {"Function_Flow_Name": "Establish Wi-Fi or cellular network connection", "Sub_Flow_Name": "Establish Printer Connection", "Use_Case_Name": "Access SA Tool Remote", "Test_Scnario": "Low Battery Threshold", "Test_Sce_Description": "Verify that the SA Tool does not power on if the device is not charged above the low battery threshold. The device should display a low battery warning and prompt the user to charge the device."}, {"Function_Flow_Name": "Establish Wi-Fi or cellular network connection", "Sub_Flow_Name": "Establish Printer Connection", "Use_Case_Name": "Access SA Tool Remote", "Test_Scnario": "Sufficient Memory Availability", "Test_Sce_Description": "Verify that the SA Tool powers on correctly if the device has sufficient memory available above the low memory threshold. If the device does not have sufficient memory, it should display a low memory warning and prompt the user to free up some memory."}, {"Function_Flow_Name": "Establish Wi-Fi or cellular network connection", "Sub_Flow_Name": "Establish Printer Connection", "Use_Case_Name": "Access SA Tool Remote", "Test_Scnario": "Invalid OS Lock Screen Passcode", "Test_Sce_Description": "Verify that the SA Tool does not launch the Android home screen if an invalid passcode is entered at the lock screen. The device should prompt the user to enter a valid passcode."}, {"Function_Flow_Name": "Establish Wi-Fi or cellular network connection", "Sub_Flow_Name": "Establish Printer Connection", "Use_Case_Name": "Access SA Tool Remote", "Test_Scnario": "Launch Authorized Third-Party Applications", "Test_Sce_Description": "Verify that the operator can launch authorized third-party applications from the Android home screen of the SA Tool device. The device should display a list of authorized third-party applications and allow the operator to select and launch any of them."}, {"Function_Flow_Name": "Establish Wi-Fi or cellular network connection", "Sub_Flow_Name": "Establish Printer Connection", "Use_Case_Name": "Access SA Tool Remote", "Test_Scnario": "Self-Diagnostic Check Errors", "Test_Sce_Description": "Verify that the SA Tool displays an error message and does not proceed to the lock screen if the device performs an initial self-diagnostic check and finds errors or failures."}, {"Function_Flow_Name": "Establish Wi-Fi or cellular network connection", "Sub_Flow_Name": "Establish Printer Connection", "Use_Case_Name": "Access SA Tool Remote", "Test_Scnario": "Access SA Tool Remote", "Test_Sce_Description": "Verify that the operator can access the SA Tool remotely. The device should allow the operator to connect to the SA Tool remotely and perform all necessary functions."}, {"Function_Flow_Name": "Establish Wi-Fi or cellular network connection", "Sub_Flow_Name": "Establish Printer Connection", "Use_Case_Name": "Access SA Tool Remote", "Test_Scnario": "Unblock Farecard", "Test_Sce_Description": "Verify that the operator can unblock a farecard using the SA Tool. The device should allow the operator to select a farecard, unblock it, and confirm that the farecard has been unblocked."}, {"Function_Flow_Name": "Establish Wi-Fi or cellular network connection", "Sub_Flow_Name": "Establish Printer Connection", "Use_Case_Name": "Access SA Tool Remote", "Test_Scnario": "Modify Card Concession", "Test_Sce_Description": "Verify that the operator can modify a card concession using the SA Tool. The device should allow the operator to select a card, modify its concession, and confirm that the concession has been modified."}, {"Function_Flow_Name": "Establish Wi-Fi or cellular network connection", "Sub_Flow_Name": "Establish Printer Connection", "Use_Case_Name": "Access SA Tool Remote", "Test_Scnario": "Access Revenue Mode", "Test_Sce_Description": "Verify that the operator can access the Revenue Mode using the SA Tool. The device should allow the operator to select the Revenue Mode, perform all necessary functions, and confirm that the Revenue Mode is active."}, {"Function_Flow_Name": "Establish Wi-Fi or cellular network connection", "Sub_Flow_Name": "Establish Printer Connection", "Use_Case_Name": "Failure to connect to Internet", "Test_Scnario": "Failure to connect to internet during password change", "Test_Sce_Description": "Verify that the system handles the scenario where the user is changing their password and the internet connection is lost. The system should time out and display the relevant error message. If the connection is restored, the user should be able to resume the password change process."}, {"Function_Flow_Name": "Establish Wi-Fi or cellular network connection", "Sub_Flow_Name": "Establish Printer Connection", "Use_Case_Name": "Failure to connect to Internet", "Test_Scnario": "Failure to connect to internet during SP Remote access", "Test_Sce_Description": "Verify that the system handles the scenario where the user is accessing SP Remote and the internet connection is lost. The system should time out and display the relevant error message. If the connection is restored, the user should be able to resume accessing SP Remote."}, {"Function_Flow_Name": "Establish Wi-Fi or cellular network connection", "Sub_Flow_Name": "Establish Printer Connection", "Use_Case_Name": "Failure to connect to Internet", "Test_Scnario": "Handling of declined message from Moneris during credit card payment", "Test_Sce_Description": "Verify that the system handles the scenario where the operator is performing a credit card transaction and communication with Moneris fails. The system should display the relevant error message and return to the payment means screen."}, {"Function_Flow_Name": "Establish Wi-Fi or cellular network connection", "Sub_Flow_Name": "Establish Printer Connection", "Use_Case_Name": "Failure to connect to Internet", "Test_Scnario": "Handling of declined message from Moneris during debit card payment", "Test_Sce_Description": "Verify that the system handles the scenario where the operator is performing a debit card transaction and communication with Moneris fails. The system should display the relevant error message and return to the payment means screen."}, {"Function_Flow_Name": "Establish Wi-Fi or cellular network connection", "Sub_Flow_Name": "Establish Printer Connection", "Use_Case_Name": "Failure to connect to Internet", "Test_Scnario": "Failure to load Farecard after successful payment", "Test_Sce_Description": "Verify that the system handles the scenario where the operator is performing a Farecard transaction, the payment is successful but the write to the card is not successful. The system should display the relevant error message and the operator should have the option to try again or cancel and refund the payment."}, {"Function_Flow_Name": "Establish Wi-Fi or cellular network connection", "Sub_Flow_Name": "Establish Printer Connection", "Use_Case_Name": "Failure to connect to Internet", "Test_Scnario": "Failure to connect to receipt printer during e-Purse change transaction", "Test_Sce_Description": "Verify that the system handles the scenario where the operator is performing a transaction which changes the e-Purse and connection with the receipt printer fails. The system should display the relevant error message and the operator should have the option to proceed without printing capabilities or exit the flow."}, {"Function_Flow_Name": "Establish Wi-Fi or cellular network connection", "Sub_Flow_Name": "Establish Printer Connection", "Use_Case_Name": "Failure to connect to Internet", "Test_Scnario": "Failure to connect to Pin Pad during debit or credit payment", "Test_Sce_Description": "Verify that the system handles the scenario where the operator is performing a transaction that requires the use of Pin Pad to receive payment from the customer and connection with the Pin Pad fails. The system should display the relevant error message and the operator should have the option to wait for the Pin Pad to connect in the background or exit the flow."}, {"Function_Flow_Name": "Establish Wi-Fi or cellular network connection", "Sub_Flow_Name": "Establish Printer Connection", "Use_Case_Name": "Failure to connect to Internet", "Test_Scnario": "Handling of Open Payments Media failing ODA check", "Test_Sce_Description": "Verify that the system handles the scenario where an Open Payments Media fails the ODA check. The system should return the appropriate feedback and provide the Declined \u2013 Failed ODA Check Screen to the cardholder."}, {"Function_Flow_Name": "Establish Wi-Fi or cellular network connection", "Sub_Flow_Name": "Establish Printer Connection", "Use_Case_Name": "Failure to connect to Internet", "Test_Scnario": "Handling of Open Payments Media failing Expiry Check", "Test_Sce_Description": "Verify that the system handles the scenario where an Open Payments Media fails the Expiry Check. The system should return the appropriate feedback and provide the Declined \u2013 Card Expired Screen to the cardholder."}, {"Function_Flow_Name": "Establish Wi-Fi or cellular network connection", "Sub_Flow_Name": "Establish Printer Connection", "Use_Case_Name": "Failure to connect to Internet", "Test_Scnario": "Handling of Open Payments Media already tapped-on using an Online Device within Anti-Passback Window", "Test_Sce_Description": "Verify that the system handles the scenario where the cardholder taps-on again at an SA Tool at the same station within the SA Tool Tap-on anti-passback Window, whereby the initial device and secondary device(s) tapped on were all online. The system should provide the Declined \u2013 Already Tapped Screen to the cardholder."}, {"Function_Flow_Name": "Establish Wi-Fi or cellular network connection", "Sub_Flow_Name": "Establish Printer Connection", "Use_Case_Name": "Failure to connect to Internet", "Test_Scnario": "Handling of Open Payments Media already tapped-on using an Offline Device", "Test_Sce_Description": "Verify that the system handles the scenario where the cardholder taps-on again at an SA Tool at the same station within the SA Tool Tap-on anti-passback Window whereby the initial device tapped, and secondary device(s) is the same device and is offline. The system should provide the Declined \u2013 Already Tapped Screen to the cardholder."}, {"Function_Flow_Name": "Establish Wi-Fi or cellular network connection", "Sub_Flow_Name": "Establish Printer Connection", "Use_Case_Name": "Failure to connect to Internet", "Test_Scnario": "Handling of Open Payments Media on the ATS deny list and the SA Tool is online", "Test_Sce_Description": "Verify that the system handles the scenario where the Open Payments Media is on the deny list and the SA Tool is online. The system should provide the appropriate feedback to the cardholder."}, {"Function_Flow_Name": "Establish Wi-Fi or cellular network connection", "Sub_Flow_Name": "Establish Printer Connection", "Use_Case_Name": "User does not have privilege to view SA Tool Remote", "Test_Scnario": "Printer Details Page Redirection", "Test_Sce_Description": "Verify that when the operator taps the printer icon from the screen they are on, the SA Tool correctly redirects the operator to the Printer Details page."}, {"Function_Flow_Name": "Establish Wi-Fi or cellular network connection", "Sub_Flow_Name": "Establish Printer Connection", "Use_Case_Name": "User does not have privilege to view SA Tool Remote", "Test_Scnario": "Printer Pairing Functionality", "Test_Sce_Description": "Verify that the operator can re-connect to an existing paired printer, delete a pairing, or pair with a new printer from the Printer Details page."}, {"Function_Flow_Name": "Establish Wi-Fi or cellular network connection", "Sub_Flow_Name": "Establish Printer Connection", "Use_Case_Name": "User does not have privilege to view SA Tool Remote", "Test_Scnario": "Return to Previous Flow", "Test_Sce_Description": "Verify that after the operator has completed their activities, they can return to the previous flow by selecting the Done or Back button."}, {"Function_Flow_Name": "Establish Wi-Fi or cellular network connection", "Sub_Flow_Name": "Establish Printer Connection", "Use_Case_Name": "User does not have privilege to view SA Tool Remote", "Test_Scnario": "No Available Printer", "Test_Sce_Description": "Verify that if there is no available printer in the range of SA tool, the SA tool displays a relevant message to the operator indicating no printers could be found."}, {"Function_Flow_Name": "Establish Wi-Fi or cellular network connection", "Sub_Flow_Name": "Establish Printer Connection", "Use_Case_Name": "User does not have privilege to view SA Tool Remote", "Test_Scnario": "Disable Peripherals - Printer", "Test_Sce_Description": "Verify that the operator can disable the Printer peripheral at the SA Tool device and it is removed from the cached memory."}, {"Function_Flow_Name": "Establish Wi-Fi or cellular network connection", "Sub_Flow_Name": "Establish Printer Connection", "Use_Case_Name": "User does not have privilege to view SA Tool Remote", "Test_Scnario": "Access SA Tool Remote", "Test_Sce_Description": "Verify that the operator can access the SA Tool Remote and use all the functionality of SA Tool Remote."}, {"Function_Flow_Name": "Establish Wi-Fi or cellular network connection", "Sub_Flow_Name": "Establish Printer Connection", "Use_Case_Name": "User does not have privilege to view SA Tool Remote", "Test_Scnario": "Failure to Connect to Internet", "Test_Sce_Description": "Verify that if there is a failure to connect to the Internet, the SA Tool displays a relevant error message."}, {"Function_Flow_Name": "Establish Wi-Fi or cellular network connection", "Sub_Flow_Name": "Establish Printer Connection", "Use_Case_Name": "User does not have privilege to view SA Tool Remote", "Test_Scnario": "Privilege to View SA Tool Remote", "Test_Sce_Description": "Verify that if the operator does not have the privilege to view SA Tool Remote, the SA Tool displays a relevant error message."}, {"Function_Flow_Name": "Establish Wi-Fi or cellular network connection", "Sub_Flow_Name": "Establish Printer Connection", "Use_Case_Name": "User does not have privilege to view SA Tool Remote", "Test_Scnario": "Launching the SA Tool Application", "Test_Sce_Description": "Verify that an authorized operator can successfully launch the SA Tool Application and the application performs continuous diagnostic checks as the application is launched."}, {"Function_Flow_Name": "Establish Wi-Fi or cellular network connection", "Sub_Flow_Name": "Establish Printer Connection", "Use_Case_Name": "User does not have privilege to view SA Tool Remote", "Test_Scnario": "Switching between the PDS SA Tool application and third-party applications", "Test_Sce_Description": "Verify that an authorized operator can switch between the SA Tool Application and the whitelisted third-party applications on the device."}, {"Function_Flow_Name": "Establish Wi-Fi or cellular network connection", "Sub_Flow_Name": "Establish Printer Connection", "Use_Case_Name": "Failure to connect to internet", "Test_Scnario": "Failure to connect to internet", "Test_Sce_Description": "Verify the system's behavior when there is no internet connection and the user is performing an action that requires internet connection. The system should time out and display the relevant error message with options to try again or cancel. If the internet connection is restored, the system should resume the main use case. If the action is cancelled, the system should return to the previous screen."}, {"Function_Flow_Name": "Establish Wi-Fi or cellular network connection", "Sub_Flow_Name": "Establish Printer Connection", "Use_Case_Name": "Failure to connect to internet", "Test_Scnario": "PIN pad transmits DECLINED message from Moneris", "Test_Sce_Description": "Verify the system's behavior when the operator is performing a credit or debit transaction and communication with Moneris fails. The system should display the relevant error message and return to the payment means screen. The receipt printer should print a failure of payment means."}, {"Function_Flow_Name": "Establish Wi-Fi or cellular network connection", "Sub_Flow_Name": "Establish Printer Connection", "Use_Case_Name": "Failure to connect to internet", "Test_Scnario": "Failure to load Farecard after payment has been processed", "Test_Sce_Description": "Verify the system's behavior when the operator is performing a Farecard transaction, the payment has been processed and successful, but the write to the card is not successful. The system should display the relevant error message and the operator can choose to try again or cancel and refund the payment."}, {"Function_Flow_Name": "Establish Wi-Fi or cellular network connection", "Sub_Flow_Name": "Establish Printer Connection", "Use_Case_Name": "Failure to connect to internet", "Test_Scnario": "Failure to connect to receipt printer", "Test_Sce_Description": "Verify the system's behavior when the operator is performing a transaction which requires printing, and connection with the receipt printer fails. The system should display the relevant error message and the operator can choose to proceed with the flow without printing capabilities, or exit the flow."}, {"Function_Flow_Name": "Establish Wi-Fi or cellular network connection", "Sub_Flow_Name": "Establish Printer Connection", "Use_Case_Name": "Failure to connect to internet", "Test_Scnario": "Failure to connect to Pin Pad", "Test_Sce_Description": "Verify the system's behavior when the operator is performing a transaction which requires use of Pin Pad, and connection with the Pin Pad fails. The system should display the relevant error message and the operator can choose to wait for the Pin Pad to connect in the background or exit the flow."}, {"Function_Flow_Name": "Establish Wi-Fi or cellular network connection", "Sub_Flow_Name": "Establish Printer Connection", "Use_Case_Name": "Failure to connect to internet", "Test_Scnario": "Open Payments Media fails ODA check", "Test_Sce_Description": "Verify the system's behavior when an Open Payments Media fails the ODA check. The device should return the appropriate feedback and the Declined \u2013 Failed ODA Check Screen should be provided to the cardholder."}, {"Function_Flow_Name": "Establish Wi-Fi or cellular network connection", "Sub_Flow_Name": "Establish Printer Connection", "Use_Case_Name": "Failure to connect to internet", "Test_Scnario": "Open Payments Media Fails Expiry Check", "Test_Sce_Description": "Verify the system's behavior when an Open Payments Media fails the Expiry Check. The device should return the appropriate feedback and the Declined \u2013 Card Expired Screen should be provided to the cardholder."}, {"Function_Flow_Name": "Establish Wi-Fi or cellular network connection", "Sub_Flow_Name": "Establish Printer Connection", "Use_Case_Name": "Failure to connect to internet", "Test_Scnario": "Open Payments Media has already tapped-on using an Online Device within Anti-Passback Window", "Test_Sce_Description": "Verify the system's behavior when the cardholder taps-on again at an SA Tool at the same station within the SA Tool Tap-on anti-passback Window, whereby the initial device and secondary device(s) tapped on were all online. The device should provide the cardholder with the appropriate feedback."}, {"Function_Flow_Name": "Establish Wi-Fi or cellular network connection", "Sub_Flow_Name": "Establish Printer Connection", "Use_Case_Name": "Failure to connect to internet", "Test_Scnario": "Open Payments Media has already tapped-on using an Offline Device", "Test_Sce_Description": "Verify the system's behavior when the cardholder taps-on again at an SA Tool at the same station within the SA Tool Tap-on anti-passback Window whereby the initial device tapped, and secondary device(s) is the same device and is offline. The device should provide the cardholder with the appropriate feedback."}, {"Function_Flow_Name": "Establish Wi-Fi or cellular network connection", "Sub_Flow_Name": "Establish Printer Connection", "Use_Case_Name": "Failure to connect to internet", "Test_Scnario": "Open Payments Media is on the ATS deny list and the SA Tool is online", "Test_Sce_Description": "Verify the system's behavior when the Open Payments Media is on the deny list and the SA Tool is online. The system should display the relevant error message and the operator can choose to proceed with the flow without the denied Open Payments Media, or exit the flow."}, {"Function_Flow_Name": "Establish Wi-Fi or cellular network connection", "Sub_Flow_Name": "Establish Printer Connection", "Use_Case_Name": "PIN pad transmits DECLINED message from Moneris", "Test_Scnario": "Moneris Payment Unsuccessful - Retry with Card", "Test_Sce_Description": "This scenario tests the functionality of the system when the Moneris payment is unsuccessful and the operator would like to retry with the same card. The system should notify the operator of the unsuccessful payment attempt, print a receipt with the corresponding error messages, and allow the operator to select the credit/debit mean of payment again."}, {"Function_Flow_Name": "Establish Wi-Fi or cellular network connection", "Sub_Flow_Name": "Establish Printer Connection", "Use_Case_Name": "PIN pad transmits DECLINED message from Moneris", "Test_Scnario": "Moneris Payment Unsuccessful - Switch Payment Method", "Test_Sce_Description": "This scenario tests the functionality of the system when the Moneris payment is unsuccessful and the operator would like to switch to a different payment method. The system should notify the operator of the unsuccessful payment attempt, print a receipt with the corresponding error messages, and allow the operator to select any other available payment method to complete the transaction."}, {"Function_Flow_Name": "Establish Wi-Fi or cellular network connection", "Sub_Flow_Name": "Establish Printer Connection", "Use_Case_Name": "PIN pad transmits DECLINED message from Moneris", "Test_Scnario": "Cancel Moneris Transaction", "Test_Sce_Description": "This scenario tests the functionality of the system when the operator or customer would like to cancel the current payment method after initiating the transaction on the PIN pad. The system should allow the customer to cancel operation on the PIN pad, cancel the Moneris transaction, and return to the main payment screen without removing any items from the shopping cart."}, {"Function_Flow_Name": "Establish Wi-Fi or cellular network connection", "Sub_Flow_Name": "Establish Printer Connection", "Use_Case_Name": "PIN pad transmits DECLINED message from Moneris", "Test_Scnario": "Cancel PIN pad Transaction", "Test_Sce_Description": "This scenario tests the functionality of the system when the customer would like to cancel the current payment method after the operator has initiated the transaction on the PIN pad. The system should allow the customer to cancel the payment on the PIN pad, provide an appropriate message indicating that the customer has cancelled the transaction, and return to the payment method screen without removing any items from the shopping cart."}, {"Function_Flow_Name": "Establish Wi-Fi or cellular network connection", "Sub_Flow_Name": "Establish Printer Connection", "Use_Case_Name": "PIN pad transmits DECLINED message from Moneris", "Test_Scnario": "SA Tool Offline Before Payment Response", "Test_Sce_Description": "This scenario tests the functionality of the system when the SA Tool goes offline before the payment response is received. The system should display an error message to the operator informing them that if the payment was processed successfully, an established operational process should be followed to void/refund the transaction."}, {"Function_Flow_Name": "Establish Wi-Fi or cellular network connection", "Sub_Flow_Name": "Establish Printer Connection", "Use_Case_Name": "PIN pad transmits DECLINED message from Moneris", "Test_Scnario": "Device Error", "Test_Sce_Description": "This scenario tests the functionality of the system when an error has occurred on the device that does not cover the exception cases. The system should record the tap and provide the Declined \u2013 Please Contact Customer Service screen to the cardholder."}, {"Function_Flow_Name": "Establish Wi-Fi or cellular network connection", "Sub_Flow_Name": "Establish Printer Connection", "Use_Case_Name": "PIN pad transmits DECLINED message from Moneris", "Test_Scnario": "Open Payments Media Not on Approved List", "Test_Sce_Description": "This scenario tests the functionality of the system when the customer attempts to tap an Open Payments media not on the approved media list while the device is in Pilot mode. The system should check the approved media list and if the media is not found, provide the Declined \u2013 Not Accepted, Tap Farecard screen to the cardholder."}, {"Function_Flow_Name": "Establish Wi-Fi or cellular network connection", "Sub_Flow_Name": "Establish Printer Connection", "Use_Case_Name": "PIN pad transmits DECLINED message from Moneris", "Test_Scnario": "Open Payments Media on BIN Blocking List", "Test_Sce_Description": "This scenario tests the functionality of the system when the customer\u2019s Open Payments Media is on the BIN Blocking List. The system should check its local BIN Blocking list and if the card\u2019s BIN is found to be on the BIN Blocking List, play the decline audio tone and display the Declined \u2013 Try Another Card (BIN Blocked) screen."}, {"Function_Flow_Name": "Establish Wi-Fi or cellular network connection", "Sub_Flow_Name": "Establish Printer Connection", "Use_Case_Name": "PIN pad transmits DECLINED message from Moneris", "Test_Scnario": "Interac Card Declined Due to Media In Debt", "Test_Sce_Description": "This scenario tests the functionality of the system when the customer is travelling with an Interac Card, and ATS returns a decline response due to Media In Debt. The system should send the tap to ATS and return a response that the Interac media is on the deny list, not confer the right to travel, and provide the Declined \u2013 Tap Again (in X Seconds) screen (Interac \u2013 Trying to Pay Unpaid Fares) screen to the cardholder."}, {"Function_Flow_Name": "Establish Wi-Fi or cellular network connection", "Sub_Flow_Name": "Establish Printer Connection", "Use_Case_Name": "PIN pad transmits DECLINED message from Moneris", "Test_Scnario": "Interac Card Tapped While Interac is Disabled", "Test_Sce_Description": "This scenario tests the functionality of the system when the customer taps Interac Card while Interac is disabled on SA Tool. The system should detect the Interac media, determine that the media tapped is not supported, display an error message, and not confer the right to travel."}, {"Function_Flow_Name": "Establish Wi-Fi or cellular network connection", "Sub_Flow_Name": "Establish Printer Connection", "Use_Case_Name": "Failure to load Farecard after payment has been processed", "Test_Scnario": "Multiple NFC media presented to the device", "Test_Sce_Description": "Verify that when multiple NFC media are presented to the device at the same time, the device blocks all fare payment functionality and presents an Anti-Collision toast message to the customer. Also, ensure that an error is captured and logged in the background and in the SOTI logs."}, {"Function_Flow_Name": "Establish Wi-Fi or cellular network connection", "Sub_Flow_Name": "Establish Printer Connection", "Use_Case_Name": "Failure to load Farecard after payment has been processed", "Test_Scnario": "Non-activated Farecard tapped on the device", "Test_Sce_Description": "Verify that when a non-activated Farecard is tapped on the device, the transaction is unsuccessful. The device should detect that the Farecard is not activated and provide feedback to the Cardholder of an unsuccessful transaction due to inactive farecard. An error should be captured and logged in the background and in the SOTI logs."}, {"Function_Flow_Name": "Establish Wi-Fi or cellular network connection", "Sub_Flow_Name": "Establish Printer Connection", "Use_Case_Name": "Failure to load Farecard after payment has been processed", "Test_Scnario": "Card reading error occurs", "Test_Sce_Description": "Verify that when a Cardholder taps Farecard on an SA Tool and a Card reading error occurs (e.g. Farecard is immediately removed from the card reader), the device does not provide any feedback and screen remains \u201cIn-Service\u201d display. An error should be captured and logged in the background and in the SOTI logs."}, {"Function_Flow_Name": "Establish Wi-Fi or cellular network connection", "Sub_Flow_Name": "Establish Printer Connection", "Use_Case_Name": "Failure to load Farecard after payment has been processed", "Test_Scnario": "Card write error occurs", "Test_Sce_Description": "Verify that when a Farecard is tapped on an SA Tool and a card write error occurs, the device does not provide any feedback and screen remains \u201cIn-Service\u201d display. The device should delete the transaction information and an error should be captured and logged in the background and in the SOTI logs."}, {"Function_Flow_Name": "Establish Wi-Fi or cellular network connection", "Sub_Flow_Name": "Establish Printer Connection", "Use_Case_Name": "Failure to load Farecard after payment has been processed", "Test_Scnario": "Incorrect Farecard Type tapped", "Test_Sce_Description": "Verify that when a Farecard of incorrect type is tapped on the device, the SA Tool application identifies the Farecard Type to be incorrect for the mode the operator is currently operating in and notifies the operator of the incorrect Farecard Type."}, {"Function_Flow_Name": "Establish Wi-Fi or cellular network connection", "Sub_Flow_Name": "Establish Printer Connection", "Use_Case_Name": "Failure to load Farecard after payment has been processed", "Test_Scnario": "Non-Farecard tapped to the reader", "Test_Sce_Description": "Verify that when a Non-Farecard is tapped to the reader, the SA Tool application identifies the card to be a non-Farecard and displays an error pop up message."}, {"Function_Flow_Name": "Establish Wi-Fi or cellular network connection", "Sub_Flow_Name": "Establish Printer Connection", "Use_Case_Name": "Failure to load Farecard after payment has been processed", "Test_Scnario": "Failure to read Virtual Card", "Test_Sce_Description": "Verify that when the SA Tool application detects the Virtual Card and fails to read it correctly, it indicates to the operator that the Virtual Card read has failed. The operator should be able to close the error prompt and tap the card to try again."}, {"Function_Flow_Name": "Establish Wi-Fi or cellular network connection", "Sub_Flow_Name": "Establish Printer Connection", "Use_Case_Name": "Failure to load Farecard after payment has been processed", "Test_Scnario": "Blocked/Hotlisted Farecard \u2013 Virtual Card", "Test_Sce_Description": "Verify that when a blocked Farecard is tapped on the device, the SA Tool application detects that the Farecard is blocked and displays the Farecard query screen indicating that the Farecard has been blocked. The operator should not be able to take any further actions on the Farecard."}, {"Function_Flow_Name": "Establish Wi-Fi or cellular network connection", "Sub_Flow_Name": "Establish Printer Connection", "Use_Case_Name": "Failure to load Farecard after payment has been processed", "Test_Scnario": "Ineligible Products in SA Tool shopping cart", "Test_Sce_Description": "Verify that when the SA Tool shopping cart has ineligible products, the device displays an error confirming that one or more of the products are not available for sale. The operator should be able to remove the ineligible products from cart and reattempt the shopping flow."}, {"Function_Flow_Name": "Establish Wi-Fi or cellular network connection", "Sub_Flow_Name": "Establish Printer Connection", "Use_Case_Name": "Failure to load Farecard after payment has been processed", "Test_Scnario": "ATS failure to load products", "Test_Sce_Description": "Verify that when the ATS is unable to load products to the customer\u2019s account after the operator has completed the SA Tool shopping flow, the SA Tool informs operator that the products purchased were not added to the user\u2019s account. The Operator should be able to attempt the checkout again or provide the customer a refund if the customer paid with cash."}, {"Function_Flow_Name": "Establish Wi-Fi or cellular network connection", "Sub_Flow_Name": "Establish Printer Connection", "Use_Case_Name": "Failure to connect to receipt printer", "Test_Scnario": "Failure to connect to receipt printer during a transaction", "Test_Sce_Description": "Verify that the system correctly handles a failure to connect to the receipt printer during a transaction. The system should display an error message and offer the operator the option to proceed without printing capabilities or to exit the flow."}, {"Function_Flow_Name": "Establish Wi-Fi or cellular network connection", "Sub_Flow_Name": "Establish Printer Connection", "Use_Case_Name": "Failure to connect to receipt printer", "Test_Scnario": "Check the frequency of printer status fetch", "Test_Sce_Description": "Verify that the application fetches the status of the printer at a regular rate throughout the experience (frequency of 15 minutes)."}, {"Function_Flow_Name": "Establish Wi-Fi or cellular network connection", "Sub_Flow_Name": "Establish Printer Connection", "Use_Case_Name": "Failure to connect to receipt printer", "Test_Scnario": "Check the response when printer is disconnected after successful transaction", "Test_Sce_Description": "Verify that the operational procedures apply to ensure that the sold product is delivered to the customer or refunded when the printer is disconnected after successful transaction completion and a product has to be printed."}, {"Function_Flow_Name": "Establish Wi-Fi or cellular network connection", "Sub_Flow_Name": "Establish Printer Connection", "Use_Case_Name": "Failure to connect to receipt printer", "Test_Scnario": "Failure to connect to Pin Pad during a transaction", "Test_Sce_Description": "Verify that the system correctly handles a failure to connect to the Pin Pad during a transaction. The system should display an error message and offer the operator the option to wait for the Pin Pad to connect in the background or exit the flow."}, {"Function_Flow_Name": "Establish Wi-Fi or cellular network connection", "Sub_Flow_Name": "Establish Printer Connection", "Use_Case_Name": "Failure to connect to receipt printer", "Test_Scnario": "Check the frequency of Pin Pad status fetch", "Test_Sce_Description": "Verify that the application fetches the status of the pin pad at a regular rate throughout the payment or refund flow where pin pad is required."}, {"Function_Flow_Name": "Establish Wi-Fi or cellular network connection", "Sub_Flow_Name": "Establish Printer Connection", "Use_Case_Name": "Failure to connect to receipt printer", "Test_Scnario": "Check the response when Pin Pad connection is not automatically established", "Test_Sce_Description": "Verify that the operator can manually attempt to connect an available Pin Pad when the connection to the Pin Pad is not automatically established."}, {"Function_Flow_Name": "Establish Wi-Fi or cellular network connection", "Sub_Flow_Name": "Establish Printer Connection", "Use_Case_Name": "Failure to connect to receipt printer", "Test_Scnario": "Check the response when no available printer in the range of SA tool", "Test_Sce_Description": "Verify that the SA tool displays a relevant message to the operator indicating no printers could be found after scanning for a configured amount of time and the list for the available printers returns no results."}, {"Function_Flow_Name": "Establish Wi-Fi or cellular network connection", "Sub_Flow_Name": "Establish Printer Connection", "Use_Case_Name": "Failure to connect to receipt printer", "Test_Scnario": "Check the response when operator does not have privilege to view SA Tool Remote", "Test_Sce_Description": "Verify that the system correctly handles the situation when the operator does not have SA Tool Remote access as defined in UM Portal permissions. The system should display an error message and prevent the operator from accessing SA Tool Remote."}, {"Function_Flow_Name": "Establish Wi-Fi or cellular network connection", "Sub_Flow_Name": "Establish Printer Connection", "Use_Case_Name": "Failure to connect to receipt printer", "Test_Scnario": "Check the response when failure to connect to Internet", "Test_Sce_Description": "Verify that the system correctly handles a failure to connect to the Internet. The system should display an error message and offer the operator the option to try again or cancel."}, {"Function_Flow_Name": "Establish Wi-Fi or cellular network connection", "Sub_Flow_Name": "Establish Printer Connection", "Use_Case_Name": "Failure to connect to Pin Pad", "Test_Scnario": "Failure to connect to Pin Pad", "Test_Sce_Description": "This scenario tests the functionality of the system when there is a failure to connect to the Pin Pad. The operator is performing a transaction that requires the use of Pin Pad. The system should display an error message and the operator should have the option to wait for the Pin Pad to connect in the background or exit the flow."}, {"Function_Flow_Name": "Establish Wi-Fi or cellular network connection", "Sub_Flow_Name": "Establish Printer Connection", "Use_Case_Name": "Failure to connect to Pin Pad", "Test_Scnario": "Manual connection to Pin Pad", "Test_Sce_Description": "This scenario tests the functionality of the system when the operator manually attempts to connect an available Pin Pad after an automatic connection failure. The system should allow the operator to manually connect to the Pin Pad."}, {"Function_Flow_Name": "Establish Wi-Fi or cellular network connection", "Sub_Flow_Name": "Establish Printer Connection", "Use_Case_Name": "Failure to connect to Pin Pad", "Test_Scnario": "Pin Pad connection status check", "Test_Sce_Description": "This scenario tests the functionality of the system when checking the connection status to the Pin Pad. Before beginning the flow, the system should check the connection status to the Pin Pad."}, {"Function_Flow_Name": "Establish Wi-Fi or cellular network connection", "Sub_Flow_Name": "Establish Printer Connection", "Use_Case_Name": "Failure to connect to Pin Pad", "Test_Scnario": "Pin Pad status fetch frequency", "Test_Sce_Description": "This scenario tests the performance of the system in fetching the status of the pin pad at a regular rate throughout the payment or refund flow where pin pad is required. The system should fetch the status of the pin pad at a regular rate."}, {"Function_Flow_Name": "Establish Wi-Fi or cellular network connection", "Sub_Flow_Name": "Establish Printer Connection", "Use_Case_Name": "Failure to connect to Pin Pad", "Test_Scnario": "Disable Peripherals - PIN pad", "Test_Sce_Description": "This scenario tests the functionality of the system when the operator disables the PIN pad peripheral at the SA Tool device. The system should allow the operator to disable the PIN pad and all other fields on the screen should become disabled."}, {"Function_Flow_Name": "Establish Wi-Fi or cellular network connection", "Sub_Flow_Name": "Establish Printer Connection", "Use_Case_Name": "Failure to connect to Pin Pad", "Test_Scnario": "Enable Peripherals - Printer", "Test_Sce_Description": "This scenario tests the functionality of the system when the operator enables the Printer peripheral at the SA Tool device. The system should search for available printers within the range of the device and display a list of all of the available printers."}, {"Function_Flow_Name": "Establish Wi-Fi or cellular network connection", "Sub_Flow_Name": "Establish Printer Connection", "Use_Case_Name": "Failure to connect to Pin Pad", "Test_Scnario": "Printer pairing process", "Test_Sce_Description": "This scenario tests the functionality of the system during the printer pairing process. The operator should be able to select the desired printer from the list to start the pairing process and the system should display a relevant success message."}, {"Function_Flow_Name": "Establish Wi-Fi or cellular network connection", "Sub_Flow_Name": "Establish Printer Connection", "Use_Case_Name": "Failure to connect to Pin Pad", "Test_Scnario": "No available printer in the range of SA tool", "Test_Sce_Description": "This scenario tests the functionality of the system when there is no available printer in the range of the SA tool. The system should display a relevant message to the operator indicating no printers could be found."}, {"Function_Flow_Name": "Establish Wi-Fi or cellular network connection", "Sub_Flow_Name": "Establish Printer Connection", "Use_Case_Name": "Failure to connect to Pin Pad", "Test_Scnario": "Disable Peripheral \u2013 Printer", "Test_Sce_Description": "This scenario tests the functionality of the system when the operator disables the Printer peripheral at the SA Tool device. The system should allow the operator to disable the Printer and all other fields on the screen should become disabled."}, {"Function_Flow_Name": "Establish Wi-Fi or cellular network connection", "Sub_Flow_Name": "Establish Payment Terminal Connection", "Use_Case_Name": "Virtual Card", "Test_Scnario": "Testing In-Service State", "Test_Sce_Description": "Verify that the SA Tool application is successfully launched and in the foreground when the device is in the 'In-Service' state. Check if the device allows operators to interact with it and provides different functionalities in 'Online' and 'Offline' modes."}, {"Function_Flow_Name": "Establish Wi-Fi or cellular network connection", "Sub_Flow_Name": "Establish Payment Terminal Connection", "Use_Case_Name": "Virtual Card", "Test_Scnario": "Testing Real-Time Mode for Open Payments", "Test_Sce_Description": "Verify that in real-time mode, Open Payments fare payments & inspections provide a near real-time response to the Operator. Check if the device requires an active internet connection to ATS to provide a near real-time response. If the device does not have an active internet connection, it should default to Queued mode."}, {"Function_Flow_Name": "Establish Wi-Fi or cellular network connection", "Sub_Flow_Name": "Establish Payment Terminal Connection", "Use_Case_Name": "Virtual Card", "Test_Scnario": "Testing Queued Mode for Open Payments", "Test_Sce_Description": "Verify that in Queued mode, the device sends the taps collected to ATS, whereby no true inspection or fare payment result is provided to the Operator. The Operator should rely on the local deny list in order to retrieve the tap results such as declined."}, {"Function_Flow_Name": "Establish Wi-Fi or cellular network connection", "Sub_Flow_Name": "Establish Payment Terminal Connection", "Use_Case_Name": "Virtual Card", "Test_Scnario": "Testing Degraded Mode for Open Payments", "Test_Sce_Description": "Verify that when the device is configured in degraded mode, it can only accept Farecard s. This mode can either be manually set through a configuration when Open Payments is disabled or automatically after a configurable period of time the device is offline."}, {"Function_Flow_Name": "Establish Wi-Fi or cellular network connection", "Sub_Flow_Name": "Establish Payment Terminal Connection", "Use_Case_Name": "Virtual Card", "Test_Scnario": "Testing Real-Time Mode for Virtual Cards", "Test_Sce_Description": "Verify that in real-time mode, VC taps provide a near real-time response to the Operator of the result for the customer\u2019s media. If the device does not have an active internet connection, it should default to Queued state."}, {"Function_Flow_Name": "Establish Wi-Fi or cellular network connection", "Sub_Flow_Name": "Establish Payment Terminal Connection", "Use_Case_Name": "Virtual Card", "Test_Scnario": "Testing Queued Mode for Virtual Cards", "Test_Sce_Description": "Verify that in Queued mode for Virtual Cards, the device evaluates the tap result offline based on the scratchpad and the local deny list. Afterwards, it sends the taps collected to ATS, which will confirm the tap result and may override the result if required."}, {"Function_Flow_Name": "Establish Wi-Fi or cellular network connection", "Sub_Flow_Name": "Establish Payment Terminal Connection", "Use_Case_Name": "Virtual Card", "Test_Scnario": "Testing Degraded Mode for Virtual Cards", "Test_Sce_Description": "Verify that when the device is configured in degraded mode, it can only accept Farecard taps. This mode can either be set through a configuration when Virtual Card is disabled, or after a configurable period of time the device is offline. In this state, a Virtual Card will not be accepted."}, {"Function_Flow_Name": "Establish Wi-Fi or cellular network connection", "Sub_Flow_Name": "Establish Payment Terminal Connection", "Use_Case_Name": "Virtual Card", "Test_Scnario": "Testing Alternate Flow UC-SA Tool-058.1", "Test_Sce_Description": "Verify that when the SA Tool NFC reader detects the Virtual Card but is unable to read it, the SA Tool application indicates to the operator that the Virtual Card is unreadable. The customer should be able to tap on the NFC reader again."}, {"Function_Flow_Name": "Establish Wi-Fi or cellular network connection", "Sub_Flow_Name": "Establish Payment Terminal Connection", "Use_Case_Name": "Virtual Card", "Test_Scnario": "Testing Alternate Flow UC-SA Tool-058.2", "Test_Sce_Description": "Verify that when the customer\u2019s Virtual Card has a Valid Non-Adult, Non-Child, non-discreet concessions, the SA Tool shows the successful fare payment screen for non-adult concession, plays the successful fare payment audio tone for a concession other than Adult, Child, or Discreet Concessions."}, {"Function_Flow_Name": "Establish Wi-Fi or cellular network connection", "Sub_Flow_Name": "Establish Payment Terminal Connection", "Use_Case_Name": "Virtual Card", "Test_Scnario": "Testing Alternate Flow UC-SA Tool-058.3", "Test_Sce_Description": "Verify that when the customer\u2019s ePurse balance is less than the fare amount, the device sends the tap to ATS for processing. ATS should check the online hotlist and complete the fare processing. ATS should remove the fare from the Virtual Card e-Purse and put the card into overdraft."}, {"Function_Flow_Name": "Establish Wi-Fi or cellular network connection", "Sub_Flow_Name": "Establish Payment Terminal Connection", "Use_Case_Name": "Virtual Card", "Test_Scnario": "Testing Alternate Flow UC-SA Tool-058.4", "Test_Sce_Description": "Verify that when the customer\u2019s Virtual Card has a valid transfer product, ATS reads that the Virtual Card contains a valid intra-agency transfer product and deducts $0 from the Virtual Card E-Purse."}, {"Function_Flow_Name": "Establish Wi-Fi or cellular network connection", "Sub_Flow_Name": "Establish Payment Terminal Connection", "Use_Case_Name": "Virtual Card", "Test_Scnario": "Testing Alternate Flow UC-SA Tool-058.5", "Test_Sce_Description": "Verify that when the customer\u2019s Virtual Card has a valid transfer product from other service provider, ATS reads that the Virtual Card contains a valid inter-agency transfer product and deducts $0 from the Virtual Card E-Purse."}, {"Function_Flow_Name": "Establish Wi-Fi or cellular network connection", "Sub_Flow_Name": "Establish Payment Terminal Connection", "Use_Case_Name": "Virtual Card", "Test_Scnario": "Testing Alternate Flow UC-SA Tool-058.6", "Test_Sce_Description": "Verify that when the customer requests Audio Messages, the device provides the appropriate feedback to the Cardholder of a successful transaction."}, {"Function_Flow_Name": "Establish Wi-Fi or cellular network connection", "Sub_Flow_Name": "Establish Payment Terminal Connection", "Use_Case_Name": "In-Service State", "Test_Scnario": "Verify SA Tool switches from Standby to In-Service State", "Test_Sce_Description": "Check if the SA Tool successfully switches from standby to in-service state when the operator presses the physical power button on the device, enters the lock screen passcode and signs in to the SA Tool application as an existing user."}, {"Function_Flow_Name": "Establish Wi-Fi or cellular network connection", "Sub_Flow_Name": "Establish Payment Terminal Connection", "Use_Case_Name": "In-Service State", "Test_Scnario": "Verify SA Tool switches from In-Service to Standby State", "Test_Sce_Description": "Check if the SA Tool successfully switches from in-service to standby state when the operator presses the physical power button on the device once."}, {"Function_Flow_Name": "Establish Wi-Fi or cellular network connection", "Sub_Flow_Name": "Establish Payment Terminal Connection", "Use_Case_Name": "In-Service State", "Test_Scnario": "Verify SA Tool functionality in Out-of-Service State", "Test_Sce_Description": "Check if the SA Tool is unable to accept a Farecard for any kind of functionality and may require maintenance to restore out-of-order components when it is in \u201cOut-of-Service\u201d state."}, {"Function_Flow_Name": "Establish Wi-Fi or cellular network connection", "Sub_Flow_Name": "Establish Payment Terminal Connection", "Use_Case_Name": "In-Service State", "Test_Scnario": "Verify SA Tool functionality in Standby State", "Test_Sce_Description": "Check if the SA Tool temporarily suspends all functionality while in Standby state and if it switches into a Standby state where the screen will turn off after remaining inactive for a configurable period of time."}, {"Function_Flow_Name": "Establish Wi-Fi or cellular network connection", "Sub_Flow_Name": "Establish Payment Terminal Connection", "Use_Case_Name": "In-Service State", "Test_Scnario": "Verify SA Tool functionality when running in the background", "Test_Sce_Description": "Check if the SA Tool allows the operator to use authorized third-party applications as needed and if it disconnects from all the peripherals i.e. the card reader, PIN pad and the printer to conserve battery life when it is running in the background."}, {"Function_Flow_Name": "Establish Wi-Fi or cellular network connection", "Sub_Flow_Name": "Establish Payment Terminal Connection", "Use_Case_Name": "In-Service State", "Test_Scnario": "Verify SA Tool functionality in Revenue Mode", "Test_Sce_Description": "Check if the SA Tool allows the operator to interact with customers, perform inspection, fare payments, sales, refunds/reversals, farecard queries, and other customer service gestures in the Revenue Mode."}, {"Function_Flow_Name": "Establish Wi-Fi or cellular network connection", "Sub_Flow_Name": "Establish Payment Terminal Connection", "Use_Case_Name": "In-Service State", "Test_Scnario": "Verify SA Tool functionality in Training Mode", "Test_Sce_Description": "Check if the SA Tool allows the operator to mimic all functionality available within Sales Mode without accepting payment, and only sending non-revenue transactions in the Training Mode."}, {"Function_Flow_Name": "Establish Wi-Fi or cellular network connection", "Sub_Flow_Name": "Establish Payment Terminal Connection", "Use_Case_Name": "In-Service State", "Test_Scnario": "Verify SA Tool functionality for different users", "Test_Sce_Description": "Check if the SA Tool provides different functionalities for different users such as SA Tool Operators, SA Tool Operators - 3rd Party, Distance based Transitrvisors, Maintenance, Training."}, {"Function_Flow_Name": "Establish Wi-Fi or cellular network connection", "Sub_Flow_Name": "Establish Payment Terminal Connection", "Use_Case_Name": "In-Service State", "Test_Scnario": "Verify SA Tool switches from Standby to In-Service State before threshold requiring login", "Test_Sce_Description": "Check if the SA Tool successfully switches from standby to in-service state when the operator has not been in \u201cstandby\u201d state longer than the configurable threshold value that requires logging in."}, {"Function_Flow_Name": "Establish Wi-Fi or cellular network connection", "Sub_Flow_Name": "Establish Payment Terminal Connection", "Use_Case_Name": "In-Service State", "Test_Scnario": "Verify SA Tool switches to a third party application", "Test_Sce_Description": "Check if the SA Tool successfully runs in the background and goes into standby state when the operator switches to a third party application."}, {"Function_Flow_Name": "Establish Wi-Fi or cellular network connection", "Sub_Flow_Name": "Establish Payment Terminal Connection", "Use_Case_Name": "In-Service State", "Test_Scnario": "Verify error message when operator attempts to change SP on the login screen", "Test_Sce_Description": "Check if the SA Tool application notifies the operator with a corresponding error message when the operator attempts to change SP on the login screen."}, {"Function_Flow_Name": "Establish Wi-Fi or cellular network connection", "Sub_Flow_Name": "Establish Payment Terminal Connection", "Use_Case_Name": "Real-Time Mode", "Test_Scnario": "Testing the In-Service State", "Test_Sce_Description": "Verify that the SA Tool application is successfully launched and in the foreground when the device is in the In-Service state. Check if the device allows operators to interact with it and if it has both Online and Offline modes."}, {"Function_Flow_Name": "Establish Wi-Fi or cellular network connection", "Sub_Flow_Name": "Establish Payment Terminal Connection", "Use_Case_Name": "Real-Time Mode", "Test_Scnario": "Testing the Real-Time Mode for Open Payments", "Test_Sce_Description": "Verify that in Real-Time mode, Open Payments fare payments & inspections provide a near real-time response to the Operator. Check if the device requires an active internet connection to ATS to provide a near real-time response. If the device does not have an active internet connection, it should default to Queued mode."}, {"Function_Flow_Name": "Establish Wi-Fi or cellular network connection", "Sub_Flow_Name": "Establish Payment Terminal Connection", "Use_Case_Name": "Real-Time Mode", "Test_Scnario": "Testing the Queued Mode for Open Payments", "Test_Sce_Description": "Verify that in Queued mode, the device sends the taps collected to ATS, whereby no true inspection or fare payment result is provided to the Operator. The Operator should rely on the local deny list in order to retrieve the tap results such as declined."}, {"Function_Flow_Name": "Establish Wi-Fi or cellular network connection", "Sub_Flow_Name": "Establish Payment Terminal Connection", "Use_Case_Name": "Real-Time Mode", "Test_Scnario": "Testing the Offline functionality", "Test_Sce_Description": "Verify that when the device is offline, the taps are sent to ATS when the device re-connects. If the device remains offline for a period greater than the configured \u201cmaximum offline period\u201d time, the device should provide a notification to the Operator that their local deny list may be unreliable."}, {"Function_Flow_Name": "Establish Wi-Fi or cellular network connection", "Sub_Flow_Name": "Establish Payment Terminal Connection", "Use_Case_Name": "Real-Time Mode", "Test_Scnario": "Testing the Degraded Mode", "Test_Sce_Description": "Verify that when the device is configured in degraded mode, it can only accept Farecard s. This mode can either be manually set through a configuration when Open Payments is disabled or automatically after a configurable period of time the device is offline."}, {"Function_Flow_Name": "Establish Wi-Fi or cellular network connection", "Sub_Flow_Name": "Establish Payment Terminal Connection", "Use_Case_Name": "Real-Time Mode", "Test_Scnario": "Testing the Real-Time Mode for Virtual Cards", "Test_Sce_Description": "Verify that in Real-Time mode, VC taps provide a near real-time response to the Operator of the result for the customer\u2019s media. If the device does not have an active internet connection, it should default to Queued state."}, {"Function_Flow_Name": "Establish Wi-Fi or cellular network connection", "Sub_Flow_Name": "Establish Payment Terminal Connection", "Use_Case_Name": "Real-Time Mode", "Test_Scnario": "Testing the Queued Mode for Virtual Cards", "Test_Sce_Description": "Verify that in Queued mode for Virtual Cards, the device evaluates the tap result offline based on the scratchpad and the local deny list. Afterwards, it sends the taps collected to ATS, which will confirm the tap result and may override the result if required."}, {"Function_Flow_Name": "Establish Wi-Fi or cellular network connection", "Sub_Flow_Name": "Establish Payment Terminal Connection", "Use_Case_Name": "Real-Time Mode", "Test_Scnario": "Testing the Out-of-Service State", "Test_Sce_Description": "Verify that if a SA Tool is in \u201cOut-of-Service\u201d state, it is unable to accept a Farecard for any kind of functionality and may require maintenance to restore out-of-order components."}, {"Function_Flow_Name": "Establish Wi-Fi or cellular network connection", "Sub_Flow_Name": "Establish Payment Terminal Connection", "Use_Case_Name": "Real-Time Mode", "Test_Scnario": "Testing the Standby State", "Test_Sce_Description": "Verify that an operator can temporarily suspend all SA Tool functionality while in Standby state. The SA Tool should disconnect from all the peripherals i.e. the card reader, PIN pad and the printer to conserve battery life."}, {"Function_Flow_Name": "Establish Wi-Fi or cellular network connection", "Sub_Flow_Name": "Establish Payment Terminal Connection", "Use_Case_Name": "Real-Time Mode", "Test_Scnario": "Testing the Revenue Mode", "Test_Sce_Description": "Verify that the Revenue Mode allows the SA Tool operator to interact with customers. In this mode, the operator should be able to perform inspection, fare payments, sales, refunds/reversals, farecard queries, and other customer service gestures."}, {"Function_Flow_Name": "Establish Wi-Fi or cellular network connection", "Sub_Flow_Name": "Establish Payment Terminal Connection", "Use_Case_Name": "Real-Time Mode", "Test_Scnario": "Testing the Training Mode", "Test_Sce_Description": "Verify that the Training Mode allows the SA Tool operator to mimic all functionality available within Sales Mode without accepting payment, and only sending non-revenue transactions."}, {"Function_Flow_Name": "Establish Wi-Fi or cellular network connection", "Sub_Flow_Name": "Establish Payment Terminal Connection", "Use_Case_Name": "Real-Time Mode", "Test_Scnario": "Testing the User Configurable Functionality", "Test_Sce_Description": "Verify that the SA Tool Operators have access to Revenue Mode and can perform core functionalities like Sales, Fare Payment, Inspection, SA Tool Remote Access, Unblock Farecard, and Modify Card Concession."}, {"Function_Flow_Name": "Establish Wi-Fi or cellular network connection", "Sub_Flow_Name": "Establish Payment Terminal Connection", "Use_Case_Name": "Queued Mode", "Test_Scnario": "Testing In-Service State", "Test_Sce_Description": "Verify that the SA Tool application is successfully launched and in the foreground when the device is in the 'In-Service' state. Check the functionalities of the device in both 'Online' and 'Offline' modes."}, {"Function_Flow_Name": "Establish Wi-Fi or cellular network connection", "Sub_Flow_Name": "Establish Payment Terminal Connection", "Use_Case_Name": "Queued Mode", "Test_Scnario": "Testing Real-Time Mode", "Test_Sce_Description": "Verify that in real-time mode, Open Payments fare payments & inspections provide a near real-time response to the Operator. Check if the device requires an active internet connection to ATS in order to provide a near real-time response. If the device does not have an active internet connection, it should default to Queued mode."}, {"Function_Flow_Name": "Establish Wi-Fi or cellular network connection", "Sub_Flow_Name": "Establish Payment Terminal Connection", "Use_Case_Name": "Queued Mode", "Test_Scnario": "Testing Queued Mode", "Test_Sce_Description": "Verify that in Queued mode, the device sends the taps collected to ATS, whereby no true inspection or fare payment result is provided to the Operator. Check if the Operator relies on the local deny list in order to retrieve the tap results such as declined."}, {"Function_Flow_Name": "Establish Wi-Fi or cellular network connection", "Sub_Flow_Name": "Establish Payment Terminal Connection", "Use_Case_Name": "Queued Mode", "Test_Scnario": "Testing Offline Period Notification", "Test_Sce_Description": "Verify that if the device remains offline for a period greater than the configured 'maximum offline period' time, the device provides a notification to the Operator that their local deny list may be unreliable. This should be served to the Operator in the form of a pop-up."}, {"Function_Flow_Name": "Establish Wi-Fi or cellular network connection", "Sub_Flow_Name": "Establish Payment Terminal Connection", "Use_Case_Name": "Queued Mode", "Test_Scnario": "Testing Degraded Mode", "Test_Sce_Description": "Verify that when the device is configured in degraded mode, it can only accept Farecard s. This mode can either be manually set through a configuration when Open Payments is disabled or automatically after a configurable period of time the device is offline."}, {"Function_Flow_Name": "Establish Wi-Fi or cellular network connection", "Sub_Flow_Name": "Establish Payment Terminal Connection", "Use_Case_Name": "Queued Mode", "Test_Scnario": "Testing Out-of-Service State", "Test_Sce_Description": "Verify that if a SA Tool is in 'Out-of-Service' state, it is unable to accept a Farecard for any kind of functionality and may require maintenance to restore out-of-order components."}, {"Function_Flow_Name": "Establish Wi-Fi or cellular network connection", "Sub_Flow_Name": "Establish Payment Terminal Connection", "Use_Case_Name": "Queued Mode", "Test_Scnario": "Testing Standby State", "Test_Sce_Description": "Verify that an operator can temporarily suspend all SA Tool functionality while in Standby state. Check if the SA Tool switches into a Standby state where the screen will turn off after remaining inactive for a configurable period of time."}, {"Function_Flow_Name": "Establish Wi-Fi or cellular network connection", "Sub_Flow_Name": "Establish Payment Terminal Connection", "Use_Case_Name": "Queued Mode", "Test_Scnario": "Testing Revenue Mode", "Test_Sce_Description": "Verify that in the Revenue Mode, the SA Tool operator can interact with customers. Check if the operator can perform inspection, fare payments, sales, refunds/reversals, farecard queries, and other customer service gestures."}, {"Function_Flow_Name": "Establish Wi-Fi or cellular network connection", "Sub_Flow_Name": "Establish Payment Terminal Connection", "Use_Case_Name": "Queued Mode", "Test_Scnario": "Testing Training Mode", "Test_Sce_Description": "Verify that the Training Mode allows the SA Tool operator to mimic all functionality available within Sales Mode without accepting payment, and only sending non-revenue transactions."}, {"Function_Flow_Name": "Establish Wi-Fi or cellular network connection", "Sub_Flow_Name": "Establish Payment Terminal Connection", "Use_Case_Name": "Queued Mode", "Test_Scnario": "Testing User Configurable Functionality", "Test_Sce_Description": "Verify that the SA Tool Operators have access to Revenue Mode, Core Functionality - Sales, Core Functionality - Fare Payment, Core Functionality - Inspection, SA Tool Remote Access, Unblock Farecard, and Modify Card Concession."}, {"Function_Flow_Name": "Establish Wi-Fi or cellular network connection", "Sub_Flow_Name": "Establish Payment Terminal Connection", "Use_Case_Name": "Degraded Mode", "Test_Scnario": "Out-of-Service State Functionality", "Test_Sce_Description": "Verify that when the SA Tool is in 'Out-of-Service' state, it does not accept a Farecard for any kind of functionality and may require maintenance to restore out-of-order components."}, {"Function_Flow_Name": "Establish Wi-Fi or cellular network connection", "Sub_Flow_Name": "Establish Payment Terminal Connection", "Use_Case_Name": "Degraded Mode", "Test_Scnario": "Operator Sign-off in Out-of-Service State", "Test_Sce_Description": "Verify that if an operator is signed-in and the device goes into out-of-service state, the SA Tool application does not close the operator\u2019s shift unless the operator has requested to sign-off."}, {"Function_Flow_Name": "Establish Wi-Fi or cellular network connection", "Sub_Flow_Name": "Establish Payment Terminal Connection", "Use_Case_Name": "Degraded Mode", "Test_Scnario": "Standby State Functionality", "Test_Sce_Description": "Verify that an operator can temporarily suspend all SA Tool functionality while in Standby state. After the SA Tool remains inactive for a configurable period of time, the SA Tool should switch into a Standby state where the screen will turn off."}, {"Function_Flow_Name": "Establish Wi-Fi or cellular network connection", "Sub_Flow_Name": "Establish Payment Terminal Connection", "Use_Case_Name": "Degraded Mode", "Test_Scnario": "Standby State Power Button Functionality", "Test_Sce_Description": "Verify that the operator can press the physical power button to switch the SA Tool into standby state directly. Once in the standby mode, the SA tool should disconnect from all the peripherals i.e. the card reader, PIN pad and the printer to conserve battery life."}, {"Function_Flow_Name": "Establish Wi-Fi or cellular network connection", "Sub_Flow_Name": "Establish Payment Terminal Connection", "Use_Case_Name": "Degraded Mode", "Test_Scnario": "Standby State Resume Functionality", "Test_Sce_Description": "Verify that in order to resume the functionality of the SA Tool application, the operator merely needs to switch back to the SA Tool application. The third-party applications may continue to run in the background."}, {"Function_Flow_Name": "Establish Wi-Fi or cellular network connection", "Sub_Flow_Name": "Establish Payment Terminal Connection", "Use_Case_Name": "Degraded Mode", "Test_Scnario": "Revenue Mode Functionality", "Test_Sce_Description": "Verify that in Revenue Mode, the operator can perform inspection, fare payments, sales, refunds/reversals, farecard queries, and other customer service gestures. SA tool should only have access to the EPT in the revenue mode and should accept the credit and debit payments."}, {"Function_Flow_Name": "Establish Wi-Fi or cellular network connection", "Sub_Flow_Name": "Establish Payment Terminal Connection", "Use_Case_Name": "Degraded Mode", "Test_Scnario": "Training Mode Functionality", "Test_Sce_Description": "Verify that in Training Mode, the SA Tool operator can mimic all functionality available within Sales Mode without accepting payment, and only sending non-revenue transactions. Only non-revenue Farecard should be accepted in Training Mode. Payment by credit /debit should not be enabled."}, {"Function_Flow_Name": "Establish Wi-Fi or cellular network connection", "Sub_Flow_Name": "Establish Payment Terminal Connection", "Use_Case_Name": "Degraded Mode", "Test_Scnario": "Real-Time Mode Functionality", "Test_Sce_Description": "Verify that in real-time mode, Open Payments fare payments & inspections provide a near real-time response to the Operator of the result for the customer\u2019s media. Real-time mode requires the device to have an active internet connection to ATS in order to provide a near real-time response."}, {"Function_Flow_Name": "Establish Wi-Fi or cellular network connection", "Sub_Flow_Name": "Establish Payment Terminal Connection", "Use_Case_Name": "Degraded Mode", "Test_Scnario": "Queued Mode Functionality", "Test_Sce_Description": "Verify that in Queued mode, the device sends the taps collected to ATS, whereby no true inspection or fare payment result is provided to the Operator. When the device is configured in queued mode, it should be unknown to the Operator if the customer has successfully paid their fare."}, {"Function_Flow_Name": "Establish Wi-Fi or cellular network connection", "Sub_Flow_Name": "Establish Payment Terminal Connection", "Use_Case_Name": "Degraded Mode", "Test_Scnario": "Degraded Mode Functionality", "Test_Sce_Description": "Verify that when the device is configured in degraded mode, it can only accept Farecard s. This mode can either be manually set through a configuration when Open Payments is disabled or automatically after a configurable period of time the device is offline."}, {"Function_Flow_Name": "Change operator language", "Sub_Flow_Name": "In-App Training and FAQ", "Use_Case_Name": "Change Operator Language on SA Tool application", "Test_Scnario": "Change Language on SA Tool application while SA Tool is Offline", "Test_Sce_Description": "Verify that the language preference is stored in store-and-forward memory when the SA Tool is offline. Once the network connection is re-established, the language should be updated in the Subsystem."}, {"Function_Flow_Name": "Change operator language", "Sub_Flow_Name": "In-App Training and FAQ", "Use_Case_Name": "Change Operator Language on SA Tool application", "Test_Scnario": "Change Language on SA Tool application while SA Tool is Online", "Test_Sce_Description": "Verify that when an operator changes the application language, the change is applied in all the application screens immediately and the change will be synchronized with the operator\u2019s user account in the subsystem to reflect the language preference change."}, {"Function_Flow_Name": "Change operator language", "Sub_Flow_Name": "In-App Training and FAQ", "Use_Case_Name": "Change Operator Language on SA Tool application", "Test_Scnario": "Change Language on SA Tool application for Specific Screen", "Test_Sce_Description": "Verify that the language toggle located in other screens will only change the language of that screen and not affect the operator language."}, {"Function_Flow_Name": "Change operator language", "Sub_Flow_Name": "In-App Training and FAQ", "Use_Case_Name": "Change Operator Language on SA Tool application", "Test_Scnario": "Change Language on SA Tool application for Inspection Parameters screens", "Test_Sce_Description": "Verify that Line, Trip and Station fields from the Inspection Parameters screens will have short names coming from topology and will not have French equivalents."}, {"Function_Flow_Name": "Change operator language", "Sub_Flow_Name": "In-App Training and FAQ", "Use_Case_Name": "Change Operator Language on SA Tool application", "Test_Scnario": "Performance of SA Tool application during Language Change", "Test_Sce_Description": "Verify the performance of the SA Tool application during the language change process. The application should not crash or hang during this process."}, {"Function_Flow_Name": "Change operator language", "Sub_Flow_Name": "In-App Training and FAQ", "Use_Case_Name": "Change Operator Language on SA Tool application", "Test_Scnario": "Security of SA Tool application during Language Change", "Test_Sce_Description": "Verify that the security of the SA Tool application is not compromised during the language change process. The operator's user account and other sensitive data should remain secure."}, {"Function_Flow_Name": "Change operator language", "Sub_Flow_Name": "In-App Training and FAQ", "Use_Case_Name": "Change Operator Language on SA Tool application", "Test_Scnario": "In-App Training Content Update", "Test_Sce_Description": "Verify that the SA Tool receives updated training content and the training being played by the operator will continue to play while the new content is downloaded to the device. Once the download has completed it should be available the next time the In-App Training and FAQ is launched."}, {"Function_Flow_Name": "Change operator language", "Sub_Flow_Name": "In-App Training and FAQ", "Use_Case_Name": "Change Operator Language on SA Tool application", "Test_Scnario": "In-App Training Content Availability", "Test_Sce_Description": "Verify that if the In-App Training has not been downloaded to the SA Tool, the SA Tool displays a toast message on the Inspection home screen notifying the operator that there is no content available."}, {"Function_Flow_Name": "Change operator language", "Sub_Flow_Name": "In-App Training and FAQ", "Use_Case_Name": "Change Operator Language on SA Tool application", "Test_Scnario": "In-App Training Content Disablement", "Test_Sce_Description": "Verify that if the In-App Training has been remotely disabled from the SA Tool after Operator navigates to Help Screen, the SA Tool displays a message on the Help screen notifying the operator that there is no content available."}, {"Function_Flow_Name": "Change operator language", "Sub_Flow_Name": "In-App Training and FAQ", "Use_Case_Name": "In-App Training and FAQs", "Test_Scnario": "Accessing In-App Training and FAQs", "Test_Sce_Description": "Verify that the operator is able to access the In-App Training and FAQs from the more options menu on the SA Tool home screen. The application should launch a lockdown browser and navigate to a web page populated with training modules and FAQs."}, {"Function_Flow_Name": "Change operator language", "Sub_Flow_Name": "In-App Training and FAQ", "Use_Case_Name": "In-App Training and FAQs", "Test_Scnario": "In-App Training and FAQ when SA Tool is Offline", "Test_Sce_Description": "Verify that when the SA Tool is offline, the operator can still access the In-App Training and FAQ. The application should launch a lockdown browser and load the last saved content on the device."}, {"Function_Flow_Name": "Change operator language", "Sub_Flow_Name": "In-App Training and FAQ", "Use_Case_Name": "In-App Training and FAQs", "Test_Scnario": "In-App Training and FAQ Update During Playback", "Test_Sce_Description": "Verify that when the SA Tool receives updated training content while the operator is playing a training, the training continues to play while the new content is downloaded to the device. The updated content should be available the next time the In-App Training and FAQ is launched."}, {"Function_Flow_Name": "Change operator language", "Sub_Flow_Name": "In-App Training and FAQ", "Use_Case_Name": "In-App Training and FAQs", "Test_Scnario": "In-App Training Not Downloaded", "Test_Sce_Description": "Verify that if the In-App Training has not been downloaded to the SA Tool, the application displays a toast message on the Inspection home screen notifying the operator that there is no content available."}, {"Function_Flow_Name": "Change operator language", "Sub_Flow_Name": "In-App Training and FAQ", "Use_Case_Name": "In-App Training and FAQs", "Test_Scnario": "In-App Training Disabled", "Test_Sce_Description": "Verify that if the In-App Training has been remotely disabled from the SA Tool after the operator navigates to the Help Screen, the application displays a message on the Help screen notifying the operator that there is no content available."}, {"Function_Flow_Name": "Change operator language", "Sub_Flow_Name": "In-App Training and FAQ", "Use_Case_Name": "In-App Training and FAQs", "Test_Scnario": "Change Operator Language on SA Tool application", "Test_Sce_Description": "Verify that the operator is able to change the language of the SA Tool application from the more options menu on the SA Tool home screen. The change should be applied in all the application screens immediately and the change should be synchronized with the operator\u2019s user account in the subsystem to reflect the language preference change."}, {"Function_Flow_Name": "Change operator language", "Sub_Flow_Name": "In-App Training and FAQ", "Use_Case_Name": "In-App Training and FAQs", "Test_Scnario": "Change Language on SA Tool application while SA Tool is Offline", "Test_Sce_Description": "Verify that when the SA Tool is offline, the operator can still change the language of the SA Tool application. The change should be applied in all the application screens immediately."}, {"Function_Flow_Name": "Change operator language", "Sub_Flow_Name": "Download Remote Lists", "Use_Case_Name": "In-App Training has not been downloaded to the SA Tool", "Test_Scnario": "Verify In-App Training and FAQ functionality when SA Tool is online", "Test_Sce_Description": "Check if the operator is able to access the In-App Training and FAQ when the SA Tool is online. The operator should be able to view the training modules and FAQs. The content should be updated and synchronized with SOTI. The operator should be able to return to the home screen after completing the training."}, {"Function_Flow_Name": "Change operator language", "Sub_Flow_Name": "Download Remote Lists", "Use_Case_Name": "In-App Training has not been downloaded to the SA Tool", "Test_Scnario": "Verify In-App Training and FAQ functionality when SA Tool is offline", "Test_Sce_Description": "Check if the operator is able to access the In-App Training and FAQ when the SA Tool is offline. The operator should be able to view the last saved content on the device. The operator should be able to return to the home screen after viewing the content."}, {"Function_Flow_Name": "Change operator language", "Sub_Flow_Name": "Download Remote Lists", "Use_Case_Name": "In-App Training has not been downloaded to the SA Tool", "Test_Scnario": "Verify In-App Training and FAQ update while content is being played", "Test_Sce_Description": "Check if the updated training content is received while the operator is viewing the training. The training being played by the operator should continue to play while the new content is downloaded to the device. The updated content should be available the next time the In-App Training and FAQ is launched."}, {"Function_Flow_Name": "Change operator language", "Sub_Flow_Name": "Download Remote Lists", "Use_Case_Name": "In-App Training has not been downloaded to the SA Tool", "Test_Scnario": "Verify functionality when In-App Training has not been downloaded to the SA Tool", "Test_Sce_Description": "Check if the SA Tool displays a toast message on the Inspection home screen notifying the operator that there is no content available when the In-App Training has not been downloaded to the SA Tool."}, {"Function_Flow_Name": "Change operator language", "Sub_Flow_Name": "Download Remote Lists", "Use_Case_Name": "In-App Training has not been downloaded to the SA Tool", "Test_Scnario": "Verify functionality when In-App Training has been remotely disabled from the SA Tool", "Test_Sce_Description": "Check if the SA Tool displays a message on the Help screen notifying the operator that there is no content available when the In-App Training has been remotely disabled from the SA Tool."}, {"Function_Flow_Name": "Change operator language", "Sub_Flow_Name": "Download Remote Lists", "Use_Case_Name": "In-App Training has not been downloaded to the SA Tool", "Test_Scnario": "Verify Change Operator Language functionality", "Test_Sce_Description": "Check if the operator is able to change the language of the SA Tool application. The change should be applied in all the application screens immediately and the change should be synchronized with the operator\u2019s user account in the subsystem to reflect the language preference change."}, {"Function_Flow_Name": "Change operator language", "Sub_Flow_Name": "Download Remote Lists", "Use_Case_Name": "In-App Training has not been downloaded to the SA Tool", "Test_Scnario": "Verify Change Language functionality when SA Tool is offline", "Test_Sce_Description": "Check if the operator is able to change the language of the SA Tool application when the SA Tool is offline. The change should be applied in all the application screens immediately."}, {"Function_Flow_Name": "Change operator language", "Sub_Flow_Name": "Download Remote Lists", "Use_Case_Name": "In-App Training has been remotely disabled from the SA Tool after Operator navigates to Help Screen", "Test_Scnario": "Verify In-App Training and FAQ functionality when SA Tool is Offline", "Test_Sce_Description": "Check if the SA Tool launches a lockdown browser and loads and displays the last saved content (homepage) on the device when the SA Tool is offline."}, {"Function_Flow_Name": "Change operator language", "Sub_Flow_Name": "Download Remote Lists", "Use_Case_Name": "In-App Training has been remotely disabled from the SA Tool after Operator navigates to Help Screen", "Test_Scnario": "Verify In-App Training and FAQ update while content is being played", "Test_Sce_Description": "Check if the SA Tool receives updated training content while the training is being played by the operator and the new content is downloaded to the device and available the next time the In-App Training and FAQ is launched."}, {"Function_Flow_Name": "Change operator language", "Sub_Flow_Name": "Download Remote Lists", "Use_Case_Name": "In-App Training has been remotely disabled from the SA Tool after Operator navigates to Help Screen", "Test_Scnario": "Verify In-App Training functionality when it has not been downloaded to the SA Tool", "Test_Sce_Description": "Check if the SA Tool displays a toast message on the Inspection home screen notifying the operator that there is no content available when the In-App Training has not been downloaded to the SA Tool."}, {"Function_Flow_Name": "Change operator language", "Sub_Flow_Name": "Download Remote Lists", "Use_Case_Name": "In-App Training has been remotely disabled from the SA Tool after Operator navigates to Help Screen", "Test_Scnario": "Verify In-App Training functionality when it has been remotely disabled from the SA Tool after Operator navigates to Help Screen", "Test_Sce_Description": "Check if the In-App Training has been remotely disabled from the SA Tool after Operator navigates to Help Screen and the appropriate error message is displayed."}, {"Function_Flow_Name": "Change operator language", "Sub_Flow_Name": "Download Remote Lists", "Use_Case_Name": "In-App Training has been remotely disabled from the SA Tool after Operator navigates to Help Screen", "Test_Scnario": "Verify the functionality of SA Tool in Out-of-Service State", "Test_Sce_Description": "Check if the SA Tool is unable to accept a Farecard for any kind of functionality and may require maintenance to restore out-of-order components when it is in \u201cOut-of-Service\u201d state."}, {"Function_Flow_Name": "Change operator language", "Sub_Flow_Name": "Download Remote Lists", "Use_Case_Name": "In-App Training has been remotely disabled from the SA Tool after Operator navigates to Help Screen", "Test_Scnario": "Verify the functionality of SA Tool in Standby State", "Test_Sce_Description": "Check if the SA Tool switches into a Standby state where the screen will turn off after the SA Tool remains inactive for a configurable period of time or the operator presses the physical power button."}, {"Function_Flow_Name": "Change operator language", "Sub_Flow_Name": "Download Remote Lists", "Use_Case_Name": "In-App Training has been remotely disabled from the SA Tool after Operator navigates to Help Screen", "Test_Scnario": "Verify the functionality of SA Tool when the application is running in the background", "Test_Sce_Description": "Check if the SA Tool disconnects from all the peripherals i.e. the card reader, PIN pad and the printer to conserve battery life when the SA Tool PDS application is running but is not in the foreground."}, {"Function_Flow_Name": "Change operator language", "Sub_Flow_Name": "Download Remote Lists", "Use_Case_Name": "In-App Training has been remotely disabled from the SA Tool after Operator navigates to Help Screen", "Test_Scnario": "Verify the functionality of SA Tool in Revenue Mode", "Test_Sce_Description": "Check if the SA Tool operator can interact with customers, perform inspection, fare payments, sales, refunds/reversals, farecard queries, and other customer service gestures in the Revenue Mode."}, {"Function_Flow_Name": "Change operator language", "Sub_Flow_Name": "Download Remote Lists", "Use_Case_Name": "In-App Training has been remotely disabled from the SA Tool after Operator navigates to Help Screen", "Test_Scnario": "Verify the functionality of SA Tool in Training Mode", "Test_Sce_Description": "Check if the SA Tool operator can mimic all functionality available within Sales Mode without accepting payment, and only sending non-revenue transactions in the Training Mode."}, {"Function_Flow_Name": "Change operator language", "Sub_Flow_Name": "Download Remote Lists", "Use_Case_Name": "In-App Training has been remotely disabled from the SA Tool after Operator navigates to Help Screen", "Test_Scnario": "Verify the functionality of SA Tool for different users", "Test_Sce_Description": "Check if the SA Tool provides different functionalities for different users such as SA Tool Operators, SA Tool Operators - 3rd Party, Distance based Transitrvisors, Maintenance, Training."}, {"Function_Flow_Name": "Change operator language", "Sub_Flow_Name": "Download Remote Lists", "Use_Case_Name": "Change Language on SA Tool application while SA Tool is Offline", "Test_Scnario": "Change Language on SA Tool application while SA Tool is Offline", "Test_Sce_Description": "Verify that the language of the SA Tool application can be changed while the tool is offline. The language preference should be stored in store-and-forward memory and updated in the Subsystem when the network connection is re-established."}, {"Function_Flow_Name": "Change operator language", "Sub_Flow_Name": "Download Remote Lists", "Use_Case_Name": "Change Language on SA Tool application while SA Tool is Offline", "Test_Scnario": "Verify language toggle functionality", "Test_Sce_Description": "Check if the operator can slide the toggle switch between English and French and the application language changes accordingly."}, {"Function_Flow_Name": "Change operator language", "Sub_Flow_Name": "Download Remote Lists", "Use_Case_Name": "Change Language on SA Tool application while SA Tool is Offline", "Test_Scnario": "Verify language change synchronization", "Test_Sce_Description": "Ensure that when an operator changes the application language, the change is applied in all the application screens immediately and the change is synchronized with the operator\u2019s user account in the subsystem to reflect the language preference change."}, {"Function_Flow_Name": "Change operator language", "Sub_Flow_Name": "Download Remote Lists", "Use_Case_Name": "Change Language on SA Tool application while SA Tool is Offline", "Test_Scnario": "Verify language change in offline mode", "Test_Sce_Description": "Check if the language change made in offline mode is stored in store-and-forward memory and is updated in the Subsystem when the network connection is re-established."}, {"Function_Flow_Name": "Change operator language", "Sub_Flow_Name": "Download Remote Lists", "Use_Case_Name": "Change Language on SA Tool application while SA Tool is Offline", "Test_Scnario": "Verify language change for specific screens", "Test_Sce_Description": "Ensure that the language toggle located in other screens will only change the language of that screen and not affect the operator language."}, {"Function_Flow_Name": "Change operator language", "Sub_Flow_Name": "Download Remote Lists", "Use_Case_Name": "Change Language on SA Tool application while SA Tool is Offline", "Test_Scnario": "Verify language change does not affect certain fields", "Test_Sce_Description": "Check that Line, Trip and Station fields from the Inspection Parameters screens will have short names coming from topology and will not have French equivalents."}, {"Function_Flow_Name": "Change operator language", "Sub_Flow_Name": "Download Remote Lists", "Use_Case_Name": "Change Language on SA Tool application while SA Tool is Offline", "Test_Scnario": "Verify language change after sign out", "Test_Sce_Description": "Ensure that the language preference is reset to default after the operator signs out and a new operator signs in."}, {"Function_Flow_Name": "Change operator language", "Sub_Flow_Name": "Download Remote Lists", "Use_Case_Name": "Change Language on SA Tool application while SA Tool is Offline", "Test_Scnario": "Verify language change after network reconnection", "Test_Sce_Description": "Check if the language preference change made in offline mode is updated in the Subsystem after the network connection is re-established."}]