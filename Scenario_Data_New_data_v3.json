[{"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Virtual Card", "Use_Case_Name": "Accepting Fare Payment from a Virtual Card using ePurse Balance - Customer\u2019s Virtual Card is Unreadable", "Test_Scnario": "Testing the functionality of the SA Tool when the Virtual Card is unreadable", "Test_Sce_Description": "This scenario is to test the functionality of the SA Tool when it detects the Virtual Card but is unable to read it. The customer will tap on the NFC reader again and if the tap is unsuccessful, the SA Tool application should indicate to the operator that the Virtual Card is unreadable.", "Expected_Results": "The SA Tool application should correctly indicate to the operator that the Virtual Card is unreadable when it fails to read the Virtual Card."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Virtual Card", "Use_Case_Name": "Accepting Fare Payment from a Virtual Card using ePurse Balance - Customer\u2019s Virtual Card is Unreadable", "Test_Scnario": "Testing the functionality of the SA Tool when the customer has a concession other than Adult, Child, or Discreet Concessions on their Virtual Card", "Test_Sce_Description": "This scenario is to test the functionality of the SA Tool when the customer's Virtual Card has a Valid Non-Adult, Non-Child, non-discreet concessions. The SA Tool should show the successful fare payment screen for non-adult concession, and play the successful fare payment audio tone for a concession other than Adult, Child, or Discreet Concessions.", "Expected_Results": "The SA Tool should correctly display the successful fare payment screen for non-adult concession and play the successful fare payment audio tone for a concession other than Adult, Child, or Discreet Concessions."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Virtual Card", "Use_Case_Name": "Accepting Fare Payment from a Virtual Card using ePurse Balance - Customer\u2019s Virtual Card is Unreadable", "Test_Scnario": "Testing the functionality of the SA Tool when the customer's ePurse balance is less than the fare amount", "Test_Sce_Description": "This scenario is to test the functionality of the SA Tool when the customer's ePurse balance is less than the fare amount. The device should send the tap to ATS for processing. ATS should check the online hotlist and complete the fare processing. ATS should remove the fare from the Virtual Card e-Purse and put the card into overdraft.", "Expected_Results": "The device should correctly send the tap to ATS for processing. ATS should correctly check the online hotlist and complete the fare processing. ATS should correctly remove the fare from the Virtual Card e-Purse and put the card into overdraft."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Virtual Card", "Use_Case_Name": "Accepting Fare Payment from a Virtual Card using ePurse Balance - Customer\u2019s Virtual Card is Unreadable", "Test_Scnario": "Testing the functionality of the SA Tool when the transaction is within Intra-SP Transfer window", "Test_Sce_Description": "This scenario is to test the functionality of the SA Tool when the transaction is within Intra-SP Transfer window. ATS should read that the Virtual Card contains a valid intra-agency transfer product and deduct $0 from the Virtual Card E-Purse.", "Expected_Results": "ATS should correctly read that the Virtual Card contains a valid intra-agency transfer product and deduct $0 from the Virtual Card E-Purse."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Virtual Card", "Use_Case_Name": "Accepting Fare Payment from a Virtual Card using ePurse Balance - Customer\u2019s Virtual Card is Unreadable", "Test_Scnario": "Testing the functionality of the SA Tool when the transaction is within Inter-SP Transfer window", "Test_Sce_Description": "This scenario is to test the functionality of the SA Tool when the transaction is within Inter-SP Transfer window. ATS should read that the Virtual Card contains a valid inter-agency transfer product and deduct $0 from the Virtual Card E-Purse.", "Expected_Results": "ATS should correctly read that the Virtual Card contains a valid inter-agency transfer product and deduct $0 from the Virtual Card E-Purse."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Virtual Card", "Use_Case_Name": "Accepting Fare Payment from a Virtual Card using ePurse Balance - Customer\u2019s Virtual Card is Unreadable", "Test_Scnario": "Testing the functionality of the SA Tool when the customer requests Audio Messages", "Test_Sce_Description": "This scenario is to test the functionality of the SA Tool when the customer requests Audio Messages. The operator should enable audio mode and change the volume level using the physical device buttons at the customer\u2019s discretion.", "Expected_Results": "The operator should correctly enable audio mode and change the volume level using the physical device buttons at the customer\u2019s discretion."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Virtual Card", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance - Customer has a Concession other than Adult, Child, or Discreet Concessions on their Virtual Card", "Test_Scnario": "Validating the deduction of Non-Adult, Non-Child, Non-discreet Concessions from ePurse balance", "Test_Sce_Description": "This scenario is to test if the SA Tool correctly deducts the Non-Adult, Non-Child, Non-discreet Concessions from the ePurse balance when a fare payment is made.", "Expected_Results": "The SA Tool should correctly deduct the Non-Adult, Non-Child, Non-discreet Concessions from the ePurse balance."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Virtual Card", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance - Customer has a Concession other than Adult, Child, or Discreet Concessions on their Virtual Card", "Test_Scnario": "Validating the successful fare payment audio tone for non-adult concession", "Test_Sce_Description": "This scenario is to test if the SA Tool plays the successful fare payment audio tone for a concession other than Adult, Child, or Discreet Concessions.", "Expected_Results": "The SA Tool should play the successful fare payment audio tone for a concession other than Adult, Child, or Discreet Concessions."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Virtual Card", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance - Customer has a Concession other than Adult, Child, or Discreet Concessions on their Virtual Card", "Test_Scnario": "Validating the overdraft functionality when ePurse balance is less than the fare amount", "Test_Sce_Description": "This scenario is to test if the SA Tool correctly puts the Farecard into overdraft when the ePurse balance is less than the fare amount.", "Expected_Results": "The SA Tool should correctly put the Farecard into overdraft when the ePurse balance is less than the fare amount."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Virtual Card", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance - Customer has a Concession other than Adult, Child, or Discreet Concessions on their Virtual Card", "Test_Scnario": "Validating the computation of free transfer when a valid transfer product is found", "Test_Sce_Description": "This scenario is to test if the SA Tool correctly computes the free transfer when a valid transfer product is found.", "Expected_Results": "The SA Tool should correctly compute the free transfer when a valid transfer product is found."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Virtual Card", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance - Customer has a Concession other than Adult, Child, or Discreet Concessions on their Virtual Card", "Test_Scnario": "Validating the fare computation based on the transfer product and the transfer agreement between the transit agencies", "Test_Sce_Description": "This scenario is to test if the SA Tool correctly computes the fare based on the transfer product on the Farecard and the transfer agreement between the transit agencies.", "Expected_Results": "The SA Tool should correctly compute the fare based on the transfer product on the Farecard and the transfer agreement between the transit agencies."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Virtual Card", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance - Customer has a Concession other than Adult, Child, or Discreet Concessions on their Virtual Card", "Test_Scnario": "Validating the Autoload functionality when the ePurse balance meets or drops below Autoload Threshold", "Test_Sce_Description": "This scenario is to test if the SA Tool correctly adds the Autoload amount to the ePurse balance when the ePurse balance meets or drops below Autoload Threshold.", "Expected_Results": "The SA Tool should correctly add the Autoload amount to the ePurse balance when the ePurse balance meets or drops below Autoload Threshold."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Virtual Card", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance - Customer has a Concession other than Adult, Child, or Discreet Concessions on their Virtual Card", "Test_Scnario": "Validating the update of Farecard when it is on the Action or Load Value List", "Test_Sce_Description": "This scenario is to test if the SA Tool correctly updates the Farecard when it is on the Action or Load Value List.", "Expected_Results": "The SA Tool should correctly update the Farecard when it is on the Action or Load Value List."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Virtual Card", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance - Customer has a Concession other than Adult, Child, or Discreet Concessions on their Virtual Card", "Test_Scnario": "Validating the unreadable Virtual Card scenario", "Test_Sce_Description": "This scenario is to test if the SA Tool correctly indicates to the operator that the Virtual Card is unreadable when it fails to read it correctly.", "Expected_Results": "The SA Tool should correctly indicate to the operator that the Virtual Card is unreadable when it fails to read it correctly."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Virtual Card", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance - Customer has a Concession other than Adult, Child, or Discreet Concessions on their Virtual Card", "Test_Scnario": "Validating the fare deduction from Virtual Card e-Purse when it is in overdraft", "Test_Sce_Description": "This scenario is to test if the ATS correctly removes the fare from the Virtual Card e-Purse and puts the card into overdraft.", "Expected_Results": "The ATS should correctly remove the fare from the Virtual Card e-Purse and put the card into overdraft."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Virtual Card", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance - Customer has a Concession other than Adult, Child, or Discreet Concessions on their Virtual Card", "Test_Scnario": "Validating the conferment of right to travel to the Cardholder by updating the Virtual Card", "Test_Sce_Description": "This scenario is to test if the right to travel is conferred to the Cardholder by updating the Virtual Card and providing the appropriate feedback to the Cardholder of a successful transaction.", "Expected_Results": "The right to travel should be conferred to the Cardholder by updating the Virtual Card and providing the appropriate feedback to the Cardholder of a successful transaction."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Virtual Card", "Use_Case_Name": "Accepting Fare Payment from a Virtual Card using ePurse Balance - Customer Has a Registered Virtual Card with Positive ePurse Balance Less Than the Fare Amount", "Test_Scnario": "Successful Fare Payment with Registered Virtual Card having ePurse Balance Less Than the Fare Amount", "Test_Sce_Description": "This scenario tests the functionality of the SA Tool when a customer attempts to make a fare payment with a registered virtual card that has a positive ePurse balance less than the fare amount.", "Expected_Results": "The ATS should check the online hotlist, complete the fare processing, remove the fare from the Virtual Card e-Purse and put the card into overdraft. The right to travel should be conferred to the Cardholder by updating the Virtual Card accordingly. The device should provide the appropriate feedback to the Cardholder of a successful transaction."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Virtual Card", "Use_Case_Name": "Accepting Fare Payment from a Virtual Card using ePurse Balance - Customer Has a Registered Virtual Card with Positive ePurse Balance Less Than the Fare Amount", "Test_Scnario": "Unsuccessful Fare Payment with Unreadable Virtual Card", "Test_Sce_Description": "This scenario tests the functionality of the SA Tool when a customer attempts to make a fare payment with an unreadable virtual card.", "Expected_Results": "The SA Tool NFC reader should detect the Virtual Card but fail to read it. The SA Tool application should indicate to the operator that the Virtual Card is unreadable. If the customer taps on the NFC reader again and the tap is unsuccessful, the SA Tool application should indicate to the operator that the CLIENT (Virtual) Card is unreadable."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Virtual Card", "Use_Case_Name": "Accepting Fare Payment from a Virtual Card using ePurse Balance - Customer Has a Registered Virtual Card with Positive ePurse Balance Less Than the Fare Amount", "Test_Scnario": "Successful Fare Payment with Virtual Card having a Valid Non-Adult, Non-Child, non-discreet concessions", "Test_Sce_Description": "This scenario tests the functionality of the SA Tool when a customer attempts to make a fare payment with a virtual card that has a valid non-adult, non-child, non-discreet concession.", "Expected_Results": "The SA Tool should show the successful fare payment screen for non-adult concession, play the successful fare payment audio tone for a concession other than Adult, Child, or Discreet Concessions."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Virtual Card", "Use_Case_Name": "Accepting Fare Payment from a Virtual Card using ePurse Balance - Customer Has a Registered Virtual Card with Positive ePurse Balance Less Than the Fare Amount", "Test_Scnario": "Successful Fare Payment within Intra-SP Transfer window", "Test_Sce_Description": "This scenario tests the functionality of the SA Tool when a customer attempts to make a fare payment within the Intra-SP Transfer window with a virtual card that has a valid transfer product.", "Expected_Results": "The ATS should read that the Virtual Card contains a valid intra-agency transfer product and deduct $0 from the Virtual Card E-Purse. The right to travel should be conferred to the Cardholder by updating the Virtual Card, the device should provide the appropriate feedback to the Cardholder of a successful transaction with a transfer."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Virtual Card", "Use_Case_Name": "Accepting Fare Payment from a Virtual Card using ePurse Balance - Customer Has a Registered Virtual Card with Positive ePurse Balance Less Than the Fare Amount", "Test_Scnario": "Successful Fare Payment within Inter-SP Transfer window", "Test_Sce_Description": "This scenario tests the functionality of the SA Tool when a customer attempts to make a fare payment within the Inter-SP Transfer window with a virtual card that has a valid transfer product from other service provider.", "Expected_Results": "The ATS should read that the Virtual Card contains a valid inter-agency transfer product and deduct $0 from the Virtual Card E-Purse. The right to travel should be conferred to the Cardholder by updating the Virtual Card; the device should provide the appropriate feedback to the Cardholder of a successful transaction with a transfer."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Virtual Card", "Use_Case_Name": "Accepting Fare Payment from a Virtual Card using ePurse Balance - Transaction is within Intra-SP Transfer window", "Test_Scnario": "Successful Fare Payment from a Virtual Card using ePurse Balance within Intra-SP Transfer window", "Test_Sce_Description": "This scenario tests the successful fare payment from a virtual card using ePurse balance within the Intra-SP transfer window. The virtual card has a valid transfer product and the ATS reads that the virtual card contains a valid intra-agency transfer product and deducts $0 from the virtual card E-Purse.", "Expected_Results": "The right to travel is conferred to the cardholder by updating the virtual card. The device provides the appropriate feedback to the cardholder of a successful transaction with a transfer."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Virtual Card", "Use_Case_Name": "Accepting Fare Payment from a Virtual Card using ePurse Balance - Transaction is within Intra-SP Transfer window", "Test_Scnario": "Unsuccessful Fare Payment from a Virtual Card due to insufficient ePurse Balance", "Test_Sce_Description": "This scenario tests the unsuccessful fare payment from a virtual card due to insufficient ePurse balance. The customer's ePurse balance is less than the fare amount.", "Expected_Results": "The device sends the tap to ATS for processing. ATS checks the online hotlist and completes the fare processing. ATS removes the fare from the Virtual Card e-Purse and puts the card into overdraft. The right to travel is not conferred to the Cardholder."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Virtual Card", "Use_Case_Name": "Accepting Fare Payment from a Virtual Card using ePurse Balance - Transaction is within Intra-SP Transfer window", "Test_Scnario": "Successful Fare Payment from a Virtual Card using ePurse Balance with Non-Adult, Non-Child, non-discreet concessions", "Test_Sce_Description": "This scenario tests the successful fare payment from a virtual card using ePurse balance with non-adult, non-child, non-discreet concessions. The customer's virtual card has a valid non-adult, non-child, non-discreet concession.", "Expected_Results": "The SA Tool shows the successful fare payment screen for non-adult concession, plays the successful fare payment audio tone for a concession other than Adult, Child, or Discreet Concessions."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Virtual Card", "Use_Case_Name": "Accepting Fare Payment from a Virtual Card using ePurse Balance - Transaction is within Intra-SP Transfer window", "Test_Scnario": "Unreadable Virtual Card during Fare Payment", "Test_Sce_Description": "This scenario tests the case where the virtual card is unreadable during fare payment. The SA Tool NFC reader detects the virtual card but is unable to read it.", "Expected_Results": "The SA Tool application will indicate to the operator that the virtual card is unreadable. The customer will tap on the NFC reader again. If the tap is unsuccessful, the SA Tool application will indicate to the operator that the CLIENT (Virtual) Card is unreadable."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Virtual Card", "Use_Case_Name": "Accepting Fare Payment from a Virtual Card using ePurse Balance - Transaction is within Intra-SP Transfer window", "Test_Scnario": "Successful Fare Payment from a Virtual Card using ePurse Balance within Inter-SP Transfer window", "Test_Sce_Description": "This scenario tests the successful fare payment from a virtual card using ePurse balance within the Inter-SP transfer window. The virtual card has a valid transfer product from other service provider and a transfer agreement between the service providers has been established.", "Expected_Results": "ATS will read that the Virtual Card contains a valid inter-agency transfer product and deduct $0 from the Virtual Card E-Purse. The right to travel is conferred to the Cardholder by updating the Virtual Card; the device provides the appropriate feedback to the Cardholder of a successful transaction with a transfer."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Virtual Card", "Use_Case_Name": "Accepting Fare Payment from a Virtual Card using ePurse Balance - Transaction is within Inter-SP Transfer window", "Test_Scnario": "Testing the functionality of the SA Tool when the Virtual Card is unreadable", "Test_Sce_Description": "This scenario tests the functionality of the SA Tool when the Virtual Card is unreadable. The customer will tap on the NFC reader again. If the tap is successful, steps 4 \u2013 7 will be conducted. If the tap is unsuccessful, the SA Tool application will indicate to the operator that the CLIENT (Virtual) Card is unreadable.", "Expected_Results": "The SA Tool application should correctly indicate to the operator that the Virtual Card is unreadable when it fails to read it."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Virtual Card", "Use_Case_Name": "Accepting Fare Payment from a Virtual Card using ePurse Balance - Transaction is within Inter-SP Transfer window", "Test_Scnario": "Testing the functionality of the SA Tool when the customer has a concession other than Adult, Child, or Discreet Concessions on their Virtual Card", "Test_Sce_Description": "This scenario tests the functionality of the SA Tool when the customer has a concession other than Adult, Child, or Discreet Concessions on their Virtual Card. The SA Tool should show the successful fare payment screen for non-adult concession, plays the successful fare payment audio tone for a concession other than Adult, Child, or Discreet Concessions.", "Expected_Results": "The SA Tool should correctly display the successful fare payment screen for non-adult concession and play the successful fare payment audio tone for a concession other than Adult, Child, or Discreet Concessions."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Virtual Card", "Use_Case_Name": "Accepting Fare Payment from a Virtual Card using ePurse Balance - Transaction is within Inter-SP Transfer window", "Test_Scnario": "Testing the functionality of the SA Tool when the customer's ePurse balance is less than the fare amount", "Test_Sce_Description": "This scenario tests the functionality of the SA Tool when the customer's ePurse balance is less than the fare amount. The device sends the tap to ATS for processing. ATS checks the online hotlist and completes the fare processing. ATS removes the fare from the Virtual Card e-Purse and puts the card into overdraft.", "Expected_Results": "The SA Tool should correctly process the fare payment when the customer's ePurse balance is less than the fare amount and put the card into overdraft."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Virtual Card", "Use_Case_Name": "Accepting Fare Payment from a Virtual Card using ePurse Balance - Transaction is within Inter-SP Transfer window", "Test_Scnario": "Testing the functionality of the SA Tool when the transaction is within Intra-SP Transfer window", "Test_Sce_Description": "This scenario tests the functionality of the SA Tool when the transaction is within Intra-SP Transfer window. ATS will read that the Virtual Card contains a valid intra-agency transfer product and deduct $0 from the Virtual Card E-Purse.", "Expected_Results": "The SA Tool should correctly process the fare payment when the transaction is within Intra-SP Transfer window and deduct $0 from the Virtual Card E-Purse."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Virtual Card", "Use_Case_Name": "Accepting Fare Payment from a Virtual Card using ePurse Balance - Transaction is within Inter-SP Transfer window", "Test_Scnario": "Testing the functionality of the SA Tool when the transaction is within Inter-SP Transfer window", "Test_Sce_Description": "This scenario tests the functionality of the SA Tool when the transaction is within Inter-SP Transfer window. ATS will read that the Virtual Card contains a valid inter-agency transfer product and deduct $0 from the Virtual Card E-Purse.", "Expected_Results": "The SA Tool should correctly process the fare payment when the transaction is within Inter-SP Transfer window and deduct $0 from the Virtual Card E-Purse."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Virtual Card", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance \u2013 Customer requests Audio Messages", "Test_Scnario": "Verify the functionality of Farecard on the Action or Load Value List", "Test_Sce_Description": "This scenario is to test if the SA Tool correctly verifies that the Farecard is on the Action or Load Value List and updates the Farecard accordingly.", "Expected_Results": "The SA Tool should successfully verify the Farecard's presence on the Action or Load Value List and update it as per the list."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Virtual Card", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance \u2013 Customer requests Audio Messages", "Test_Scnario": "Verify the functionality of audio messages for fare payment", "Test_Sce_Description": "This scenario is to test if the SA Tool correctly plays the audio messages for fare payment when the customer requests it.", "Expected_Results": "The SA Tool should successfully play the audio messages for fare payment in the default language of the customer's Farecard."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Virtual Card", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance \u2013 Customer requests Audio Messages", "Test_Scnario": "Verify the functionality when Daily Cap is reached on SA Tool", "Test_Sce_Description": "This scenario is to test if the SA Tool correctly deducts no fare when the Daily Cap is reached.", "Expected_Results": "The SA Tool should successfully deduct no fare when the Daily Cap is reached."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Virtual Card", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance \u2013 Customer requests Audio Messages", "Test_Scnario": "Verify the functionality of Premium Service or Special Route/Location on SA Tool", "Test_Sce_Description": "This scenario is to test if the SA Tool correctly computes and deducts the Premium or Special Event fare when a tap on a premium service or special route/location is made.", "Expected_Results": "The SA Tool should successfully compute and deduct the Premium or Special Event fare."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Virtual Card", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance \u2013 Customer requests Audio Messages", "Test_Scnario": "Verify the functionality of Fare Upgrade on SA Tool", "Test_Sce_Description": "This scenario is to test if the SA Tool correctly computes and deducts the Upgrade fare when a tap on a premium service or special event route/location is made after previously riding on a regular service route.", "Expected_Results": "The SA Tool should successfully compute and deduct the Upgrade fare."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Virtual Card", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance \u2013 Customer requests Audio Messages", "Test_Scnario": "Verify the functionality of Payment during Peak hours after reaching Off Peak Daily Cap on SA Tool", "Test_Sce_Description": "This scenario is to test if the SA Tool correctly processes a fare payment when a tap on peak hours is made after previously reaching off peak daily cap.", "Expected_Results": "The SA Tool should successfully process the fare payment."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Virtual Card", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance \u2013 Customer requests Audio Messages", "Test_Scnario": "Verify the functionality of Period Pass \u2013 Service Class Route/Location which is higher fare value than the Period Pass Service Class fare on SA Tool", "Test_Sce_Description": "This scenario is to test if the SA Tool correctly computes and deducts the Upgrade fare when the Farecard has a valid Period Pass where the Service class fare value is lower than the current route/location Service Class fare value.", "Expected_Results": "The SA Tool should successfully compute and deduct the Upgrade fare."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Virtual Card", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance \u2013 Customer requests Audio Messages", "Test_Scnario": "Verify the functionality of Period Pass \u2013 Service Class Route/Location which is lower fare value than the Period Pass Service Class fare on SA Tool", "Test_Sce_Description": "This scenario is to test if the SA Tool correctly identifies that the customer\u2019s Period Pass is valid and accepts the period pass fare payment when the Farecard has a valid Period Pass where the Service class fare value is greater than the current route/location Service Class fare value.", "Expected_Results": "The SA Tool should successfully identify the validity of the customer\u2019s Period Pass and accept the period pass fare payment."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Virtual Card", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance \u2013 Customer requests Audio Messages", "Test_Scnario": "Verify the functionality of Limited Period Pass on SA Tool", "Test_Sce_Description": "This scenario is to test if the SA Tool correctly processes the fare payment when the Farecard has a valid Limited Period Pass and the current time is within the limits of the product.", "Expected_Results": "The SA Tool should successfully process the fare payment."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Virtual Card", "Use_Case_Name": "Accepting Fare Payment from a Farecard using ePurse Balance \u2013 Customer requests Audio Messages", "Test_Scnario": "Verify the functionality of Limited Period Pass outside of valid time with sufficient e-Purse balance on SA Tool", "Test_Sce_Description": "This scenario is to test if the SA Tool correctly computes the value to be deducted from the e-Purse and deducts the fare when the Farecard has a valid Limited Period Pass and the current time is outside the time limits of the product, but the farecard has sufficient e-Purse balance to cover the transaction.", "Expected_Results": "The SA Tool should successfully compute the value to be deducted from the e-Purse and deduct the fare."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Virtual Card", "Use_Case_Name": "Accepting Fare Payment on an Online SA Tool from a Virtual Card using Period Pass \u2013 Service Class Route/Location which is higher fare value than the Period Pass Service Class fare on SA Tool", "Test_Scnario": "Validating the functionality of the SA Tool when the fare payment is made on a higher fare value route/location", "Test_Sce_Description": "This scenario is to test the functionality of the SA Tool when a customer with a valid Period Pass makes a fare payment on a route/location with a higher fare value. The SA Tool should compute and deduct the Upgrade fare.", "Expected_Results": "The SA Tool should successfully compute and deduct the Upgrade fare from the customer's Period Pass. The SA Tool should set the POP Print Flag to 0 to ensure accurate display of the transfer print status if the farecard is queried."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Virtual Card", "Use_Case_Name": "Accepting Fare Payment on an Online SA Tool from a Virtual Card using Period Pass \u2013 Service Class Route/Location which is higher fare value than the Period Pass Service Class fare on SA Tool", "Test_Scnario": "Testing the performance of the SA Tool when processing fare payments on a higher fare value route/location", "Test_Sce_Description": "This scenario is to test the performance of the SA Tool when processing fare payments on a route/location with a higher fare value. The SA Tool should be able to handle multiple fare payment transactions simultaneously without any performance degradation.", "Expected_Results": "The SA Tool should be able to handle multiple fare payment transactions simultaneously without any performance degradation. There should be no delay or lag in the processing of fare payments."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Virtual Card", "Use_Case_Name": "Accepting Fare Payment on an Online SA Tool from a Virtual Card using Period Pass \u2013 Service Class Route/Location which is higher fare value than the Period Pass Service Class fare on SA Tool", "Test_Scnario": "Validating the security of the SA Tool when processing fare payments on a higher fare value route/location", "Test_Sce_Description": "This scenario is to test the security of the SA Tool when processing fare payments on a route/location with a higher fare value. The SA Tool should securely process the fare payment transactions without any data breaches or security vulnerabilities.", "Expected_Results": "The SA Tool should securely process the fare payment transactions without any data breaches or security vulnerabilities. There should be no unauthorized access or manipulation of the fare payment transactions."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Virtual Card", "Use_Case_Name": "Accepting Fare Payment on an Online SA Tool from a Virtual Card using Period Pass \u2013 Service Class Route/Location which is higher fare value than the Period Pass Service Class fare on SA Tool", "Test_Scnario": "Testing the exception flow of the SA Tool when the farecard has an expired period pass", "Test_Sce_Description": "This scenario is to test the exception flow of the SA Tool when the customer's farecard has an expired period pass and the ePurse balance is less than the fare amount. The SA Tool should display a declined message to the customer and the transaction should not be conducted.", "Expected_Results": "The SA Tool should display a declined message to the customer and the transaction should not be conducted. The SA Tool should play the declined audio tone and return to the Tap Card screen after a configurable timeout."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Virtual Card", "Use_Case_Name": "Accepting Fare Payment on an Online SA Tool from a Virtual Card using Period Pass \u2013 Service Class Route/Location which is higher fare value than the Period Pass Service Class fare on SA Tool", "Test_Scnario": "Testing the alternate flow of the SA Tool when the farecard is on the Action or Load Value list", "Test_Sce_Description": "This scenario is to test the alternate flow of the SA Tool when the customer's farecard is on the Action or Load Value list. The SA Tool should verify that the Farecard is on the Action or Load Value List and update the Farecard accordingly.", "Expected_Results": "The SA Tool should verify that the Farecard is on the Action or Load Value List and update the Farecard accordingly. The fare payment transaction should be processed successfully."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Virtual Card", "Use_Case_Name": "Accepting Fare Payment on an Online SA Tool from a Virtual Card using Period Pass \u2013 Service Class Route/Location which is lower fare value than the Period Pass Service Class fare on SA Tool", "Test_Scnario": "Accepting Fare Payment from a Farecard using Period Pass \u2013 Service Class Route/Location which is lower fare value than the Period Pass Service Class fare on SA Tool", "Test_Sce_Description": "This scenario tests the functionality of the SA Tool when a farecard with a valid period pass is used for payment. The service class fare value of the period pass is greater than the current route/location service class fare value.", "Expected_Results": "The SA Tool should identify that the customer\u2019s period pass is valid and accept the period pass fare payment."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Virtual Card", "Use_Case_Name": "Accepting Fare Payment on an Online SA Tool from a Virtual Card using Period Pass \u2013 Service Class Route/Location which is lower fare value than the Period Pass Service Class fare on SA Tool", "Test_Scnario": "Accepting Fare Payment from a Farecard using Period Pass \u2013 Limited Period Pass", "Test_Sce_Description": "This scenario tests the functionality of the SA Tool when a farecard with a valid limited period pass is used for payment and the current time is within the limits of the product.", "Expected_Results": "The SA Tool should identify that the customer\u2019s limited period pass is valid and accept the fare payment."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Virtual Card", "Use_Case_Name": "Accepting Fare Payment on an Online SA Tool from a Virtual Card using Period Pass \u2013 Service Class Route/Location which is lower fare value than the Period Pass Service Class fare on SA Tool", "Test_Scnario": "Accepting Fare Payment from a Farecard using Period Pass \u2013 Limited Period Pass outside of valid time with sufficient e-Purse balance", "Test_Sce_Description": "This scenario tests the functionality of the SA Tool when a farecard with a valid limited period pass is used for payment but the current time is outside the time limits of the product. However, the farecard has sufficient e-Purse balance to cover the transaction.", "Expected_Results": "The SA Tool should detect that the limited period pass is not valid at the current time, compute the value to be deducted from the e-Purse, and deduct the fare."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Virtual Card", "Use_Case_Name": "Accepting Fare Payment on an Online SA Tool from a Virtual Card using Period Pass \u2013 Service Class Route/Location which is lower fare value than the Period Pass Service Class fare on SA Tool", "Test_Scnario": "Accepting Fare Payment from a Farecard using Period Pass - Customer has a Valid Child Concession on their Farecard", "Test_Sce_Description": "This scenario tests the functionality of the SA Tool when a customer\u2019s farecard with a valid child concession is used for payment.", "Expected_Results": "The SA Tool should display the successful child transit pass fare payment screen and play the successful fare payment audio tone for child concession."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Virtual Card", "Use_Case_Name": "Accepting Fare Payment on an Online SA Tool from a Virtual Card using Period Pass \u2013 Service Class Route/Location which is lower fare value than the Period Pass Service Class fare on SA Tool", "Test_Scnario": "Accepting Fare Payment from a Farecard using Period Pass \u2013 Fare Payment Resulting from Failed Inspection", "Test_Sce_Description": "This scenario tests the functionality of the SA Tool when the operator inspects a customer\u2019s farecard and determines that they have not paid a fare.", "Expected_Results": "The SA Tool should record both the fare payment and inspection transactions and return to the Tap Card screen. A toast notification should be displayed of the corresponding inspection action."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Virtual Card", "Use_Case_Name": "Accepting Fare Payment on an Online SA Tool from a Virtual Card using Period Pass \u2013 Service Class Route/Location which is lower fare value than the Period Pass Service Class fare on SA Tool", "Test_Scnario": "Accepting Fare Payment from a Farecard using Period Pass - Customer has an Anonymous Farecard with an Expired Period Pass and ePurse Balance Less than the Fare Amount", "Test_Sce_Description": "This scenario tests the functionality of the SA Tool when a customer has an anonymous farecard with an expired period pass and ePurse balance less than the fare amount.", "Expected_Results": "The SA Tool should detect that the card is anonymous and the ePurse balance is less than the fare amount. It should display a declined message to the customer and not conduct the transaction."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Virtual Card", "Use_Case_Name": "Accepting Fare Payment on an Online SA Tool from a Virtual Card using Period Pass \u2013 Service Class Route/Location which is lower fare value than the Period Pass Service Class fare on SA Tool", "Test_Scnario": "Accepting Fare Payment from a Farecard using Period Pass - Customer\u2019s Farecard is Blocked", "Test_Sce_Description": "This scenario tests the functionality of the SA Tool when a customer\u2019s farecard is blocked.", "Expected_Results": "The SA Tool should detect that the farecard is blocked, display a declined message to the customer, and not conduct the transaction."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Virtual Card", "Use_Case_Name": "Accepting Fare Payment on an Online SA Tool from a Virtual Card using Period Pass \u2013 Service Class Route/Location which is lower fare value than the Period Pass Service Class fare on SA Tool", "Test_Scnario": "Accepting Fare Payment from a Farecard using Period Pass - Customer\u2019s Farecard is on the Hotlist", "Test_Sce_Description": "This scenario tests the functionality of the SA Tool when a customer\u2019s farecard is on the Action or Load Value list.", "Expected_Results": "The SA Tool should verify that the farecard is on the Action or Load Value List and update the farecard accordingly."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Virtual Card", "Use_Case_Name": "Accepting Fare Payment on an Online SA Tool from a Virtual Card using Period Pass \u2013 Service Class Route/Location which is lower fare value than the Period Pass Service Class fare on SA Tool", "Test_Scnario": "Accepting Fare Payment from a Farecard using Period Pass \u2013 Customer requests Audio Messages", "Test_Sce_Description": "This scenario tests the functionality of the SA Tool when a customer asks to pay for the trip with their farecard and requests audio messages for the fare payment.", "Expected_Results": "The SA Tool should enable audio mode, display the fare payment screen to the operator and customer for the duration of the audio message, and play the corresponding audio message to the customer in the default language of their farecard."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Virtual Card", "Use_Case_Name": "Accepting Fare Payment on an Online SA Tool from a Virtual Card using Period Pass \u2013 Service Class Route/Location which is lower fare value than the Period Pass Service Class fare on SA Tool", "Test_Scnario": "Accepting Fare Payment from a Farecard using Period Pass \u2013 MDP Termination Pending on FLATFARE BASED SA Tool", "Test_Sce_Description": "This scenario tests the functionality of the SA Tool when a farecard with a pending termination is used for payment on the FLATFARE BASED SA Tool.", "Expected_Results": "The SA Tool should process the MDP termination. If the terminated pass is still valid, the payment should be processed as a period pass payment. If the pass is invalid, an ePurse fare payment should be processed."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Virtual Card", "Use_Case_Name": "Accepting Fare Payment on an Online SA Tool from a Virtual Card using Period Pass \u2013 Limited Period Pass", "Test_Scnario": "Testing the functionality of the SA Tool when the Limited Period Pass is not valid at the current time", "Test_Sce_Description": "This scenario is to test if the SA Tool correctly detects that the Limited Period Pass is not valid at the current time, computes the value to be deducted from the e-Purse, and deducts the fare.", "Expected_Results": "The SA Tool should correctly detect the invalidity of the Limited Period Pass, compute the correct fare to be deducted from the e-Purse and deduct the fare successfully."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Virtual Card", "Use_Case_Name": "Accepting Fare Payment on an Online SA Tool from a Virtual Card using Period Pass \u2013 Limited Period Pass", "Test_Scnario": "Testing the functionality of the SA Tool when the customer has an Anonymous Farecard with an Expired Period Pass and ePurse Balance Less than the Fare Amount", "Test_Sce_Description": "This scenario is to test if the SA Tool correctly detects that the customer has an Anonymous Farecard with an Expired Period Pass and ePurse Balance Less than the Fare Amount and returns a declined result back to the SA Tool.", "Expected_Results": "The SA Tool should correctly detect the customer's card status and return a declined result. The SA Tool application should display a declined message to the customer and the transaction should not be conducted."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Virtual Card", "Use_Case_Name": "Accepting Fare Payment on an Online SA Tool from a Virtual Card using Period Pass \u2013 Limited Period Pass", "Test_Scnario": "Testing the functionality of the SA Tool when the customer\u2019s Farecard is blocked", "Test_Sce_Description": "This scenario is to test if the SA Tool correctly detects that the customer\u2019s Farecard is blocked and returns a declined result back to the SA Tool.", "Expected_Results": "The SA Tool should correctly detect the blocked status of the customer's Farecard and return a declined result. The SA Tool application should display a declined message to the customer and the transaction should not be conducted."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Virtual Card", "Use_Case_Name": "Accepting Fare Payment on an Online SA Tool from a Virtual Card using Period Pass \u2013 Limited Period Pass", "Test_Scnario": "Testing the functionality of the SA Tool when the customer\u2019s Virtual Card is on the Deny List", "Test_Sce_Description": "This scenario is to test if the SA Tool correctly detects that the customer\u2019s Virtual Card is on the Deny List, removes the card from the Deny List, sets it to blocked and returns a declined result back to the SA Tool.", "Expected_Results": "The SA Tool should correctly detect the customer's card status, remove the card from the Deny List, set it to blocked and return a declined result. The SA Tool application should display a declined message to the customer and the transaction should not be conducted."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Virtual Card", "Use_Case_Name": "Accepting Fare Payment on an Online SA Tool from a Virtual Card using Period Pass \u2013 Limited Period Pass", "Test_Scnario": "Testing the functionality of the SA Tool when the battery goes below the low battery threshold during payment", "Test_Sce_Description": "This scenario is to test if the SA Tool correctly switches to \u201cOut of Service\u201d mode when the battery goes below the low battery threshold during payment.", "Expected_Results": "The SA Tool should correctly detect the low battery status and switch to \u201cOut of Service\u201d mode during payment."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Virtual Card", "Use_Case_Name": "Accepting Fare Payment on an Online SA Tool from a Virtual Card using Period Pass \u2013 Limited Period Pass", "Test_Scnario": "Testing the functionality of the SA Tool when the customer taps a card that is not a Farecard", "Test_Sce_Description": "This scenario is to test if the SA Tool correctly detects that the customer\u2019s card is not a Farecard and returns a declined result back to the SA Tool.", "Expected_Results": "The SA Tool should correctly detect the customer's card status and return a declined result. The SA Tool application should display a declined message to the customer and the transaction should not be conducted."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Virtual Card", "Use_Case_Name": "Accepting Fare Payment on an Online SA Tool from a Virtual Card using Period Pass \u2013 Limited Period Pass outside of valid time with sufficient e-Purse balance", "Test_Scnario": "Testing the functionality of the ATS detecting an invalid Limited Period Pass", "Test_Sce_Description": "This scenario tests the functionality of the ATS in detecting that the Limited Period Pass is not valid at the current time, computing the value to be deducted from the e-Purse, and deducting the fare.", "Expected_Results": "The ATS should be able to accurately detect the invalidity of the Limited Period Pass, compute the correct fare to be deducted from the e-Purse, and successfully deduct the fare."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Virtual Card", "Use_Case_Name": "Accepting Fare Payment on an Online SA Tool from a Virtual Card using Period Pass \u2013 Limited Period Pass outside of valid time with sufficient e-Purse balance", "Test_Scnario": "Testing the functionality of the ATS detecting an Anonymous Farecard with an Expired Period Pass and ePurse Balance Less than the Fare Amount", "Test_Sce_Description": "This scenario tests the functionality of the ATS in detecting that the card is Anonymous and the ePurse Balance is less than the fare amount.", "Expected_Results": "The ATS should be able to accurately detect the Anonymous card and the insufficient ePurse Balance, and return a declined result back to the SA Tool."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Virtual Card", "Use_Case_Name": "Accepting Fare Payment on an Online SA Tool from a Virtual Card using Period Pass \u2013 Limited Period Pass outside of valid time with sufficient e-Purse balance", "Test_Scnario": "Testing the functionality of the ATS detecting a blocked Farecard", "Test_Sce_Description": "This scenario tests the functionality of the ATS in detecting that the card is blocked.", "Expected_Results": "The ATS should be able to accurately detect the blocked card and return a declined result back to the SA Tool."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Virtual Card", "Use_Case_Name": "Accepting Fare Payment on an Online SA Tool from a Virtual Card using Period Pass \u2013 Limited Period Pass outside of valid time with sufficient e-Purse balance", "Test_Scnario": "Testing the functionality of the ATS detecting a Virtual Card on the Deny List", "Test_Sce_Description": "This scenario tests the functionality of the ATS in detecting that the card is on the Deny List, removing the card from the Deny List and setting it to blocked.", "Expected_Results": "The ATS should be able to accurately detect the card on the Deny List, remove it from the list, set it to blocked, and return a declined result back to the SA Tool."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Virtual Card", "Use_Case_Name": "Accepting Fare Payment on an Online SA Tool from a Virtual Card using Period Pass \u2013 Limited Period Pass outside of valid time with sufficient e-Purse balance", "Test_Scnario": "Testing the functionality of the SA Tool when the battery goes below the low battery threshold during payment", "Test_Sce_Description": "This scenario tests the functionality of the SA Tool when the battery goes below the low battery threshold during payment.", "Expected_Results": "The SA Tool should be able to switch to \u201cOut of Service\u201d mode when the low battery threshold is reached."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Virtual Card", "Use_Case_Name": "Accepting Fare Payment on an Online SA Tool from a Virtual Card using Period Pass \u2013 Limited Period Pass outside of valid time with sufficient e-Purse balance", "Test_Scnario": "Testing the functionality of the SA Tool when a card that is not a Farecard is tapped", "Test_Sce_Description": "This scenario tests the functionality of the SA Tool when a card that is not a Farecard is tapped.", "Expected_Results": "The SA Tool should be able to detect that the card is not a Farecard and display a declined message to the customer."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Virtual Card", "Use_Case_Name": "Accepting Fare Payment on an Online SA Tool from a Virtual Card using Period Pass \u2013 Limited Period Pass outside of valid time with sufficient e-Purse balance", "Test_Scnario": "Testing the functionality of the SA Tool when the tap counter is at the limit", "Test_Sce_Description": "This scenario tests the functionality of the SA Tool when the tap counter is at the limit.", "Expected_Results": "The SA Tool should be able to detect that the tap counter is at the limit and display a declined message to the customer."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Virtual Card", "Use_Case_Name": "Accepting Fare Payment on an Online SA Tool from a Virtual Card using Period Pass \u2013 Limited Period Pass outside of valid time with sufficient e-Purse balance", "Test_Scnario": "Testing the functionality of the SA Tool when the Virtual Card is unreadable", "Test_Sce_Description": "This scenario tests the functionality of the SA Tool when the Virtual Card is unreadable.", "Expected_Results": "The SA Tool should be able to detect that the Virtual Card is unreadable and indicate to the operator that the Virtual Card is unreadable."}, {"Function_Flow_Name": "Fare Payment", "Sub_Flow_Name": "Virtual Card", "Use_Case_Name": "Accepting Fare Payment on an Online SA Tool from a Virtual Card using Period Pass \u2013 Limited Period Pass outside of valid time with sufficient e-Purse balance", "Test_Scnario": "Testing the functionality of the ATS when the Virtual Card has an expired period pass and sufficient ePurse balance", "Test_Sce_Description": "This scenario tests the functionality of the ATS when the Virtual Card has an expired period pass and sufficient ePurse balance.", "Expected_Results": "The ATS should be able to detect that the Virtual Card has an expired period pass and sufficient ePurse balance, and process the fare payment accordingly."}]